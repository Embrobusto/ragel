host( "working/include2.rl", 1 ) @{/*
	* @@LANG: c
	*/
	
	#include <stdio.h>
	#include <string.h>
	
	
	
	
	
}@
array s8 _include_test_1_actions( 0, 9 ) = { 0, 1, 0, 1, 4, 1, 7, 1, 9, 2, 1, 2, 2, 5, 3, 2, 8, 6, 0 };

array s8 _include_test_1_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _include_test_1_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _include_test_1_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _include_test_1_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int include_test_1_start = 1;
value int include_test_1_first_final = 8;
value int include_test_1_error = 0;

value int include_test_1_en_main = 1;

host( "working/include2.rl", 35 ) @{
	
	void test( char *p )
	{
		int cs;
	}@
	{
		cs = cast(int)include_test_1_start;
	}
	host( "working/include2.rl", 40 ) @{
	}@
	{
		index s8 _acts;
		uint _nacts;
		
		int _nbreak;
		if ( cs == 0 )
		goto _out;
		_resume:
		switch ( cs ) {
			case 1:
			if ( ( deref( data, p )) == 97 ) {
				goto ctr0;
			}
			{
				goto ctr1;
			}
			case 0:
			goto _out;
			case 2:
			if ( ( deref( data, p )) == 98 ) {
				goto ctr2;
			}
			{
				goto ctr1;
			}
			case 3:
			if ( ( deref( data, p )) == 97 ) {
				goto ctr3;
			}
			{
				goto ctr1;
			}
			case 4:
			if ( ( deref( data, p )) == 98 ) {
				goto ctr4;
			}
			{
				goto ctr1;
			}
			case 5:
			if ( ( deref( data, p )) == 97 ) {
				goto ctr5;
			}
			{
				goto ctr1;
			}
			case 6:
			if ( ( deref( data, p )) == 98 ) {
				goto ctr6;
			}
			{
				goto ctr1;
			}
			case 7:
			if ( ( deref( data, p )) == 0 ) {
				goto ctr7;
			}
			{
				goto ctr1;
			}
			case 8:
			{
				goto ctr1;
			}
		}
		
		ctr1: cs = 0; goto _again;
		ctr0: cs = 2; goto f0;
		ctr2: cs = 3; goto f1;
		ctr3: cs = 4; goto f2;
		ctr4: cs = 5; goto f3;
		ctr5: cs = 6; goto f4;
		ctr6: cs = 7; goto f5;
		ctr7: cs = 8; goto f6;
		
		f0: _acts = offset( _include_test_1_actions, 1 ); goto execFuncs;
		f2: _acts = offset( _include_test_1_actions, 3 ); goto execFuncs;
		f4: _acts = offset( _include_test_1_actions, 5 ); goto execFuncs;
		f6: _acts = offset( _include_test_1_actions, 7 ); goto execFuncs;
		f1: _acts = offset( _include_test_1_actions, 9 ); goto execFuncs;
		f3: _acts = offset( _include_test_1_actions, 12 ); goto execFuncs;
		f5: _acts = offset( _include_test_1_actions, 15 ); goto execFuncs;
		
		execFuncs:
		_nbreak = 0;
		_nacts = cast(uint)deref( _include_test_1_actions, _acts );
		_acts += 1;
		while ( _nacts > 0 ) {
			switch ( deref( _include_test_1_actions, _acts ) ) {
				case 0{
					host( "./include1.rl", 11 ) ${printf(" a1");}$
				}
				case 1{
					host( "./include1.rl", 12 ) ${printf(" b1");}$
				}
				case 2{
					host( "./include1.rl", 14 ) ${printf(" nr1");}$
				}
				case 3{
					host( "./include1.rl", 23 ) ${printf(" nr2");}$
				}
				case 4{
					host( "./include1.rl", 25 ) ${printf(" a2");}$
				}
				case 5{
					host( "./include1.rl", 26 ) ${printf(" b2");}$
				}
				case 6{
					host( "working/include2.rl", 11 ) ${printf(" nr3");}$
				}
				case 7{
					host( "working/include2.rl", 13 ) ${printf(" a3");}$
				}
				case 8{
					host( "working/include2.rl", 14 ) ${printf(" b3");}$
				}
				case 9{
					host( "working/include2.rl", 31 ) ${${p += 1;  _nbreak = 1; }$}$
				}
			}
			_acts += 1;
			_nacts -= 1;
		}
		
		if ( _nbreak == 1 )
		goto _out;
		goto _again;
		
		_again:
		if ( cs == 0 )
		goto _out;
		p += 1;
		goto _resume;
		_out: {}
	}
	host( "working/include2.rl", 41 ) @{
		printf("\n");
	}
	
	int main()
	{
		test( "ababab" );
		return 0;
	}
	
}@