lex start
{
	ignore /[ \t]+/
	literal '*', '(', ')', '^', ';', '\n'
	token id /[a-zA-Z_]+/
}

global Out: parser<out> = construct parser<out> []

def out_item
	[id]
|	['(' item* ')']

def out 
	[out_item*]

def item 
	[id]
	{
		send Out r1
	}
|	['(' item* ')']
	{
		send Out '('
		send Out r2
		send Out ')'
	}

def A1 []
def A2 []


def start 
	[A1 item* '^']
|	[A2 item* ';' '\n']

Input: start = parse start( stdin )
print( Input )
