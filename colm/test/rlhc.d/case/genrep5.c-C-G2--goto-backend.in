host( "working/genrep5.rl", 1 ) @{/*
	* @@LANG: c
	*/
	
	#include <stddef.h>
	#include <stdint.h>
	#include <stdlib.h> 
	#include <stdbool.h>
	#include <string.h>
	#include <stdio.h>
	
	const char s[4096];
	
	struct nfa_stack
	{
		void *data;
		unsigned long sz;
	};
	
	struct nfa_bp_rec
	{
		long state;
		const char *p;
		long popTrans;
		long q_2;
	};
	
}@
value int genrep_start = 1;
value int genrep_first_final = 16;
value int genrep_error = 0;

value int genrep_en_main = 1;

array s8 _genrep_nfa_targs( 0, 10 ) = { 0, 1, 7, 3, 10, 7, 9, 0 };

array s8 _genrep_nfa_offsets( 0, 3 ) = { 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _genrep_nfa_push_actions( 0, 1 ) = { 0, 0, 1, 0, 1, 1, 1, 0 };

array s8 _genrep_nfa_pop_trans( 0, 8 ) = { 0, 0, 4, 0, 8, 7, 6, 0 };

host( "working/genrep5.rl", 76 ) @{
	
	int test( const char *p )
	{
		int len = strlen( p ) + 1;
		const char *pe = p + len;
		int cs;
		
		struct nfa_bp_rec *nfa_bp = (struct nfa_bp_rec*) s;
		long nfa_len = 0;
		long nfa_count = 0;
		
		long q_2 = 0;
		
		printf( "testing: %s\n", p );
		
	}@
	{
		cs = cast(int)genrep_start;
		nfa_len = 0;
	}
	
	{
		if ( p == pe )
		goto _test_eof;
		_resume:
		switch ( cs )
		{
			case 1:
			goto st_case_1;
			case 0:
			goto st_case_0;
			case 2:
			goto st_case_2;
			case 3:
			goto st_case_3;
			case 4:
			goto st_case_4;
			case 5:
			goto st_case_5;
			case 6:
			goto st_case_6;
			case 7:
			goto st_case_7;
			case 8:
			goto st_case_8;
			case 10:
			goto st_case_10;
			case 11:
			goto st_case_11;
			case 12:
			goto st_case_12;
			case 13:
			goto st_case_13;
			case 14:
			goto st_case_14;
			case 15:
			goto st_case_15;
			case 16:
			goto st_case_16;
			case 9:
			goto st_case_9;
		}
		goto st_out;
		st_case_1:
		if ( _genrep_nfa_offsets[1] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[1]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[1] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[1] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[1] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(104) ) {
			goto st2;
		}
		{
			goto st0;
		}
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		st2:
		p+= 1;
		if ( p == pe )
		goto _test_eof2;
		st_case_2:
		if ( _genrep_nfa_offsets[2] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[2]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[2] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[2] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[2] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(101) ) {
			goto st3;
		}
		{
			goto st0;
		}
		st3:
		p+= 1;
		if ( p == pe )
		goto _test_eof3;
		st_case_3:
		if ( _genrep_nfa_offsets[3] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[3]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[3] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[3] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[3] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(108) ) {
			goto st4;
		}
		{
			goto st0;
		}
		st4:
		p+= 1;
		if ( p == pe )
		goto _test_eof4;
		st_case_4:
		if ( _genrep_nfa_offsets[4] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[4]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[4] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[4] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[4] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(108) ) {
			goto st5;
		}
		{
			goto st0;
		}
		st5:
		p+= 1;
		if ( p == pe )
		goto _test_eof5;
		st_case_5:
		if ( _genrep_nfa_offsets[5] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[5]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[5] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[5] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[5] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(111) ) {
			goto st6;
		}
		{
			goto st0;
		}
		st6:
		p+= 1;
		if ( p == pe )
		goto _test_eof6;
		st_case_6:
		if ( _genrep_nfa_offsets[6] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[6]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[6] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[6] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[6] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		{
			goto st0;
		}
		st_case_7:
		if ( _genrep_nfa_offsets[7] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[7]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[7] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[7] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[7] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(32) ) {
			goto st8;
		}
		{
			goto st0;
		}
		st8:
		p+= 1;
		if ( p == pe )
		goto _test_eof8;
		st_case_8:
		if ( _genrep_nfa_offsets[8] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[8]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[8] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[8] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[8] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		{
			goto st0;
		}
		st_case_10:
		if ( _genrep_nfa_offsets[10] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[10]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[10] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[10] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[10] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(116) ) {
			goto st11;
		}
		{
			goto st0;
		}
		st11:
		p+= 1;
		if ( p == pe )
		goto _test_eof11;
		st_case_11:
		if ( _genrep_nfa_offsets[11] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[11]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[11] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[11] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[11] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(104) ) {
			goto st12;
		}
		{
			goto st0;
		}
		st12:
		p+= 1;
		if ( p == pe )
		goto _test_eof12;
		st_case_12:
		if ( _genrep_nfa_offsets[12] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[12]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[12] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[12] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[12] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(101) ) {
			goto st13;
		}
		{
			goto st0;
		}
		st13:
		p+= 1;
		if ( p == pe )
		goto _test_eof13;
		st_case_13:
		if ( _genrep_nfa_offsets[13] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[13]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[13] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[13] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[13] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(114) ) {
			goto st14;
		}
		{
			goto st0;
		}
		st14:
		p+= 1;
		if ( p == pe )
		goto _test_eof14;
		st_case_14:
		if ( _genrep_nfa_offsets[14] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[14]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[14] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[14] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[14] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		if ( ( deref( data, p )) == u(101) ) {
			goto st15;
		}
		{
			goto st0;
		}
		st15:
		p+= 1;
		if ( p == pe )
		goto _test_eof15;
		st_case_15:
		if ( _genrep_nfa_offsets[15] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[15]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[15] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[15] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[15] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		{
			goto ctr12;
		}
		ctr12:
		host( "working/genrep5.rl", 71 ) ${
			printf( "------ MATCH\n" );
		}$
		
		goto st16;
		st16:
		p+= 1;
		if ( p == pe )
		goto _test_eof16;
		st_case_16:
		if ( _genrep_nfa_offsets[16] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[16]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[16] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[16] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[16] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		{
			goto st0;
		}
		st_case_9:
		if ( _genrep_nfa_offsets[9] ) {
			int alt = 0; 
			int new_recs = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[9]];
			while ( alt < new_recs ) { 
				nfa_bp[nfa_len].state = _genrep_nfa_targs[cast(int)_genrep_nfa_offsets[9] + 1 + alt];
				nfa_bp[nfa_len].p = p;
				nfa_bp[nfa_len].popTrans = cast(long)_genrep_nfa_offsets[9] + 1 + alt;
				
				switch ( _genrep_nfa_push_actions[cast(int)_genrep_nfa_offsets[9] + 1 + alt] ) {
					case 1 {
						host( "working/genrep5.rl", 33 ) ${
							nfa_bp[nfa_len].q_2 = q_2;
						}$
					}
				}
				nfa_len += 1;
				alt += 1;
			}
		}
		{
			goto st0;
		}
		st_out:
		_test_eof2: cs = 2; goto _test_eof; 
		_test_eof3: cs = 3; goto _test_eof; 
		_test_eof4: cs = 4; goto _test_eof; 
		_test_eof5: cs = 5; goto _test_eof; 
		_test_eof6: cs = 6; goto _test_eof; 
		_test_eof8: cs = 8; goto _test_eof; 
		_test_eof11: cs = 11; goto _test_eof; 
		_test_eof12: cs = 12; goto _test_eof; 
		_test_eof13: cs = 13; goto _test_eof; 
		_test_eof14: cs = 14; goto _test_eof; 
		_test_eof15: cs = 15; goto _test_eof; 
		_test_eof16: cs = 16; goto _test_eof; 
		
		_test_eof: {}
		_out: {}
		if ( nfa_len > 0 ) {
			nfa_count += 1;
			nfa_len -= 1;
			p = nfa_bp[nfa_len].p;
			int _pop_test = 1;
			switch ( _genrep_nfa_pop_trans[nfa_bp[nfa_len].popTrans] ) {
				case 6 {
					_pop_test = host( "working/genrep5.rl", 38 ) ={ ({
							q_2 = nfa_bp[nfa_len].q_2;
							1;
						}) }=;
					if ( !_pop_test ) break;
					_pop_test = host( "working/genrep5.rl", 47 ) ={
						({ 1; })
					}=;
					
				}
				case 7 {
					_pop_test = host( "working/genrep5.rl", 38 ) ={ ({
							q_2 = nfa_bp[nfa_len].q_2;
							1;
						}) }=;
					if ( !_pop_test ) break;
					_pop_test = host( "working/genrep5.rl", 51 ) ={
						({ ++q_2 < 2; })
					}=;
					
				}
				case 8 {
					_pop_test = host( "working/genrep5.rl", 38 ) ={ ({
							q_2 = nfa_bp[nfa_len].q_2;
							1;
						}) }=;
					if ( !_pop_test ) break;
					_pop_test = host( "working/genrep5.rl", 55 ) ={
						({ ++q_2 >= 2; })
					}=;
					
				}
				case 4 {
					_pop_test = host( "working/genrep5.rl", 38 ) ={ ({
							q_2 = nfa_bp[nfa_len].q_2;
							1;
						}) }=;
					if ( !_pop_test ) break;
					host( "working/genrep5.rl", 60 ) ${
						printf( "  -> leaving\n" );
					}$
					_pop_test = host( "working/genrep5.rl", 43 ) ={
						({  q_2 = 0; 1; })
					}=;
					
				}
			}
			if ( _pop_test ) {
				cs = nfa_bp[nfa_len].state;
				goto _resume;
			}
			goto _out;
		}
	}
	host( "working/genrep5.rl", 96 ) @{
		
		return 0;
	}
	
	int main()
	{
		test( "hellothere" );
		test( "hello there" );
		test( "hello  there" );
		test( "hello   there" );
		test( "hello    there" );
		return 0;
	}
	
}@