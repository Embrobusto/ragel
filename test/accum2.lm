context ctx
{
	int i
	int j
	int k

	lex start
	{
		ignore /space+/
		literal '*', '(', ')'
		token id /[a-zA-Z_]+/ 
	}

	def foo [id]

	def item 
		[id]
	|	[foo]
	|	['(' item* ')']
		{
			i = 0
		}

	def start 
		[item*]
}


parser start_parser [ctx::start]
start_parser SP = cons start_parser[]
SP.ctx = cons ctx []
SP << stdin
ctx::start Input = SP.finish()
print( Input, '\n' )


