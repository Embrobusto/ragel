context ctx
{
	int i
	int j
	int k

	lex start
	{
		ignore /space+/
		literal '*', '(', ')'
		token id /[a-zA-Z_]+/ 
	}

	def foo [id]

	int f()
	{
		i = i + 1
	}

	def item 
		[id]
	|	[foo]
	|	['(' item* ')']
		{
			i = 0
			f()
			f()
			f()
			print( i, '\n' )
		}
	

	def start 
		[item*]
}

ctx CTX = cons ctx []
ctx::start Input = parse ctx::start( CTX, stdin )
print( Input, '\n' )


