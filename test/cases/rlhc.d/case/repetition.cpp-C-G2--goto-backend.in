host( "working/repetition.rl", 1 ) @{/*
	* @@LANG: c++
	*/
	
	/* Test repeptition operators. */
	
	#include <iostream>
	#include <stdlib.h>
	#include <stdio.h>
	#include <string.h>
	
	using namespace std;
	
	struct Rep
	{
		int cs;
		
		int init( );
		int execute( const char *data, int len );
		int finish( );
	};
	
	
	
}@
value int Rep_start = 1;
value int Rep_first_final = 27;
value int Rep_error = 0;

value int Rep_en_main = 1;

array s8 _Rep_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _Rep_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _Rep_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _Rep_nfa_pop_trans( 0, 0 ) = { 0, 0 };

host( "working/repetition.rl", 43 ) @{
	
	int Rep::init( )
	{
	}@
	{
		cs = cast(int)Rep_start;
	}
	host( "working/repetition.rl", 47 ) @{
		return 1;
	}
	
	int Rep::execute( const char *_data, int _len )
	{
		const char *p = _data;
		const char *pe = _data+_len;
		
	}@
	{
		if ( p == pe )
		goto _test_eof;
		switch ( cs )
		{
			case 1:
			goto st_case_1;
			case 0:
			goto st_case_0;
			case 2:
			goto st_case_2;
			case 3:
			goto st_case_3;
			case 4:
			goto st_case_4;
			case 5:
			goto st_case_5;
			case 6:
			goto st_case_6;
			case 27:
			goto st_case_27;
			case 7:
			goto st_case_7;
			case 8:
			goto st_case_8;
			case 9:
			goto st_case_9;
			case 10:
			goto st_case_10;
			case 11:
			goto st_case_11;
			case 12:
			goto st_case_12;
			case 13:
			goto st_case_13;
			case 14:
			goto st_case_14;
			case 15:
			goto st_case_15;
			case 16:
			goto st_case_16;
			case 17:
			goto st_case_17;
			case 18:
			goto st_case_18;
			case 19:
			goto st_case_19;
			case 20:
			goto st_case_20;
			case 21:
			goto st_case_21;
			case 22:
			goto st_case_22;
			case 23:
			goto st_case_23;
			case 24:
			goto st_case_24;
			case 25:
			goto st_case_25;
			case 26:
			goto st_case_26;
		}
		goto st_out;
		ctr29:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		
		goto st1;
		st1:
		p+= 1;
		if ( p == pe )
		goto _test_eof1;
		st_case_1:
		switch( ( deref( data, p )) ) {
			case 45: {
				goto st2;
			}
			case 97: {
				goto ctr2;
			}
		}
		{
			goto st0;
		}
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		st2:
		p+= 1;
		if ( p == pe )
		goto _test_eof2;
		st_case_2:
		if ( ( deref( data, p )) == 10 ) {
			goto st3;
		}
		{
			goto st0;
		}
		ctr20:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		
		goto st3;
		st3:
		p+= 1;
		if ( p == pe )
		goto _test_eof3;
		st_case_3:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto st3;
			}
			case 45: {
				goto st4;
			}
			case 98: {
				goto ctr5;
			}
		}
		{
			goto st0;
		}
		st4:
		p+= 1;
		if ( p == pe )
		goto _test_eof4;
		st_case_4:
		if ( ( deref( data, p )) == 10 ) {
			goto st5;
		}
		{
			goto st0;
		}
		ctr19:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		
		goto st5;
		st5:
		p+= 1;
		if ( p == pe )
		goto _test_eof5;
		st_case_5:
		switch( ( deref( data, p )) ) {
			case 45: {
				goto st6;
			}
			case 99: {
				goto ctr8;
			}
		}
		{
			goto st0;
		}
		st6:
		p+= 1;
		if ( p == pe )
		goto _test_eof6;
		st_case_6:
		if ( ( deref( data, p )) == 10 ) {
			goto st27;
		}
		{
			goto st0;
		}
		ctr11:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		
		goto st27;
		st27:
		p+= 1;
		if ( p == pe )
		goto _test_eof27;
		st_case_27:
		if ( ( deref( data, p )) == 100 ) {
			goto ctr30;
		}
		{
			goto st0;
		}
		ctr30:
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st7;
		st7:
		p+= 1;
		if ( p == pe )
		goto _test_eof7;
		st_case_7:
		if ( ( deref( data, p )) == 100 ) {
			goto ctr10;
		}
		{
			goto st0;
		}
		ctr10:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st8;
		st8:
		p+= 1;
		if ( p == pe )
		goto _test_eof8;
		st_case_8:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr11;
			}
			case 100: {
				goto ctr12;
			}
		}
		{
			goto st0;
		}
		ctr12:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st9;
		st9:
		p+= 1;
		if ( p == pe )
		goto _test_eof9;
		st_case_9:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr11;
			}
			case 100: {
				goto ctr13;
			}
		}
		{
			goto st0;
		}
		ctr13:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st10;
		st10:
		p+= 1;
		if ( p == pe )
		goto _test_eof10;
		st_case_10:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr11;
			}
			case 100: {
				goto ctr14;
			}
		}
		{
			goto st0;
		}
		ctr14:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st11;
		st11:
		p+= 1;
		if ( p == pe )
		goto _test_eof11;
		st_case_11:
		if ( ( deref( data, p )) == 10 ) {
			goto ctr11;
		}
		{
			goto st0;
		}
		ctr8:
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st12;
		st12:
		p+= 1;
		if ( p == pe )
		goto _test_eof12;
		st_case_12:
		if ( ( deref( data, p )) == 99 ) {
			goto ctr15;
		}
		{
			goto st0;
		}
		ctr15:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st13;
		st13:
		p+= 1;
		if ( p == pe )
		goto _test_eof13;
		st_case_13:
		if ( ( deref( data, p )) == 99 ) {
			goto ctr16;
		}
		{
			goto st0;
		}
		ctr16:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st14;
		st14:
		p+= 1;
		if ( p == pe )
		goto _test_eof14;
		st_case_14:
		if ( ( deref( data, p )) == 99 ) {
			goto ctr17;
		}
		{
			goto st0;
		}
		ctr17:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st15;
		st15:
		p+= 1;
		if ( p == pe )
		goto _test_eof15;
		st_case_15:
		if ( ( deref( data, p )) == 99 ) {
			goto ctr18;
		}
		{
			goto st0;
		}
		ctr18:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st16;
		st16:
		p+= 1;
		if ( p == pe )
		goto _test_eof16;
		st_case_16:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr19;
			}
			case 99: {
				goto ctr18;
			}
		}
		{
			goto st0;
		}
		ctr5:
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st17;
		st17:
		p+= 1;
		if ( p == pe )
		goto _test_eof17;
		st_case_17:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr20;
			}
			case 98: {
				goto ctr21;
			}
		}
		{
			goto st0;
		}
		ctr21:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st18;
		st18:
		p+= 1;
		if ( p == pe )
		goto _test_eof18;
		st_case_18:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr20;
			}
			case 98: {
				goto ctr22;
			}
		}
		{
			goto st0;
		}
		ctr22:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st19;
		st19:
		p+= 1;
		if ( p == pe )
		goto _test_eof19;
		st_case_19:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr20;
			}
			case 98: {
				goto ctr23;
			}
		}
		{
			goto st0;
		}
		ctr23:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st20;
		st20:
		p+= 1;
		if ( p == pe )
		goto _test_eof20;
		st_case_20:
		switch( ( deref( data, p )) ) {
			case 10: {
				goto ctr20;
			}
			case 98: {
				goto ctr24;
			}
		}
		{
			goto st0;
		}
		ctr24:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st21;
		st21:
		p+= 1;
		if ( p == pe )
		goto _test_eof21;
		st_case_21:
		if ( ( deref( data, p )) == 10 ) {
			goto ctr20;
		}
		{
			goto st0;
		}
		ctr2:
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st22;
		st22:
		p+= 1;
		if ( p == pe )
		goto _test_eof22;
		st_case_22:
		if ( ( deref( data, p )) == 97 ) {
			goto ctr25;
		}
		{
			goto st0;
		}
		ctr25:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st23;
		st23:
		p+= 1;
		if ( p == pe )
		goto _test_eof23;
		st_case_23:
		if ( ( deref( data, p )) == 97 ) {
			goto ctr26;
		}
		{
			goto st0;
		}
		ctr26:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st24;
		st24:
		p+= 1;
		if ( p == pe )
		goto _test_eof24;
		st_case_24:
		if ( ( deref( data, p )) == 97 ) {
			goto ctr27;
		}
		{
			goto st0;
		}
		ctr27:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st25;
		st25:
		p+= 1;
		if ( p == pe )
		goto _test_eof25;
		st_case_25:
		if ( ( deref( data, p )) == 97 ) {
			goto ctr28;
		}
		{
			goto st0;
		}
		ctr28:
		host( "working/repetition.rl", 28 ) ${ cout << "end" << endl; }$
		host( "working/repetition.rl", 26 ) ${ cout << "begin" << endl; }$
		host( "working/repetition.rl", 27 ) ${ cout << "in" << endl; }$
		
		goto st26;
		st26:
		p+= 1;
		if ( p == pe )
		goto _test_eof26;
		st_case_26:
		if ( ( deref( data, p )) == 10 ) {
			goto ctr29;
		}
		{
			goto st0;
		}
		st_out:
		_test_eof1: cs = 1; goto _test_eof; 
		_test_eof2: cs = 2; goto _test_eof; 
		_test_eof3: cs = 3; goto _test_eof; 
		_test_eof4: cs = 4; goto _test_eof; 
		_test_eof5: cs = 5; goto _test_eof; 
		_test_eof6: cs = 6; goto _test_eof; 
		_test_eof27: cs = 27; goto _test_eof; 
		_test_eof7: cs = 7; goto _test_eof; 
		_test_eof8: cs = 8; goto _test_eof; 
		_test_eof9: cs = 9; goto _test_eof; 
		_test_eof10: cs = 10; goto _test_eof; 
		_test_eof11: cs = 11; goto _test_eof; 
		_test_eof12: cs = 12; goto _test_eof; 
		_test_eof13: cs = 13; goto _test_eof; 
		_test_eof14: cs = 14; goto _test_eof; 
		_test_eof15: cs = 15; goto _test_eof; 
		_test_eof16: cs = 16; goto _test_eof; 
		_test_eof17: cs = 17; goto _test_eof; 
		_test_eof18: cs = 18; goto _test_eof; 
		_test_eof19: cs = 19; goto _test_eof; 
		_test_eof20: cs = 20; goto _test_eof; 
		_test_eof21: cs = 21; goto _test_eof; 
		_test_eof22: cs = 22; goto _test_eof; 
		_test_eof23: cs = 23; goto _test_eof; 
		_test_eof24: cs = 24; goto _test_eof; 
		_test_eof25: cs = 25; goto _test_eof; 
		_test_eof26: cs = 26; goto _test_eof; 
		
		_test_eof: {}
		_out: {}
	}
	host( "working/repetition.rl", 56 ) @{
		
		if ( cs == Rep_error )
		return -1;
		if ( cs >= Rep_first_final )
		return 1;
		return 0;
	}
	
	int Rep::finish( )
	{
		if ( cs == Rep_error )
		return -1;
		if ( cs >= Rep_first_final )
		return 1;
		return 0;
	}
	
	void test( const char *buf )
	{
		Rep rep;
		int len = strlen( buf );
		rep.init();
		rep.execute( buf, len );
		if ( rep.finish() > 0 )
		printf("ACCEPT\n");
		else
		printf("FAIL\n");
	}
	
	int main()
	{
		test(
		"aaaaa\n"
		"-\n"
		"\n"
		"b\n"
		"bb\n"
		"bbb\n"
		"bbbb\n"
		"bbbbb\n"
		"-\n"
		"ccccc\n"
		"ccccccc\n"
		"cccccccccc\n"
		"-\n"
		"dd\n"
		"ddd\n"
		"dddd\n"
		"ddddd\n"
		);
		
		test(
		"a\n"
		"-\n"
		"b\n"
		"-\n"
		"c\n"
		"-\n"
		"d\n"
		);
		
		return 0;
	}
	
}@