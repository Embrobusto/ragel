host( "working/scan4_go.rl", 1 ) @{/*
	* @@LANG: go
	* @@GENERATED: true
	*/
	
	package main
	import "fmt"
	
	var ts  int ;
	var te  int ;
	var act  int ;
	var token  int ;
	
	
	
	
	var cs int;
	var blen int;
	var buffer [1024] byte;
	
}@
value int scanner_start = 1;
value int scanner_first_final = 1;
value int scanner_error = -1;

value int scanner_en_main = 1;

array s8 _scanner_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _scanner_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0 };

array s8 _scanner_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _scanner_nfa_pop_trans( 0, 0 ) = { 0, 0 };

host( "working/scan4_go.rl", 34 ) @{
	
	func prepare() {
	}@
	{
		cs = cast(int)scanner_start;
		ts = nil;
		te = nil;
		act = 0;
	}
	host( "working/scan4_go.rl", 37 ) @{
	}
	
	func exec(data string) {
		var p int = 0
		var pe int = len(data)
		var eof int = pe
	}@
	{
		if ( p == pe )
		goto _test_eof;
		switch ( cs )
		{
			case 1:
			goto st_case_1;
			case 2:
			goto st_case_2;
			case 0:
			goto st_case_0;
		}
		goto st_out;
		ctr7:
		host( "NONE", 1 ) ${${switch( act ) {
					case 1 {
						p = ((te))-1;
						host( "working/scan4_go.rl", 20 ) ${fmt.Print( "pat1\n" );}$ }
					default {
						p = ((te))-1;
					}
				}}$
		}$
		
		goto st1;
		ctr3:
		host( "working/scan4_go.rl", 22 ) ${${te = p+1;host( "working/scan4_go.rl", 22 ) ${fmt.Print( "pat2\n" );}$}$}$
		
		goto st1;
		ctr4:
		host( "working/scan4_go.rl", 24 ) ${${te = p+1;}$}$
		
		goto st1;
		st1:
		host( "NONE", 1 ) ${${ts = nil;}$}$
		p+= 1;
		if ( p == pe )
		goto _test_eof1;
		st_case_1:
		host( "NONE", 1 ) ${${ts = p;}$}$
		switch( ( deref( data, p )) ) {
			case 97: {
				goto ctr5;
			}
			case 98: {
				goto ctr6;
			}
		}
		{
			goto ctr4;
		}
		ctr5:
		host( "NONE", 1 ) ${${te = p+1;}$}$
		host( "working/scan4_go.rl", 20 ) ${${act = 1;}$}$
		
		goto st2;
		ctr6:
		host( "NONE", 1 ) ${${te = p+1;}$}$
		host( "working/scan4_go.rl", 24 ) ${${act = 3;}$}$
		
		goto st2;
		st2:
		p+= 1;
		if ( p == pe )
		goto _test_eof2;
		st_case_2:
		if ( ( deref( data, p )) == 99 ) {
			goto ctr3;
		}
		if ( 97 <= ( deref( data, p )) && ( deref( data, p )) <= 98 ) {
			goto st0;
		}
		{
			goto ctr7;
		}
		st0:
		p+= 1;
		if ( p == pe )
		goto _test_eof0;
		st_case_0:
		if ( ( deref( data, p )) == 99 ) {
			goto ctr3;
		}
		if ( 97 <= ( deref( data, p )) && ( deref( data, p )) <= 98 ) {
			goto st0;
		}
		{
			goto ctr7;
		}
		st_out:
		_test_eof1: cs = 1; goto _test_eof; 
		_test_eof2: cs = 2; goto _test_eof; 
		_test_eof0: cs = 0; goto _test_eof; 
		
		_test_eof: {}
		if ( p == eof )
		{
			switch ( cs ) {
				case 2: goto ctr7;
				case 0: goto ctr7;
			}
		}
		
	}
	host( "working/scan4_go.rl", 44 ) @{
	}
	func finish() {
		if cs >= scanner_first_final {
			fmt.Println("ACCEPT")
		} else {
			fmt.Println("FAIL")
		}
	}
	var inp []string = []string {
		"ba a",
	};
	
	func main() {
		for _, data := range inp {
			prepare()
			exec(data)
			finish()
		}
	}
}@