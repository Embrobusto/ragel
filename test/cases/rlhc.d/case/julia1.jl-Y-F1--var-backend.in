host( "working/julia1.rl", 1 ) @{// @@LANG: julia 
	
	
	
}@
array u8 _atoi_trans_keys( 0, 3 ) = { 1, 0, 0, 3, 3, 3, 1, 3, 1, 0, 0 };

array s8 _atoi_char_class( 0, 3 ) = { 0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0 };

array s8 _atoi_index_offsets( 0, 8 ) = { 0, 0, 4, 5, 8, 0 };

array s8 _atoi_indicies( 0, 3 ) = { 0, 1, 1, 2, 2, 3, 1, 2, 0 };

array s8 _atoi_index_defaults( 0, 1 ) = { 0, 1, 1, 1, 1, 0 };

array s8 _atoi_trans_cond_spaces( -1, 0 ) = { -1, -1, -1, -1, 0 };

array s8 _atoi_cond_targs( 0, 4 ) = { 2, 0, 3, 4, 0 };

array s8 _atoi_cond_actions( 0, 1 ) = { 0, 0, 0, 1, 0 };

array s8 _atoi_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _atoi_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0 };

array s8 _atoi_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _atoi_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int atoi_start = 1;
value int atoi_first_final = 4;
value int atoi_error = 0;

value int atoi_en_main = 1;

host( "working/julia1.rl", 12 ) @{
	
	function test( data::String )
	p = 0
	pe = length(data)
	eof = length(data)
	cs = 0
	
}@
{
	cs = cast(int)atoi_start;
}
host( "working/julia1.rl", 20 ) @{
	
}@
{
	uint _trans = 0;
	uint _have = 0;
	uint _cont = 1;
	index u8 _keys;
	index s8 _inds;
	while ( _cont == 1 ) {
		
		if ( cs == 0 )
		_cont = 0;
		_have = 0;
		if ( p == pe ) {
			if ( _have == 0 )
			_cont = 0;
		}
		if ( _cont == 1 ) {
			if ( _have == 0 ) {
				_keys = offset( _atoi_trans_keys, (cs<<1) );
				_inds = offset( _atoi_indicies, _atoi_index_offsets[cs] );
				
				if ( ( deref( data, p )) <= 57 && ( deref( data, p )) >= 45 )
				{
					int _ic = cast(int)_atoi_char_class[cast(int)( deref( data, p )) - 45];
					if ( _ic <= cast(int)deref( _atoi_trans_keys, _keys+1 ) && _ic >= cast(int)deref( _atoi_trans_keys, _keys ) )
					_trans = cast(uint)deref( _atoi_indicies, _inds + cast(int)( _ic - cast(int)deref( _atoi_trans_keys, _keys ) )  ); 
					else
					_trans = cast(uint)_atoi_index_defaults[cs];
				}
				else {
					_trans = cast(uint)_atoi_index_defaults[cs];
				}
				
			}
			if ( _cont == 1 ) {
				cs = cast(int)_atoi_cond_targs[_trans];
				
				switch ( _atoi_cond_actions[_trans] ) {
					case 1 {
						host( "working/julia1.rl", 6 ) ${
							println( "match" );
						}$
					}
				}
				
				if ( cs == 0 )
				_cont = 0;
				if ( _cont == 1 )
				p += 1;
				
			}}
	}
}
host( "working/julia1.rl", 22 ) @{
	end
	
	
	test( "-99." )
	test( "100." )
	test( "100x." )
	test( "1000." )
	
}@