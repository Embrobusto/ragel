#include <stdio.h>

struct LangEl
{
	int key;
	char *name;
};

struct fsm
{
	int cs;
};



static const int  _fsm_trans_keys [] = { 1, 0, 0, 0, 1, 2, 1, 0, 0 ,  };
static const char  _fsm_char_class [] = { 0, 1, 2, 0 ,  };
static const char  _fsm_index_offsets [] = { 0, 0, 1, 3, 0 ,  };
static const char  _fsm_indicies [] = { 0, 0, 2, 0 ,  };
static const char  _fsm_index_defaults [] = { 0, 1, 1, 1, 0 ,  };
static const char  _fsm_trans_cond_spaces [] = { -1, -1, -1, 0 ,  };
static const char  _fsm_cond_targs [] = { 2, 0, 3, 0 ,  };
static const char  _fsm_cond_actions [] = { 1, 0, 1, 0 ,  };
static const char  _fsm_eof_actions [] = { 0, 0, 0, 2, 0 ,  };
static const char  _fsm_nfa_targs [] = { 0, 0 ,  };
static const char  _fsm_nfa_offsets [] = { 0, 0, 0, 0, 0 ,  };
static const char  _fsm_nfa_push_actions [] = { 0, 0 ,  };
static const char  _fsm_nfa_pop_trans [] = { 0, 0 ,  };
static const int  fsm_start  = 1;
static const int  fsm_first_final  = 3;
static const int  fsm_error  = 0;
static const int  fsm_en_main  = 1;
void fsm_init( struct fsm *fsm )
{

	{
		(fsm->cs) = ( int ) fsm_start;
	}
}

void fsm_execute( struct fsm *fsm,  struct LangEl *_data, int _len )
{
	struct LangEl *p = _data;
	struct LangEl *pe = _data+_len;
	struct LangEl *eof = pe;
	
	
	{
		unsigned int _trans = 0;
		unsigned int _have = 0;
		unsigned int _cont = 1;
		const int  *_keys;
		const char  *_inds;
		while ( _cont == 1  )
		{
		
			if ( (fsm->cs) == 0  )
			_cont = 0;
			
			_have = 0;
			if ( p == pe  )
			{
				if ( p == eof  )
				{
					if ( _have == 0  )
					{
						switch ( _fsm_eof_actions[(fsm->cs)] ) {
							case 2 :
							{
								printf("accept\n");
							}
							
							break;
							
						}
					}
					
				}
				
				
				if ( _have == 0  )
				_cont = 0;
				
			}
			
			if ( _cont == 1  )
			{
				if ( _have == 0  )
				{
					_keys = _fsm_trans_keys + ((fsm->cs)<<1);
					_inds = _fsm_indicies + _fsm_index_offsets[(fsm->cs)];
					if ( (p->key) <= 3 && (p->key) >= 1  )
					{
						int _ic = ( int ) _fsm_char_class[( int ) (p->key) - 1];
						if ( _ic <= ( int ) (*( _keys+1  ))
						&& _ic >= ( int ) (*( _keys  ))
						)
						_trans = ( unsigned int  ) (*( _inds + ( int ) (_ic - ( int ) (*( _keys  ))
						) ))
						;
						
						else
						_trans = ( unsigned int  ) _fsm_index_defaults[(fsm->cs)];
						
					}
					
					else
					{
						_trans = ( unsigned int  ) _fsm_index_defaults[(fsm->cs)];
					}
					
					
				}
				
				if ( _cont == 1  )
				{
					(fsm->cs) = ( int ) _fsm_cond_targs[_trans];
					switch ( _fsm_cond_actions[_trans] ) {
						case 1 :
						{
							printf("%s\n", p->name);
						}
						
						break;
						
					}
					if ( (fsm->cs) == 0  )
					_cont = 0;
					
					if ( _cont == 1  )
					p += 1;
					
				}
			}
			
		}
		
	}
}

int fsm_finish( struct fsm *fsm )
{
	if ( fsm->cs == fsm_error )
	return -1;
	if ( fsm->cs >= fsm_first_final )
	return 1;
	return 0;
}

int main()
{
	static struct fsm fsm;
	static struct LangEl lel[] = { 
		{1, "one"}, 
		{2, "two-a"}, 
		{2, "two-b"}, 
		{2, "two-c"}, 
		{3, "three"}
	};
	
	fsm_init( &fsm );
	fsm_execute( &fsm, lel, 5 );
	fsm_finish( &fsm );
	
	return 0;
}

