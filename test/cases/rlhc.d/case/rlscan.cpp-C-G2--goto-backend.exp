#include <iostream>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#ifdef PERF_TEST

/* Calibrated to 1s on yoho. */
#define perf_iters ( 240984ll * S )

int _perf_dummy = 0;
#define perf_cout(...) ( _perf_dummy += 1 )
#define perf_loop long _pi; for ( _pi = 0; _pi < perf_iters; _pi++ )

#else

#define perf_cout(...) __VA_ARGS__
#define perf_loop

#endif

using namespace std;

void escapeXML( const char *data )
{
	while ( *data != 0 ) {
		switch ( *data ) {
			case '<': perf_cout( cout << "&lt;" ); break;
			case '>': perf_cout( cout << "&gt;" ); break;
			case '&': perf_cout( cout << "&amp;" ); break;
			default: perf_cout( cout << *data ); break;
		}
		data += 1;
	}
}

void escapeXML( char c )
{
	switch ( c ) {
		case '<': perf_cout( cout << "&lt;" ); break;
		case '>': perf_cout( cout << "&gt;" ); break;
		case '&': perf_cout( cout << "&amp;" ); break;
		default: perf_cout( cout << c ); break;
	}
}

void escapeXML( const char *data, int len )
{
	for ( const char *end = data + len; data != end; data++  ) {
		switch ( *data ) {
			case '<': perf_cout( cout << "&lt;" ); break;
			case '>': perf_cout( cout << "&gt;" ); break;
			case '&': perf_cout( cout << "&amp;" ); break;
			default: perf_cout( cout << *data ); break;
		}
	}
}

inline void write( const char *data )
{
	perf_cout( cout << data );
}

inline void write( char c )
{
	perf_cout( cout << c );
}

inline void write( const char *data, int len )
{
	perf_cout( cout.write( data, len ) );
}




static const int  RagelScan_start  = 24;
static const int  RagelScan_error  = 0;
static const int  RagelScan_en_c_comment  = 6;
static const int  RagelScan_en_ilscan  = 31;
static const int  RagelScan_en_rlscan  = 35;
static const int  RagelScan_en_main  = 24;
static const char  _RagelScan_nfa_targs [] = { 0, 0 ,  };
static const char  _RagelScan_nfa_offsets [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _RagelScan_nfa_push_actions [] = { 0, 0 ,  };
static const char  _RagelScan_nfa_pop_trans [] = { 0, 0 ,  };
void test( const char *data )
{
	std::ios::sync_with_stdio(false);
	
	int cs, act;
	perf_loop
	{
		int len = strlen( data );
		const char *ts, *te;
		int stack[1], top;
		memset( stack, 0, sizeof(stack) );
		
		bool single_line = false;
		int inline_depth = 0;
		
		
		{
			cs = ( int ) RagelScan_start;
			top = 0;
			ts = 0;
			te = 0;
		}
		const char *p = data;
		const char *pe = data + len;
		const char *eof = pe;
		
		
		{
			if ( p == pe  )
			goto _test_eof;
			
			goto _resume;
			
			_again:
			switch ( cs  ) {
				case 24:
				goto st24;
				case 25:
				goto st25;
				case 1:
				goto st1;
				case 2:
				goto st2;
				case 26:
				goto st26;
				case 27:
				goto st27;
				case 28:
				goto st28;
				case 3:
				goto st3;
				case 4:
				goto st4;
				case 29:
				goto st29;
				case 5:
				goto st5;
				case 6:
				goto st6;
				case 0:
				goto st0;
				case 7:
				goto st7;
				case 30:
				goto st30;
				case 31:
				goto st31;
				case 32:
				goto st32;
				case 8:
				goto st8;
				case 9:
				goto st9;
				case 33:
				goto st33;
				case 10:
				goto st10;
				case 11:
				goto st11;
				case 34:
				goto st34;
				case 12:
				goto st12;
				case 35:
				goto st35;
				case 36:
				goto st36;
				case 13:
				goto st13;
				case 14:
				goto st14;
				case 37:
				goto st37;
				case 15:
				goto st15;
				case 38:
				goto st38;
				case 16:
				goto st16;
				case 17:
				goto st17;
				case 39:
				goto st39;
				case 18:
				goto st18;
				case 19:
				goto st19;
				case 40:
				goto st40;
				case 41:
				goto st41;
				case 20:
				goto st20;
				case 42:
				goto st42;
				case 43:
				goto st43;
				case 44:
				goto st44;
				case 21:
				goto st21;
				case 22:
				goto st22;
				case 45:
				goto st45;
				case 23:
				goto st23;
				
			}
			_resume:
			switch ( cs  ) {
				case 24:
				goto st_case_24;
				case 25:
				goto st_case_25;
				case 1:
				goto st_case_1;
				case 2:
				goto st_case_2;
				case 26:
				goto st_case_26;
				case 27:
				goto st_case_27;
				case 28:
				goto st_case_28;
				case 3:
				goto st_case_3;
				case 4:
				goto st_case_4;
				case 29:
				goto st_case_29;
				case 5:
				goto st_case_5;
				case 6:
				goto st_case_6;
				case 0:
				goto st_case_0;
				case 7:
				goto st_case_7;
				case 30:
				goto st_case_30;
				case 31:
				goto st_case_31;
				case 32:
				goto st_case_32;
				case 8:
				goto st_case_8;
				case 9:
				goto st_case_9;
				case 33:
				goto st_case_33;
				case 10:
				goto st_case_10;
				case 11:
				goto st_case_11;
				case 34:
				goto st_case_34;
				case 12:
				goto st_case_12;
				case 35:
				goto st_case_35;
				case 36:
				goto st_case_36;
				case 13:
				goto st_case_13;
				case 14:
				goto st_case_14;
				case 37:
				goto st_case_37;
				case 15:
				goto st_case_15;
				case 38:
				goto st_case_38;
				case 16:
				goto st_case_16;
				case 17:
				goto st_case_17;
				case 39:
				goto st_case_39;
				case 18:
				goto st_case_18;
				case 19:
				goto st_case_19;
				case 40:
				goto st_case_40;
				case 41:
				goto st_case_41;
				case 20:
				goto st_case_20;
				case 42:
				goto st_case_42;
				case 43:
				goto st_case_43;
				case 44:
				goto st_case_44;
				case 21:
				goto st_case_21;
				case 22:
				goto st_case_22;
				case 45:
				goto st_case_45;
				case 23:
				goto st_case_23;
				
			}
			goto st_out;
			ctr11:
			{
				{
					p = ((te))-1;
					{
						escapeXML( *ts );
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr3:
			{
				{
					te = p+1;
					{
						escapeXML( ts, te-ts );
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr8:
			{
				{
					te = p+1;
					{
						escapeXML( ts, te-ts );
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr13:
			{
				{
					te = p+1;
					{
						escapeXML( ts, te-ts );
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr61:
			{
				{
					te = p+1;
					{
						escapeXML( *ts );
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr62:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st24;
			ctr75:
			{
				{
					te = p;
					p = p - 1;
					{
						escapeXML( *ts );
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr72:
			{
				{
					te = p;
					p = p - 1;
					{
						write( "<section>\n" ); 
						single_line = true; 
						{
							goto st35;
						}
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr73:
			{
				{
					te = p+1;
					{
						write( "<section>\n" );
						single_line = false;
						{
							goto st35;
						}
						
					}
					
				}
				
			}
			
			
			goto st24;
			ctr76:
			{
				{
					te = p+1;
					{
						escapeXML( ts, te-ts );
						{
							stack[top] = 24;
							top+= 1;
							goto st6;
						}
						
					}
					
				}
				
			}
			
			
			goto st24;
			st24:
			{
				{
					ts = 0;
					
				}
				
			}
			
			p+= 1;
			if ( p == pe  )
			goto _test_eof24;
			
			st_case_24:
			{
				{
					ts = p;
					
				}
				
			}
			switch ( ((*( p  ))
			) ) {
				case 0:
				{
					goto ctr62;
				}
				case 34:
				{
					goto ctr63;
				}
				case 37:
				{
					goto st26;
				}
				case 39:
				{
					goto ctr65;
				}
				case 47:
				{
					goto ctr66;
				}
				
			}
			{
				goto ctr61;
			}
			ctr63:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st25;
			st25:
			p+= 1;
			if ( p == pe  )
			goto _test_eof25;
			
			st_case_25:
			switch ( ((*( p  ))
			) ) {
				case 34:
				{
					goto ctr3;
				}
				case 92:
				{
					goto st2;
				}
				
			}
			{
				goto st1;
			}
			st1:
			p+= 1;
			if ( p == pe  )
			goto _test_eof1;
			
			st_case_1:
			switch ( ((*( p  ))
			) ) {
				case 34:
				{
					goto ctr3;
				}
				case 92:
				{
					goto st2;
				}
				
			}
			{
				goto st1;
			}
			st2:
			p+= 1;
			if ( p == pe  )
			goto _test_eof2;
			
			st_case_2:
			{
				goto st1;
			}
			st26:
			p+= 1;
			if ( p == pe  )
			goto _test_eof26;
			
			st_case_26:
			if ( ((*( p  ))
			)== 37  )
			{
				goto st27;
			}
			
			{
				goto ctr75;
			}
			st27:
			p+= 1;
			if ( p == pe  )
			goto _test_eof27;
			
			st_case_27:
			if ( ((*( p  ))
			)== 123  )
			{
				goto ctr73;
			}
			
			{
				goto ctr72;
			}
			ctr65:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st28;
			st28:
			p+= 1;
			if ( p == pe  )
			goto _test_eof28;
			
			st_case_28:
			switch ( ((*( p  ))
			) ) {
				case 39:
				{
					goto ctr8;
				}
				case 92:
				{
					goto st4;
				}
				
			}
			{
				goto st3;
			}
			st3:
			p+= 1;
			if ( p == pe  )
			goto _test_eof3;
			
			st_case_3:
			switch ( ((*( p  ))
			) ) {
				case 39:
				{
					goto ctr8;
				}
				case 92:
				{
					goto st4;
				}
				
			}
			{
				goto st3;
			}
			st4:
			p+= 1;
			if ( p == pe  )
			goto _test_eof4;
			
			st_case_4:
			{
				goto st3;
			}
			ctr66:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st29;
			st29:
			p+= 1;
			if ( p == pe  )
			goto _test_eof29;
			
			st_case_29:
			switch ( ((*( p  ))
			) ) {
				case 42:
				{
					goto ctr76;
				}
				case 47:
				{
					goto st5;
				}
				
			}
			{
				goto ctr75;
			}
			st5:
			p+= 1;
			if ( p == pe  )
			goto _test_eof5;
			
			st_case_5:
			if ( ((*( p  ))
			)== 10  )
			{
				goto ctr13;
			}
			
			{
				goto st5;
			}
			ctr14:
			{
				escapeXML( (((*( p  ))
				)) ); 
			}
			
			
			goto st6;
			st6:
			{
				{
					ts = 0;
					
				}
				
			}
			
			p+= 1;
			if ( p == pe  )
			goto _test_eof6;
			
			st_case_6:
			switch ( ((*( p  ))
			) ) {
				case 0:
				{
					goto st0;
				}
				case 42:
				{
					goto ctr16;
				}
				
			}
			{
				goto ctr14;
			}
			st_case_0:
			st0:
			cs = 0;
			goto _out;
			ctr16:
			{
				escapeXML( (((*( p  ))
				)) ); 
			}
			
			
			goto st7;
			st7:
			p+= 1;
			if ( p == pe  )
			goto _test_eof7;
			
			st_case_7:
			switch ( ((*( p  ))
			) ) {
				case 0:
				{
					goto st0;
				}
				case 42:
				{
					goto ctr16;
				}
				case 47:
				{
					goto ctr17;
				}
				
			}
			{
				goto ctr14;
			}
			ctr17:
			{
				escapeXML( (((*( p  ))
				)) ); 
			}
			{
				{
					top -= 1;
					cs = stack[top];
					goto _again;
				}
				
			}
			
			
			goto st30;
			st30:
			p+= 1;
			if ( p == pe  )
			goto _test_eof30;
			
			st_case_30:
			{
				goto st0;
			}
			ctr29:
			{
				{
					p = ((te))-1;
					{
						escapeXML( *ts ); 
					}
					
				}
				
			}
			
			
			goto st31;
			ctr21:
			{
				{
					te = p+1;
					{
						escapeXML( ts, te-ts );
						
					}
					
				}
				
			}
			
			
			goto st31;
			ctr26:
			{
				{
					te = p+1;
					{
						escapeXML( ts, te-ts );
						
					}
					
				}
				
			}
			
			
			goto st31;
			ctr31:
			{
				{
					te = p+1;
					{
						escapeXML( ts, te-ts );
						
					}
					
				}
				
			}
			
			
			goto st31;
			ctr77:
			{
				{
					te = p+1;
					{
						escapeXML( *ts ); 
					}
					
				}
				
			}
			
			
			goto st31;
			ctr81:
			{
				{
					te = p+1;
					{
						write( '{' );
						inline_depth += 1; 
						
					}
					
				}
				
			}
			
			
			goto st31;
			ctr82:
			{
				{
					te = p+1;
					{
						write( '}' );
						/* If dropping down to the last } then return 
						* to ragel code. */
						if ( --inline_depth == 0 ) {
							write( "</inline>\n" );
							{
								goto st35;
							}
						}
						
					}
					
				}
				
			}
			
			
			goto st31;
			ctr86:
			{
				{
					te = p;
					p = p - 1;
					{
						escapeXML( *ts ); 
					}
					
				}
				
			}
			
			
			goto st31;
			ctr87:
			{
				{
					te = p+1;
					{
						write( "/*" );
						{
							stack[top] = 31;
							top+= 1;
							goto st6;
						}
						
					}
					
				}
				
			}
			
			
			goto st31;
			st31:
			{
				{
					ts = 0;
					
				}
				
			}
			
			p+= 1;
			if ( p == pe  )
			goto _test_eof31;
			
			st_case_31:
			{
				{
					ts = p;
					
				}
				
			}
			switch ( ((*( p  ))
			) ) {
				case 0:
				{
					goto st0;
				}
				case 34:
				{
					goto ctr78;
				}
				case 39:
				{
					goto ctr79;
				}
				case 47:
				{
					goto ctr80;
				}
				case 123:
				{
					goto ctr81;
				}
				case 125:
				{
					goto ctr82;
				}
				
			}
			{
				goto ctr77;
			}
			ctr78:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st32;
			st32:
			p+= 1;
			if ( p == pe  )
			goto _test_eof32;
			
			st_case_32:
			switch ( ((*( p  ))
			) ) {
				case 34:
				{
					goto ctr21;
				}
				case 92:
				{
					goto st9;
				}
				
			}
			{
				goto st8;
			}
			st8:
			p+= 1;
			if ( p == pe  )
			goto _test_eof8;
			
			st_case_8:
			switch ( ((*( p  ))
			) ) {
				case 34:
				{
					goto ctr21;
				}
				case 92:
				{
					goto st9;
				}
				
			}
			{
				goto st8;
			}
			st9:
			p+= 1;
			if ( p == pe  )
			goto _test_eof9;
			
			st_case_9:
			{
				goto st8;
			}
			ctr79:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st33;
			st33:
			p+= 1;
			if ( p == pe  )
			goto _test_eof33;
			
			st_case_33:
			switch ( ((*( p  ))
			) ) {
				case 39:
				{
					goto ctr26;
				}
				case 92:
				{
					goto st11;
				}
				
			}
			{
				goto st10;
			}
			st10:
			p+= 1;
			if ( p == pe  )
			goto _test_eof10;
			
			st_case_10:
			switch ( ((*( p  ))
			) ) {
				case 39:
				{
					goto ctr26;
				}
				case 92:
				{
					goto st11;
				}
				
			}
			{
				goto st10;
			}
			st11:
			p+= 1;
			if ( p == pe  )
			goto _test_eof11;
			
			st_case_11:
			{
				goto st10;
			}
			ctr80:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st34;
			st34:
			p+= 1;
			if ( p == pe  )
			goto _test_eof34;
			
			st_case_34:
			switch ( ((*( p  ))
			) ) {
				case 42:
				{
					goto ctr87;
				}
				case 47:
				{
					goto st12;
				}
				
			}
			{
				goto ctr86;
			}
			st12:
			p+= 1;
			if ( p == pe  )
			goto _test_eof12;
			
			st_case_12:
			if ( ((*( p  ))
			)== 10  )
			{
				goto ctr31;
			}
			
			{
				goto st12;
			}
			ctr59:
			{
				{
					p = ((te))-1;
					{
						write( "<symbol>" );
						escapeXML( (((*( p  ))
						)) );
						write( "</symbol>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr35:
			{
				{
					te = p+1;
					{
						write( "<double_lit>" );
						escapeXML( ts, te-ts );
						write( "</double_lit>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr40:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st35;
			ctr43:
			{
				{
					te = p+1;
					{
						write( "<single_lit>" );
						escapeXML( ts, te-ts );
						write( "</single_lit>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr48:
			{
				{
					te = p+1;
					{
						write( "<re_lit>" );
						escapeXML( ts, te-ts );
						write( "</re_lit>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr52:
			{
				{
					p = ((te))-1;
					{
						write( "<int>" );
						write( ts, te-ts );
						write( "</int>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr57:
			{
				{
					te = p+1;
					{
						write( "<or_lit>" );
						escapeXML( ts, te-ts );
						write( "</or_lit>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr60:
			{
				{
					te = p+1;
					{
						if ( !single_line ) {
							write( "</section>\n" );
							{
								goto st24;
							}
						}
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr88:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st35;
			ctr89:
			{
				{
					te = p+1;
					{
						if ( single_line ) {
							write( "</section>\n" );
							{
								goto st24;
							}
						}
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr90:
			{
				{
					te = p+1;
					{
						write( "<symbol>" );
						escapeXML( (((*( p  ))
						)) );
						write( "</symbol>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr99:
			{
				{
					te = p+1;
					{
						inline_depth = 1;
						write( "<inline>{" );
						{
							goto st31;
						}
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr115:
			{
				{
					te = p;
					p = p - 1;
					{
						write( "<symbol>" );
						escapeXML( (((*( p  ))
						)) );
						write( "</symbol>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr109:
			{
				{
					te = p;
					p = p - 1;
					{
						write( "<int>" );
						write( ts, te-ts );
						write( "</int>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr111:
			{
				{
					te = p;
					p = p - 1;
					{
						write( "<hex>" );
						write( ts, te-ts );
						write( "</hex>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			ctr113:
			{
				{
					te = p;
					p = p - 1;
					{
						write( "<word>" );
						write( ts, te-ts );
						write( "</word>\n" );
						
					}
					
				}
				
			}
			
			
			goto st35;
			st35:
			{
				{
					ts = 0;
					
				}
				
			}
			
			p+= 1;
			if ( p == pe  )
			goto _test_eof35;
			
			st_case_35:
			{
				{
					ts = p;
					
				}
				
			}
			switch ( ((*( p  ))
			) ) {
				case 0:
				{
					goto st0;
				}
				case 10:
				{
					goto ctr89;
				}
				case 34:
				{
					goto ctr91;
				}
				case 35:
				{
					goto ctr92;
				}
				case 39:
				{
					goto ctr93;
				}
				case 47:
				{
					goto ctr94;
				}
				case 48:
				{
					goto ctr95;
				}
				case 91:
				{
					goto ctr98;
				}
				case 95:
				{
					goto st43;
				}
				case 123:
				{
					goto ctr99;
				}
				case 125:
				{
					goto ctr100;
				}
				
			}
			if ( ((*( p  ))
			)< 65  )
			{
				if ( ((*( p  ))
				)< 49  )
				{
					if ( 33 <= ((*( p  ))
					)&& ((*( p  ))
					)<= 46  )
					{
						goto ctr90;
					}
					
				} 
				else if ( ((*( p  ))
				)> 57  )
				{
					{
						goto ctr90;
					}
				} 
				else
				{
					goto st41;
				}
				
			} 
			else if ( ((*( p  ))
			)> 90  )
			{
				if ( ((*( p  ))
				)< 97  )
				{
					if ( 92 <= ((*( p  ))
					) )
					{
						goto ctr90;
					}
					
				} 
				else if ( ((*( p  ))
				)> 122  )
				{
					if ( 124 <= ((*( p  ))
					)&& ((*( p  ))
					)<= 126  )
					{
						goto ctr90;
					}
					
				} 
				else
				{
					goto st43;
				}
				
			} 
			else
			{
				goto st43;
			}
			
			{
				goto ctr88;
			}
			ctr91:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st36;
			st36:
			p+= 1;
			if ( p == pe  )
			goto _test_eof36;
			
			st_case_36:
			switch ( ((*( p  ))
			) ) {
				case 34:
				{
					goto ctr35;
				}
				case 92:
				{
					goto st14;
				}
				
			}
			{
				goto st13;
			}
			st13:
			p+= 1;
			if ( p == pe  )
			goto _test_eof13;
			
			st_case_13:
			switch ( ((*( p  ))
			) ) {
				case 34:
				{
					goto ctr35;
				}
				case 92:
				{
					goto st14;
				}
				
			}
			{
				goto st13;
			}
			st14:
			p+= 1;
			if ( p == pe  )
			goto _test_eof14;
			
			st_case_14:
			{
				goto st13;
			}
			ctr92:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st37;
			st37:
			p+= 1;
			if ( p == pe  )
			goto _test_eof37;
			
			st_case_37:
			if ( ((*( p  ))
			)== 10  )
			{
				goto ctr40;
			}
			
			{
				goto st15;
			}
			st15:
			p+= 1;
			if ( p == pe  )
			goto _test_eof15;
			
			st_case_15:
			if ( ((*( p  ))
			)== 10  )
			{
				goto ctr40;
			}
			
			{
				goto st15;
			}
			ctr93:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st38;
			st38:
			p+= 1;
			if ( p == pe  )
			goto _test_eof38;
			
			st_case_38:
			switch ( ((*( p  ))
			) ) {
				case 39:
				{
					goto ctr43;
				}
				case 92:
				{
					goto st17;
				}
				
			}
			{
				goto st16;
			}
			st16:
			p+= 1;
			if ( p == pe  )
			goto _test_eof16;
			
			st_case_16:
			switch ( ((*( p  ))
			) ) {
				case 39:
				{
					goto ctr43;
				}
				case 92:
				{
					goto st17;
				}
				
			}
			{
				goto st16;
			}
			st17:
			p+= 1;
			if ( p == pe  )
			goto _test_eof17;
			
			st_case_17:
			{
				goto st16;
			}
			ctr94:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st39;
			st39:
			p+= 1;
			if ( p == pe  )
			goto _test_eof39;
			
			st_case_39:
			switch ( ((*( p  ))
			) ) {
				case 47:
				{
					goto ctr48;
				}
				case 92:
				{
					goto st19;
				}
				
			}
			{
				goto st18;
			}
			st18:
			p+= 1;
			if ( p == pe  )
			goto _test_eof18;
			
			st_case_18:
			switch ( ((*( p  ))
			) ) {
				case 47:
				{
					goto ctr48;
				}
				case 92:
				{
					goto st19;
				}
				
			}
			{
				goto st18;
			}
			st19:
			p+= 1;
			if ( p == pe  )
			goto _test_eof19;
			
			st_case_19:
			{
				goto st18;
			}
			ctr95:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st40;
			st40:
			p+= 1;
			if ( p == pe  )
			goto _test_eof40;
			
			st_case_40:
			if ( ((*( p  ))
			)== 120  )
			{
				goto st20;
			}
			
			if ( 48 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 57  )
			{
				goto st41;
			}
			
			{
				goto ctr109;
			}
			st41:
			p+= 1;
			if ( p == pe  )
			goto _test_eof41;
			
			st_case_41:
			if ( 48 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 57  )
			{
				goto st41;
			}
			
			{
				goto ctr109;
			}
			st20:
			p+= 1;
			if ( p == pe  )
			goto _test_eof20;
			
			st_case_20:
			if ( ((*( p  ))
			)< 65  )
			{
				if ( 48 <= ((*( p  ))
				)&& ((*( p  ))
				)<= 57  )
				{
					goto st42;
				}
				
			} 
			else if ( ((*( p  ))
			)> 70  )
			{
				if ( 97 <= ((*( p  ))
				)&& ((*( p  ))
				)<= 102  )
				{
					goto st42;
				}
				
			} 
			else
			{
				goto st42;
			}
			
			{
				goto ctr52;
			}
			st42:
			p+= 1;
			if ( p == pe  )
			goto _test_eof42;
			
			st_case_42:
			if ( ((*( p  ))
			)< 65  )
			{
				if ( 48 <= ((*( p  ))
				)&& ((*( p  ))
				)<= 57  )
				{
					goto st42;
				}
				
			} 
			else if ( ((*( p  ))
			)> 70  )
			{
				if ( 97 <= ((*( p  ))
				)&& ((*( p  ))
				)<= 102  )
				{
					goto st42;
				}
				
			} 
			else
			{
				goto st42;
			}
			
			{
				goto ctr111;
			}
			st43:
			p+= 1;
			if ( p == pe  )
			goto _test_eof43;
			
			st_case_43:
			if ( ((*( p  ))
			)== 95  )
			{
				goto st43;
			}
			
			if ( ((*( p  ))
			)< 65  )
			{
				if ( 48 <= ((*( p  ))
				)&& ((*( p  ))
				)<= 57  )
				{
					goto st43;
				}
				
			} 
			else if ( ((*( p  ))
			)> 90  )
			{
				if ( 97 <= ((*( p  ))
				)&& ((*( p  ))
				)<= 122  )
				{
					goto st43;
				}
				
			} 
			else
			{
				goto st43;
			}
			
			{
				goto ctr113;
			}
			ctr98:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st44;
			st44:
			p+= 1;
			if ( p == pe  )
			goto _test_eof44;
			
			st_case_44:
			switch ( ((*( p  ))
			) ) {
				case 92:
				{
					goto st22;
				}
				case 93:
				{
					goto ctr57;
				}
				
			}
			{
				goto st21;
			}
			st21:
			p+= 1;
			if ( p == pe  )
			goto _test_eof21;
			
			st_case_21:
			switch ( ((*( p  ))
			) ) {
				case 92:
				{
					goto st22;
				}
				case 93:
				{
					goto ctr57;
				}
				
			}
			{
				goto st21;
			}
			st22:
			p+= 1;
			if ( p == pe  )
			goto _test_eof22;
			
			st_case_22:
			{
				goto st21;
			}
			ctr100:
			{
				{
					te = p+1;
					
				}
				
			}
			
			
			goto st45;
			st45:
			p+= 1;
			if ( p == pe  )
			goto _test_eof45;
			
			st_case_45:
			if ( ((*( p  ))
			)== 37  )
			{
				goto st23;
			}
			
			{
				goto ctr115;
			}
			st23:
			p+= 1;
			if ( p == pe  )
			goto _test_eof23;
			
			st_case_23:
			if ( ((*( p  ))
			)== 37  )
			{
				goto ctr60;
			}
			
			{
				goto ctr59;
			}
			st_out:
			_test_eof24: cs = 24;
			goto _test_eof; 
			_test_eof25: cs = 25;
			goto _test_eof; 
			_test_eof1: cs = 1;
			goto _test_eof; 
			_test_eof2: cs = 2;
			goto _test_eof; 
			_test_eof26: cs = 26;
			goto _test_eof; 
			_test_eof27: cs = 27;
			goto _test_eof; 
			_test_eof28: cs = 28;
			goto _test_eof; 
			_test_eof3: cs = 3;
			goto _test_eof; 
			_test_eof4: cs = 4;
			goto _test_eof; 
			_test_eof29: cs = 29;
			goto _test_eof; 
			_test_eof5: cs = 5;
			goto _test_eof; 
			_test_eof6: cs = 6;
			goto _test_eof; 
			_test_eof7: cs = 7;
			goto _test_eof; 
			_test_eof30: cs = 30;
			goto _test_eof; 
			_test_eof31: cs = 31;
			goto _test_eof; 
			_test_eof32: cs = 32;
			goto _test_eof; 
			_test_eof8: cs = 8;
			goto _test_eof; 
			_test_eof9: cs = 9;
			goto _test_eof; 
			_test_eof33: cs = 33;
			goto _test_eof; 
			_test_eof10: cs = 10;
			goto _test_eof; 
			_test_eof11: cs = 11;
			goto _test_eof; 
			_test_eof34: cs = 34;
			goto _test_eof; 
			_test_eof12: cs = 12;
			goto _test_eof; 
			_test_eof35: cs = 35;
			goto _test_eof; 
			_test_eof36: cs = 36;
			goto _test_eof; 
			_test_eof13: cs = 13;
			goto _test_eof; 
			_test_eof14: cs = 14;
			goto _test_eof; 
			_test_eof37: cs = 37;
			goto _test_eof; 
			_test_eof15: cs = 15;
			goto _test_eof; 
			_test_eof38: cs = 38;
			goto _test_eof; 
			_test_eof16: cs = 16;
			goto _test_eof; 
			_test_eof17: cs = 17;
			goto _test_eof; 
			_test_eof39: cs = 39;
			goto _test_eof; 
			_test_eof18: cs = 18;
			goto _test_eof; 
			_test_eof19: cs = 19;
			goto _test_eof; 
			_test_eof40: cs = 40;
			goto _test_eof; 
			_test_eof41: cs = 41;
			goto _test_eof; 
			_test_eof20: cs = 20;
			goto _test_eof; 
			_test_eof42: cs = 42;
			goto _test_eof; 
			_test_eof43: cs = 43;
			goto _test_eof; 
			_test_eof44: cs = 44;
			goto _test_eof; 
			_test_eof21: cs = 21;
			goto _test_eof; 
			_test_eof22: cs = 22;
			goto _test_eof; 
			_test_eof45: cs = 45;
			goto _test_eof; 
			_test_eof23: cs = 23;
			goto _test_eof; 
			
			_test_eof: {}
			if ( p == eof  )
			{
				switch ( cs  ) {
					case 25:
					goto ctr75;
					case 1:
					goto ctr11;
					case 2:
					goto ctr11;
					case 26:
					goto ctr75;
					case 27:
					goto ctr72;
					case 28:
					goto ctr75;
					case 3:
					goto ctr11;
					case 4:
					goto ctr11;
					case 29:
					goto ctr75;
					case 5:
					goto ctr11;
					case 32:
					goto ctr86;
					case 8:
					goto ctr29;
					case 9:
					goto ctr29;
					case 33:
					goto ctr86;
					case 10:
					goto ctr29;
					case 11:
					goto ctr29;
					case 34:
					goto ctr86;
					case 12:
					goto ctr29;
					case 36:
					goto ctr115;
					case 13:
					goto ctr59;
					case 14:
					goto ctr59;
					case 37:
					goto ctr115;
					case 15:
					goto ctr59;
					case 38:
					goto ctr115;
					case 16:
					goto ctr59;
					case 17:
					goto ctr59;
					case 39:
					goto ctr115;
					case 18:
					goto ctr59;
					case 19:
					goto ctr59;
					case 40:
					goto ctr109;
					case 41:
					goto ctr109;
					case 20:
					goto ctr52;
					case 42:
					goto ctr111;
					case 43:
					goto ctr113;
					case 44:
					goto ctr115;
					case 21:
					goto ctr59;
					case 22:
					goto ctr59;
					case 45:
					goto ctr115;
					case 23:
					goto ctr59;
					
				}
			}
			
			
			_out: {}
		}
	}
	
	if ( cs == RagelScan_error ) {
		/* Machine failed before finding a token. */
		perf_cout( cerr << "PARSE ERROR" << endl );
		exit(1);
	}
}

#define BUFSIZE 2048

int main()
{
	std::ios::sync_with_stdio(false);
	
	test(
	"hi %%{ /'}%%'/ { /*{*/ {} } + '\\'' }%%there\n"
	"hi %%{ /'}%%'/ { /*{*/ {} } + '\\'' }%%there\n"
	"hi %%{ /'}%%'/ { /*{*/ {} } + '\\'' }%%there\n"
	"hi %%{ /'}%%'/ { /*{*/ {} } + '\\'' }%%there\n"
	"hi %%{ /'}%%'/ { /*{*/ {} } + '\\'' }%%there\n"
	"hi %%{ /'}%%'/ { /*{*/ {} } + '\\'' }%%there\n"
	);
	
	return 0;
}
