host( "working/clang4_go.rl", 1 ) @{/*
	* @@LANG: go
	* @@GENERATED: true
	*/
	
	package main
	import "fmt"
	
	var pos  int ;
	var line  int ;
	
	
	
	
	var cs int;
	var blen int;
	var buffer [1024] byte;
	
}@
array byte _clang_trans_keys( 0, 13 ) = { u(1), u(0), u(0), u(12), u(0), u(12), u(0), u(0), u(0), u(2), u(0), u(7), u(0), u(0), u(8), u(9), u(8), u(10), u(0), u(0), u(0), u(13), u(0), u(13), u(0), u(13), u(0), u(13), u(0), u(13), u(0), u(13), u(0), u(13), u(0), u(13), u(0), u(13), u(0) };

array s8 _clang_char_class( 0, 13 ) = { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 4, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 4, 12, 4, 4, 11, 4, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 4, 4, 4, 4, 0 };

array s16 _clang_index_offsets( 0, 157 ) = { 0, 0, 13, 26, 27, 30, 38, 39, 41, 44, 45, 59, 73, 87, 101, 115, 129, 143, 157, 0 };

array s8 _clang_indicies( 0, 72 ) = { 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 6, 5, 8, 7, 9, 8, 7, 9, 7, 7, 7, 7, 10, 12, 13, 13, 15, 15, 15, 1, 12, 10, 16, 17, 16, 18, 16, 19, 20, 21, 22, 22, 16, 22, 24, 23, 25, 26, 25, 27, 25, 28, 29, 30, 31, 31, 25, 31, 33, 32, 34, 35, 34, 36, 34, 37, 38, 39, 40, 40, 34, 40, 24, 23, 7, 26, 25, 27, 25, 11, 29, 30, 31, 31, 25, 31, 42, 41, 43, 44, 43, 45, 46, 47, 48, 48, 49, 49, 43, 50, 52, 51, 53, 54, 53, 55, 53, 56, 13, 13, 57, 57, 53, 57, 59, 58, 60, 61, 60, 62, 60, 63, 64, 64, 64, 64, 60, 64, 42, 41, 43, 44, 43, 45, 46, 47, 48, 48, 49, 49, 43, 49, 66, 65, 67, 68, 67, 69, 67, 70, 71, 71, 71, 72, 67, 72, 0 };

array s8 _clang_index_defaults( 0, 65 ) = { 0, 0, 4, 4, 7, 7, 11, 14, 14, 0, 10, 23, 32, 23, 41, 51, 58, 41, 65, 0 };

array s8 _clang_trans_cond_spaces( -1, 0 ) = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0 };

array s8 _clang_cond_targs( 0, 18 ) = { 1, 1, 12, 9, 2, 2, 3, 4, 4, 5, 10, 6, 10, 15, 0, 18, 11, 1, 2, 13, 14, 17, 16, 10, 10, 11, 1, 2, 13, 14, 17, 16, 10, 10, 11, 1, 2, 13, 14, 17, 16, 10, 10, 11, 1, 2, 7, 13, 17, 16, 8, 10, 10, 11, 1, 2, 13, 16, 10, 10, 11, 1, 2, 13, 16, 10, 10, 11, 1, 2, 13, 18, 16, 0 };

array s8 _clang_cond_actions( 0, 29 ) = { 1, 2, 0, 0, 1, 2, 0, 0, 3, 0, 0, 0, 3, 1, 0, 4, 4, 5, 5, 4, 4, 4, 4, 6, 7, 8, 9, 9, 8, 8, 8, 8, 10, 11, 12, 13, 13, 12, 12, 12, 12, 14, 15, 16, 17, 17, 1, 16, 1, 16, 0, 18, 19, 20, 21, 21, 20, 20, 22, 23, 24, 25, 25, 24, 1, 26, 27, 28, 29, 29, 28, 1, 28, 0 };

array s8 _clang_eof_actions( 0, 26 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 10, 6, 14, 18, 22, 14, 26, 0 };

array s8 _clang_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _clang_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _clang_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _clang_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int clang_start = 10;
value int clang_first_final = 10;
value int clang_error = 0;

value int clang_en_main = 10;

host( "working/clang4_go.rl", 120 ) @{
	
	func prepare() {
		pos = 0;
		line = 1;
	}@
	{
		cs = cast(int)clang_start;
	}
	host( "working/clang4_go.rl", 125 ) @{
	}
	
	func exec(data string) {
		var p int = 0
		var pe int = len(data)
		var eof int = pe
	}@
	{
		uint _trans = 0;
		uint _have = 0;
		uint _cont = 1;
		index byte _keys;
		index s8 _inds;
		while ( _cont == 1 ) {
			
			if ( cs == 0 )
			_cont = 0;
			_have = 0;
			if ( p == pe ) {
				if ( p == eof )
				{
					if ( _have == 0 ) {
						switch ( _clang_eof_actions[cs] ) {
							case 22 {
								host( "working/clang4_go.rl", 29 ) ${fmt.Print( "ident(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							}
							case 10 {
								host( "working/clang4_go.rl", 30 ) ${fmt.Print( "literal(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							}
							case 18 {
								host( "working/clang4_go.rl", 31 ) ${fmt.Print( "float(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							}
							case 14 {
								host( "working/clang4_go.rl", 32 ) ${fmt.Print( "int(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							}
							case 26 {
								host( "working/clang4_go.rl", 33 ) ${fmt.Print( "hex(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							}
							case 6 {
								host( "working/clang4_go.rl", 34 ) ${fmt.Print( "symbol(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							}
						}
					}
				}
				
				if ( _have == 0 )
				_cont = 0;
			}
			if ( _cont == 1 ) {
				if ( _have == 0 ) {
					_keys = offset( _clang_trans_keys, (cs<<1) );
					_inds = offset( _clang_indicies, _clang_index_offsets[cs] );
					
					if ( ( deref( data, p )) <= 126 && ( deref( data, p )) >= 10 )
					{
						int _ic = cast(int)_clang_char_class[cast(int)( deref( data, p )) - 10];
						if ( _ic <= cast(int)deref( _clang_trans_keys, _keys+1 ) && _ic >= cast(int)deref( _clang_trans_keys, _keys ) )
						_trans = cast(uint)deref( _clang_indicies, _inds + cast(int)( _ic - cast(int)deref( _clang_trans_keys, _keys ) )  ); 
						else
						_trans = cast(uint)_clang_index_defaults[cs];
					}
					else {
						_trans = cast(uint)_clang_index_defaults[cs];
					}
					
				}
				if ( _cont == 1 ) {
					cs = cast(int)_clang_cond_targs[_trans];
					
					switch ( _clang_cond_actions[_trans] ) {
						case 1 {
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
						case 5 {
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
						}
						case 3 {
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 22 {
							host( "working/clang4_go.rl", 29 ) ${fmt.Print( "ident(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
						}
						case 10 {
							host( "working/clang4_go.rl", 30 ) ${fmt.Print( "literal(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
						}
						case 18 {
							host( "working/clang4_go.rl", 31 ) ${fmt.Print( "float(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
						}
						case 14 {
							host( "working/clang4_go.rl", 32 ) ${fmt.Print( "int(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
						}
						case 26 {
							host( "working/clang4_go.rl", 33 ) ${fmt.Print( "hex(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
						}
						case 6 {
							host( "working/clang4_go.rl", 34 ) ${fmt.Print( "symbol(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
						}
						case 2 {
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 4 {
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
						case 25 {
							host( "working/clang4_go.rl", 29 ) ${fmt.Print( "ident(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
						}
						case 23 {
							host( "working/clang4_go.rl", 29 ) ${fmt.Print( "ident(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 13 {
							host( "working/clang4_go.rl", 30 ) ${fmt.Print( "literal(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
						}
						case 11 {
							host( "working/clang4_go.rl", 30 ) ${fmt.Print( "literal(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 21 {
							host( "working/clang4_go.rl", 31 ) ${fmt.Print( "float(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
						}
						case 19 {
							host( "working/clang4_go.rl", 31 ) ${fmt.Print( "float(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 17 {
							host( "working/clang4_go.rl", 32 ) ${fmt.Print( "int(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
						}
						case 15 {
							host( "working/clang4_go.rl", 32 ) ${fmt.Print( "int(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 29 {
							host( "working/clang4_go.rl", 33 ) ${fmt.Print( "hex(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
						}
						case 27 {
							host( "working/clang4_go.rl", 33 ) ${fmt.Print( "hex(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 9 {
							host( "working/clang4_go.rl", 34 ) ${fmt.Print( "symbol(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
						}
						case 7 {
							host( "working/clang4_go.rl", 34 ) ${fmt.Print( "symbol(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 25 ) ${line = line + 1;
							}$
						}
						case 24 {
							host( "working/clang4_go.rl", 29 ) ${fmt.Print( "ident(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
						case 12 {
							host( "working/clang4_go.rl", 30 ) ${fmt.Print( "literal(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
						case 20 {
							host( "working/clang4_go.rl", 31 ) ${fmt.Print( "float(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
						case 16 {
							host( "working/clang4_go.rl", 32 ) ${fmt.Print( "int(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
						case 28 {
							host( "working/clang4_go.rl", 33 ) ${fmt.Print( "hex(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
						case 8 {
							host( "working/clang4_go.rl", 34 ) ${fmt.Print( "symbol(" );fmt.Print( line );fmt.Print( "," );fmt.Print( blen );fmt.Print( "): " );fmt.Print( string ( buffer[:blen] ) );fmt.Print( "\n" );}$
							host( "working/clang4_go.rl", 22 ) ${	blen = 0;
							}$
							host( "working/clang4_go.rl", 16 ) ${	buffer[blen] = ={( deref( data, p ))}=;
								blen += 1;
								buffer[blen] = 0;
							}$
						}
					}
					
					if ( cs == 0 )
					_cont = 0;
					if ( _cont == 1 )
					p += 1;
					
				}}
		}
	}
	host( "working/clang4_go.rl", 132 ) @{
	}
	func finish() {
		if cs >= clang_first_final {
			fmt.Println("ACCEPT")
		} else {
			fmt.Println("FAIL")
		}
	}
	var inp []string = []string {
		"999 0xaAFF99 99.99 /!\n!/ 'lksdj' //\n\"\n\nliteral\n\n\n\"0x00aba foobardd.ddsf 0x0.9\n",
		"wordwithnum00asdf\n000wordfollowsnum,makes new symbol\n\nfinishing early /! unfinished ...\n",
	};
	
	func main() {
		for _, data := range inp {
			prepare()
			exec(data)
			finish()
		}
	}
}@