host( "working/any1_go.rl", 1 ) @{/*
	* @@LANG: go
	* @@GENERATED: true
	*/
	
	package main
	import "fmt"
	
	
	
	
	
	
	
	var cs int;
	var blen int;
	var buffer [1024] byte;
	
}@
value int any1_start = 1;
value int any1_first_final = 2;
value int any1_error = 0;

value int any1_en_main = 1;

array s8 _any1_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _any1_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0 };

array s8 _any1_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _any1_nfa_pop_trans( 0, 0 ) = { 0, 0 };

host( "working/any1_go.rl", 23 ) @{
	
	func prepare() {
	}@
	{
		cs = cast(int)any1_start;
	}
	host( "working/any1_go.rl", 26 ) @{
	}
	
	func exec(data string) {
		var p int = 0
		var pe int = len(data)
	}@
	{
		if ( p == pe )
		goto _test_eof;
		switch ( cs )
		{
			case 1:
			goto st_case_1;
			case 2:
			goto st_case_2;
			case 0:
			goto st_case_0;
		}
		goto st_out;
		st_case_1:
		{
			goto st2;
		}
		st2:
		p+= 1;
		if ( p == pe )
		goto _test_eof2;
		st_case_2:
		{
			goto st0;
		}
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		st_out:
		_test_eof2: cs = 2; goto _test_eof; 
		
		_test_eof: {}
		_out: {}
	}
	host( "working/any1_go.rl", 32 ) @{
	}
	func finish() {
		if cs >= any1_first_final {
			fmt.Println("ACCEPT")
		} else {
			fmt.Println("FAIL")
		}
	}
	var inp []string = []string {
		"",
		"x",
		"xx",
	};
	
	func main() {
		for _, data := range inp {
			prepare()
			exec(data)
			finish()
		}
	}
}@