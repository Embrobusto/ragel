host( "working/cond3.rl", 1 ) @{/* 
	* @@LANG: c++
	*/
	
	#include <iostream>
	#include <string.h>
	using std::cout;
	using std::endl;
	
	
	
}@
value int foo_start = 1;
value int foo_first_final = 2;

value int foo_en_main = 1;

array s8 _foo_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _foo_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0 };

array s8 _foo_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _foo_nfa_pop_trans( 0, 0 ) = { 0, 0 };

host( "working/cond3.rl", 22 ) @{
	
	void test( const char *str )
	{
		int cs = foo_start;
		int c = 0;
		const char *p = str;
		const char *pe = str + strlen( str );
		
		cout << "run:" << endl;
	}@
	{
		if ( p == pe )
		goto _test_eof;
		switch ( cs )
		{
			case 1:
			goto st_case_1;
			case 2:
			goto st_case_2;
			case 0:
			goto st_case_0;
		}
		goto st_out;
		ctr1:
		host( "working/cond3.rl", 15 ) ${c++;}$
		
		goto st1;
		ctr0:
		host( "working/cond3.rl", 15 ) ${c++;}$
		
		goto st1;
		st1:
		p+= 1;
		if ( p == pe )
		goto _test_eof1;
		st_case_1:
		if ( ( deref( data, p )) == 10 ) {
			int ck = 0;
			if ( host( "working/cond3.rl", 13 ) ={c == 5}= ) ck += 1;
			if ( ck > 0 ) {
				goto ctr2;
			} else {
				goto ctr1;
			}
			
		}
		{
			goto ctr0;
		}
		ctr2:
		host( "working/cond3.rl", 14 ) ${ cout << "  done" << endl; }$
		
		goto st2;
		st2:
		p+= 1;
		if ( p == pe )
		goto _test_eof2;
		st_case_2:
		{
			goto st0;
		}
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		st_out:
		_test_eof1: cs = 1; goto _test_eof; 
		_test_eof2: cs = 2; goto _test_eof; 
		
		_test_eof: {}
		_out: {}
	}
	host( "working/cond3.rl", 32 ) @{
		if ( cs >= foo_first_final )
		cout << "  success" << endl;
		else
		cout << "  failure" << endl;
		cout << endl;
	}
	
	int main()
	{
		test( "12345\n" );  // success
		test( "\n2345\n" ); // success, first newline ignored
		test( "1234\n" );   // failure, didn't get 5 chars before newline.
		return 0;
	}
	
}@