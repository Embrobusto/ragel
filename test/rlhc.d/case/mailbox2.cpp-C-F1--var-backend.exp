#include <iostream>
#include <string.h>

using std::cin;
using std::cout;
using std::cerr;
using std::endl;



static const char  _mailbox_trans_keys [] = { 1, 0, 27, 27, 26, 26, 25, 25, 3, 3, 1, 3, 1, 19, 1, 29, 1, 29, 1, 3, 1, 19, 1, 29, 1, 29, 1, 3, 1, 19, 1, 19, 1, 3, 1, 19, 1, 11, 1, 12, 1, 11, 1, 11, 1, 12, 1, 19, 1, 11, 1, 11, 1, 11, 1, 11, 1, 3, 1, 19, 1, 11, 1, 11, 1, 11, 1, 3, 1, 29, 1, 1, 1, 27, 1, 26, 1, 25, 1, 3, 1, 3, 1, 19, 1, 29, 1, 29, 1, 3, 1, 19, 1, 29, 1, 29, 1, 3, 1, 19, 1, 19, 1, 3, 1, 19, 1, 11, 1, 12, 1, 11, 1, 11, 1, 12, 1, 19, 1, 11, 1, 11, 1, 11, 1, 11, 1, 3, 1, 19, 1, 11, 1, 11, 1, 11, 1, 3, 1, 11, 1, 11, 1, 11, 1, 3, 1, 19, 1, 11, 1, 29, 1, 19, 1, 29, 1, 19, 1, 11, 1, 11, 1, 3, 1, 11, 4, 29, 1, 1, 0, 29, 4, 29, 4, 29, 4, 29, 4, 29, 0, 15, 0, 15, 0, 15, 0, 29, 4, 29, 4, 29, 4, 29, 4, 29, 4, 29, 4, 29, 4, 29, 1, 3, 1, 1, 0, 29, 0, 3, 4, 29, 4, 29, 5, 5, 0, 15, 6, 6, 8, 8, 14, 14, 0, 15, 0, 15, 0, 15, 1, 11, 1, 11, 1, 11, 1, 3, 1, 19, 1, 11, 1, 29, 1, 19, 1, 29, 1, 19, 1, 11, 1, 11, 1, 3, 1, 11, 17, 17, 1, 17, 0 ,  };
static const char  _mailbox_char_class [] = { 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 5, 4, 4, 4, 4, 6, 7, 8, 4, 9, 10, 9, 4, 4, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 4, 13, 4, 14, 4, 15, 16, 16, 16, 16, 16, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 19, 16, 16, 16, 16, 16, 16, 4, 4, 4, 4, 4, 4, 20, 21, 22, 20, 23, 20, 20, 20, 20, 24, 20, 20, 25, 20, 26, 20, 20, 27, 20, 28, 29, 20, 20, 20, 20, 20, 4, 4, 4, 4, 0 ,  };
static const short  _mailbox_index_offsets [] = { 0, 0, 1, 2, 3, 4, 7, 26, 55, 84, 87, 106, 135, 164, 167, 186, 205, 208, 227, 238, 250, 261, 272, 284, 303, 314, 325, 336, 347, 350, 369, 380, 391, 402, 405, 434, 435, 462, 488, 513, 516, 519, 538, 567, 596, 599, 618, 647, 676, 679, 698, 717, 720, 739, 750, 762, 773, 784, 796, 815, 826, 837, 848, 859, 862, 881, 892, 903, 914, 917, 928, 939, 950, 953, 972, 983, 1012, 1031, 1060, 1079, 1090, 1101, 1104, 1115, 1141, 1142, 1172, 1198, 1224, 1250, 1276, 1292, 1308, 1324, 1354, 1380, 1406, 1432, 1458, 1484, 1510, 1536, 1539, 1540, 1570, 1574, 1600, 1626, 1627, 1643, 1644, 1645, 1646, 1662, 1678, 1694, 1705, 1716, 1727, 1730, 1749, 1760, 1789, 1808, 1837, 1856, 1867, 1878, 1881, 1892, 1893, 0 ,  };
static const short  _mailbox_indices [] = { 0, 2, 3, 4, 1, 4, 5, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 4, 9, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 10, 10, 10, 10, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 4, 13, 1, 4, 14, 4, 4, 4, 4, 4, 4, 4, 15, 4, 4, 4, 4, 10, 10, 10, 10, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 16, 4, 4, 4, 4, 6, 6, 6, 6, 1, 4, 17, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 18, 4, 4, 4, 4, 6, 6, 6, 6, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 19, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 20, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 21, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 22, 1, 4, 23, 4, 4, 4, 4, 4, 4, 4, 4, 24, 1, 4, 5, 4, 4, 4, 4, 4, 25, 4, 26, 4, 4, 4, 4, 27, 27, 27, 27, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 28, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 29, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 30, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 31, 1, 4, 32, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 33, 4, 4, 4, 4, 6, 6, 6, 6, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 34, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 35, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 36, 37, 4, 5, 38, 1, 1, 39, 39, 39, 39, 39, 39, 39, 39, 1, 39, 39, 39, 39, 40, 41, 42, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 44, 44, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 45, 44, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 46, 44, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 47, 44, 43, 48, 44, 48, 49, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 50, 50, 50, 50, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 44, 48, 53, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 54, 54, 54, 54, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 44, 48, 57, 44, 48, 58, 48, 48, 48, 48, 48, 48, 48, 59, 48, 48, 48, 48, 54, 54, 54, 54, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 60, 48, 48, 48, 48, 50, 50, 50, 50, 44, 48, 61, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 62, 48, 48, 48, 48, 50, 50, 50, 50, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 63, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 64, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 65, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 66, 44, 48, 67, 48, 48, 48, 48, 48, 48, 48, 48, 68, 44, 48, 49, 48, 48, 48, 48, 48, 69, 48, 70, 48, 48, 48, 48, 71, 71, 71, 71, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 72, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 73, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 74, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 75, 44, 48, 76, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 77, 48, 48, 48, 48, 50, 50, 50, 50, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 78, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 79, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 80, 37, 48, 49, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 81, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 82, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 83, 37, 48, 84, 44, 48, 49, 48, 48, 48, 48, 48, 85, 48, 48, 48, 48, 48, 48, 86, 86, 86, 86, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 77, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 87, 87, 87, 87, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 88, 88, 88, 88, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 75, 75, 75, 75, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 89, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 90, 44, 48, 67, 44, 48, 49, 48, 48, 48, 48, 48, 48, 48, 60, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 93, 92, 94, 1, 92, 91, 91, 91, 91, 91, 91, 91, 91, 1, 91, 91, 91, 91, 95, 96, 97, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 98, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 99, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 100, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 101, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 103, 104, 102, 103, 102, 105, 106, 107, 1, 102, 108, 102, 102, 109, 1, 1, 111, 112, 110, 111, 110, 113, 114, 115, 1, 110, 116, 110, 110, 117, 1, 118, 120, 121, 119, 120, 119, 122, 123, 124, 1, 119, 125, 119, 119, 126, 1, 1, 120, 127, 1, 120, 128, 128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 129, 130, 131, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 132, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 133, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 134, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 135, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 136, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 137, 91, 91, 91, 91, 91, 91, 91, 91, 91, 138, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 140, 139, 141, 140, 142, 127, 1, 142, 128, 128, 128, 128, 128, 128, 128, 128, 1, 128, 128, 128, 128, 129, 130, 131, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 142, 144, 143, 142, 91, 91, 91, 91, 91, 91, 91, 91, 92, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 145, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 146, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 148, 111, 112, 149, 111, 149, 113, 114, 115, 1, 149, 116, 149, 149, 117, 1, 1, 148, 120, 152, 154, 155, 153, 154, 153, 156, 157, 158, 1, 153, 159, 153, 153, 160, 1, 1, 1, 1, 161, 1, 161, 1, 1, 1, 1, 161, 1, 161, 161, 1, 1, 1, 162, 163, 161, 162, 161, 164, 165, 166, 1, 161, 167, 161, 161, 168, 1, 1, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 169, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 170, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 171, 37, 4, 172, 1, 4, 5, 4, 4, 4, 4, 4, 173, 4, 4, 4, 4, 4, 4, 174, 174, 174, 174, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 33, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 175, 175, 175, 175, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 36, 36, 36, 36, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 176, 176, 176, 176, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 31, 31, 31, 31, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 177, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 178, 1, 4, 23, 1, 4, 5, 4, 4, 4, 4, 4, 4, 4, 16, 179, 44, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 180, 0 ,  };
static const short  _mailbox_index_defaults [] = { 0, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 43, 43, 43, 43, 43, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 1, 92, 1, 1, 1, 1, 1, 102, 110, 119, 1, 1, 1, 1, 1, 1, 1, 1, 139, 139, 1, 143, 1, 1, 147, 149, 150, 124, 151, 153, 161, 161, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 43, 0 ,  };
static const char  _mailbox_trans_cond_spaces [] = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0 ,  };
static const short  _mailbox_cond_targs [] = { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 128, 16, 17, 18, 19, 20, 21, 22, 23, 125, 24, 115, 123, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 130, 83, 86, 94, 105, 35, 130, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 82, 51, 52, 53, 54, 55, 56, 57, 58, 79, 59, 69, 77, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 85, 130, 86, 94, 105, 87, 88, 89, 90, 91, 92, 93, 107, 109, 110, 90, 111, 91, 92, 93, 107, 109, 110, 90, 111, 113, 91, 92, 93, 107, 109, 110, 90, 111, 130, 83, 86, 94, 105, 95, 96, 97, 98, 99, 100, 101, 102, 103, 101, 104, 102, 103, 106, 90, 107, 108, 91, 109, 111, 112, 91, 92, 93, 107, 109, 110, 90, 111, 114, 92, 93, 107, 109, 110, 90, 111, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 1, 36, 0 ,  };
static const char  _mailbox_cond_actions [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 5, 6, 7, 7, 6, 6, 7, 8, 6, 0, 9, 9, 10, 10, 9, 11, 10, 0, 12, 0, 0, 12, 12, 0, 13, 12, 14, 13, 13, 13, 13, 0, 0, 0, 0, 0, 0, 15, 16, 0, 0, 0, 17, 18, 0, 19, 0, 0, 10, 0, 0, 0, 20, 21, 21, 20, 20, 21, 22, 20, 0, 23, 23, 24, 24, 23, 25, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _mailbox_nfa_targs [] = { 0, 0 ,  };
static const char  _mailbox_nfa_offsets [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _mailbox_nfa_push_actions [] = { 0, 0 ,  };
static const char  _mailbox_nfa_pop_trans [] = { 0, 0 ,  };
static const int  mailbox_start  = 129;
static const int  mailbox_first_final  = 129;
static const int  mailbox_error  = 0;
static const int  mailbox_en_main  = 129;
#define BUFSIZE 8192

void test( const char *buf )
{
	int cs, len = strlen( buf );
	const char *ws = 0;
	
	
	{
		cs = ( int ) mailbox_start;
	}
	const char *p = buf;
	const char *pe = p + len;
	
	{
		unsigned int _trans = 0;
		unsigned int _have = 0;
		unsigned int _cont = 1;
		const char  *_keys;
		const short  *_inds;
		while ( _cont == 1  )
		{
		
			if ( cs == 0  )
			_cont = 0;
			
			_have = 0;
			if ( p == pe  )
			{
				if ( _have == 0  )
				_cont = 0;
				
			}
			
			if ( _cont == 1  )
			{
				if ( _have == 0  )
				{
					_keys = _mailbox_trans_keys + (cs<<1);
					_inds = _mailbox_indices + _mailbox_index_offsets[cs];
					if ( ((*( p  ))
					)<= 126 && ((*( p  ))
					)>= 9  )
					{
						int _ic = ( int ) _mailbox_char_class[( int ) ((*( p  ))
						)- 9];
						if ( _ic <= ( int ) (*( _keys+1  ))
						&& _ic >= ( int ) (*( _keys  ))
						)
						_trans = ( unsigned int  ) (*( _inds + ( int ) (_ic - ( int ) (*( _keys  ))
						) ))
						;
						
						else
						_trans = ( unsigned int  ) _mailbox_index_defaults[cs];
						
					}
					
					else
					{
						_trans = ( unsigned int  ) _mailbox_index_defaults[cs];
					}
					
					
				}
				
				if ( _cont == 1  )
				{
					cs = ( int ) _mailbox_cond_targs[_trans];
					switch ( _mailbox_cond_actions[_trans] ) {
						case 16 :
						{
							cout << *p; 
						}
						
						break;
						case 18 :
						{
							cout << ' '; 
						}
						
						break;
						case 9 :
						{
							cout.write(ws, p-ws); cout << ' '; 
						}
						
						break;
						case 21 :
						{
							cout << "| "; cout.write(ws+1, p-ws-2); 
						}
						
						break;
						case 23 :
						{
							cout << "| "; cout.write(ws, p-ws); 
						}
						
						break;
						case 7 :
						{
							cout << '\t'; 
						}
						
						break;
						case 13 :
						{
							cout << '\n'; 
						}
						
						break;
						case 3 :
						{
							cout << "------\n"; 
						}
						
						break;
						case 5 :
						{
							cout << "FROM\n"; 
						}
						
						break;
						case 19 :
						{
							cout << "TO\n"; 
						}
						
						break;
						case 12 :
						{
							ws = p; 
						}
						
						break;
						case 1 :
						{
						
						}
						
						break;
						case 4 :
						{
						
						}
						
						break;
						case 17 :
						{
							cout << ' '; 
						}
						{
							cout << *p; 
						}
						
						break;
						case 11 :
						{
							cout.write(ws, p-ws); cout << ' '; 
						}
						{
							cout << '\n'; 
						}
						
						break;
						case 10 :
						{
							cout.write(ws, p-ws); cout << ' '; 
						}
						{
							ws = p; 
						}
						
						break;
						case 22 :
						{
							cout << "| "; cout.write(ws+1, p-ws-2); 
						}
						{
							cout << '\n'; 
						}
						
						break;
						case 20 :
						{
							cout << "| "; cout.write(ws+1, p-ws-2); 
						}
						{
							ws = p; 
						}
						
						break;
						case 25 :
						{
							cout << "| "; cout.write(ws, p-ws); 
						}
						{
							cout << '\n'; 
						}
						
						break;
						case 24 :
						{
							cout << "| "; cout.write(ws, p-ws); 
						}
						{
							ws = p; 
						}
						
						break;
						case 8 :
						{
							cout << '\t'; 
						}
						{
							cout << '\n'; 
						}
						
						break;
						case 6 :
						{
							cout << '\t'; 
						}
						{
							ws = p; 
						}
						
						break;
						case 14 :
						{
							cout << '\n'; 
						}
						{
						
						}
						
						break;
						case 2 :
						{
							cout << "------\n"; 
						}
						{
						
						}
						
						break;
						case 15 :
						{
							cout << "SUBJECT\n"; 
						}
						{
							cout << '\t'; 
						}
						
						break;
						
					}
					if ( cs == 0  )
					_cont = 0;
					
					if ( _cont == 1  )
					p += 1;
					
				}
			}
			
		}
		
	}
	if ( cs == mailbox_error )
	cerr << "ERROR" << endl;
	
	if ( cs < mailbox_first_final )
	cerr << "DID NOT FINISH IN A FINAL STATE" << endl;
}

int main()
{
	test(
	"From user@host.com Wed Nov 28 13:30:05 2001\n"
	"From: \"Adrian D. Thurston\" <thurston@complang.org>\n"
	"Subject:   the squirrel has landed\n"
	"\n"
	"Message goes here. \n"
	"From (trick from line).\n"
	"From: not really a header\n"
	"\n"
	"From user2@host2.com Wed Nov 28 13:30:05 2001\n"
	"To: Edgar Allen Poe <ep@net.com> (da man)\n"
	"Subject:   (no subject) \n"
	"\n"
	"Message goes here. \n"
	"\n"
	);
	return 0;
}

