using System;
// Disables lots of warnings that appear in the test suite
#pragma warning disable 0168, 0169, 0219, 0162, 0414
namespace Test {
	class Test
	{
		int ts;
		int te;
		int act;
		int token;
		
		
		
		
		static readonly sbyte  []_scanner_actions = { 0, 1, 2, 1, 3, 1, 8, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 16, 1, 17, 1, 18, 1, 19, 1, 20, 1, 21, 1, 22, 1, 23, 1, 24, 1, 25, 1, 26, 1, 27, 1, 28, 1, 29, 1, 30, 1, 31, 1, 32, 1, 33, 1, 34, 1, 35, 1, 36, 1, 37, 1, 38, 1, 39, 1, 40, 1, 41, 1, 42, 1, 43, 1, 44, 1, 45, 2, 0, 1, 2, 3, 4, 2, 3, 5, 2, 3, 6, 2, 3, 7, 0,  };
		static readonly char  []_scanner_trans_keys = { '\u0001', '\u0000', '\u0000', '\u0018', '\u0001', '\u0000', '\u0000', '\u0018', '\u0001', '\u0000', '\u000b', '\u000b', '\u0009', '\u000e', '\u000d', '\u000e', '\u0002', '\u0002', '\u0002', '\u000c', '\u0000', '\u0000', '\u000d', '\u0014', '\u0002', '\u001c', '\u0002', '\u001c', '\u0010', '\u0010', '\u0010', '\u0010', '\u0006', '\u0010', '\u0010', '\u0010', '\u0009', '\u0010', '\u000a', '\u0011', '\u0008', '\u0008', '\u0008', '\u000e', '\u000d', '\u001a', '\u000d', '\u001a', '\u0002', '\u0010', '\u000b', '\u001b', '\u000b', '\u001a', '\u000d', '\u001a', '\u000b', '\u001a', '\u000f', '\u000f', '\u0010', '\u0010', '\u000d', '\u001b', '\u0003', '\u001b', '\u0010', '\u0010', '\u0010', '\u001c', '\u0000',  };
		static readonly sbyte  []_scanner_char_class = { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 4, 5, 6, 7, 4, 4, 8, 9, 4, 10, 11, 12, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 4, 4, 16, 17, 4, 4, 18, 18, 18, 18, 19, 20, 21, 21, 21, 21, 21, 22, 21, 21, 21, 21, 21, 21, 21, 21, 23, 21, 21, 21, 21, 21, 4, 24, 4, 25, 21, 4, 18, 18, 18, 18, 19, 20, 21, 21, 21, 21, 21, 26, 21, 21, 21, 21, 21, 21, 21, 21, 23, 21, 21, 27, 21, 21, 4, 28, 4, 4, 0,  };
		static readonly short  []_scanner_index_offsets = { 0, 0, 25, 25, 50, 50, 51, 57, 59, 60, 71, 72, 80, 107, 134, 135, 136, 147, 148, 156, 164, 165, 172, 186, 200, 215, 232, 248, 262, 278, 279, 280, 295, 320, 321, 0,  };
		static readonly sbyte  []_scanner_indicies = { 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 8, 9, 9, 0, 0, 10, 10, 10, 10, 12, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 15, 17, 17, 16, 16, 16, 17, 17, 17, 19, 1, 20, 21, 22, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 20, 32, 32, 32, 32, 33, 32, 20, 34, 32, 32, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 39, 40, 37, 37, 37, 37, 37, 37, 37, 37, 37, 41, 42, 43, 37, 37, 37, 37, 37, 37, 44, 45, 37, 37, 37, 37, 37, 46, 47, 49, 50, 37, 37, 51, 37, 52, 52, 52, 52, 53, 53, 53, 53, 54, 55, 53, 55, 53, 53, 53, 55, 10, 10, 53, 53, 53, 53, 53, 55, 53, 55, 53, 53, 53, 55, 11, 37, 37, 37, 37, 37, 37, 37, 37, 37, 14, 37, 37, 37, 56, 52, 57, 58, 58, 57, 57, 57, 57, 54, 57, 57, 59, 59, 57, 57, 59, 60, 52, 61, 58, 58, 61, 61, 61, 61, 54, 61, 61, 62, 62, 61, 61, 62, 17, 17, 63, 63, 63, 17, 17, 17, 63, 64, 64, 63, 63, 64, 52, 57, 29, 29, 57, 57, 57, 57, 54, 57, 57, 59, 59, 57, 57, 59, 65, 66, 32, 32, 67, 67, 67, 32, 32, 32, 32, 32, 32, 67, 67, 32, 32, 1, 67, 67, 67, 4, 67, 67, 67, 67, 67, 32, 32, 67, 67, 67, 32, 32, 32, 32, 32, 32, 67, 67, 32, 32, 68, 69, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 70, 0,  };
		static readonly sbyte  []_scanner_index_defaults = { 0, 1, 1, 4, 4, 7, 0, 0, 11, 11, 14, 16, 18, 18, 37, 37, 37, 37, 37, 37, 48, 37, 53, 53, 37, 57, 61, 63, 57, 37, 37, 67, 67, 37, 37, 0,  };
		static readonly sbyte  []_scanner_trans_cond_spaces = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  };
		static readonly sbyte  []_scanner_cond_targs = { 12, 1, 12, 2, 3, 12, 4, 12, 12, 7, 23, 8, 9, 12, 10, 12, 12, 27, 13, 14, 12, 15, 16, 17, 18, 19, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20, 12, 12, 12, 5, 22, 12, 6, 12, 12, 12, 26, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0,  };
		static readonly sbyte  []_scanner_cond_actions = { 79, 0, 7, 0, 0, 5, 0, 77, 51, 0, 0, 0, 0, 55, 0, 57, 75, 0, 0, 0, 53, 0, 0, 0, 0, 0, 3, 3, 90, 90, 0, 0, 0, 84, 0, 0, 73, 71, 21, 31, 23, 37, 27, 43, 33, 45, 35, 0, 69, 47, 49, 0, 87, 61, 0, 9, 29, 63, 93, 11, 0, 65, 13, 67, 15, 17, 19, 59, 39, 41, 25, 0,  };
		static readonly sbyte  []_scanner_to_state_actions = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  };
		static readonly sbyte  []_scanner_from_state_actions = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  };
		static readonly sbyte  []_scanner_eof_trans = { 0, 1, 1, 1, 1, 8, 1, 1, 8, 8, 8, 17, 0, 37, 38, 38, 38, 38, 38, 38, 49, 38, 54, 54, 38, 58, 62, 64, 58, 38, 38, 68, 68, 38, 38, 0,  };
		static readonly sbyte  []_scanner_nfa_targs = { 0, 0,  };
		static readonly sbyte  []_scanner_nfa_offsets = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  };
		static readonly sbyte  []_scanner_nfa_push_actions = { 0, 0,  };
		static readonly sbyte  []_scanner_nfa_pop_trans = { 0, 0,  };
		static readonly int  scanner_start  = 12;
		static readonly int  scanner_first_final  = 12;
		static readonly int  scanner_error  = 0;
		static readonly int  scanner_en_main  = 12;
		int cs;
		
		void init()
		{
		
			{
				cs = (int)scanner_start;
				ts = 0;
				te = 0;
				act = 0;
			}
		}
		
		void exec( char[] data, int len )
		{
			int p = 0;
			int pe = len;
			int eof = len;
			string _s;
			char [] buffer = new char [1024];
			int blen = 0;
			
			{
				uint _trans = 0;
				uint _have = 0;
				uint _cont = 1;
				int _acts;
				uint _nacts;
				int _keys;
				int _inds;
				while ( _cont == 1 )
				{
				
					if ( cs == 0 )
					_cont = 0;
					
					_have = 0;
					if ( p == pe  )
					{
						if ( p == eof  )
						{
							if ( _scanner_eof_trans[cs] > 0 )
							{
								_trans = (uint )_scanner_eof_trans[cs] - 1;
								_have = 1;
							}
							
							if ( _have == 0 )
							{
							}
							
						}
						
						
						if ( _have == 0 )
						_cont = 0;
						
					}
					
					if ( _cont == 1 )
					{
						if ( _have == 0 )
						{
							_acts = _scanner_from_state_actions[cs] ;
							_nacts = (uint )_scanner_actions[_acts ];
							_acts += 1;
							while ( _nacts > 0 )
							{
								switch ( _scanner_actions[_acts ] ) {
									case 2:
									{{ts = p;
										}}
									
									break;
									
								}
								_nacts -= 1;
								_acts += 1;
							}
							
							
							_keys = (cs<<1) ;
							_inds = _scanner_index_offsets[cs] ;
							if ( ( data[p ]) <= 126&& ( data[p ]) >= 10 )
							{
								int _ic = (int)_scanner_char_class[(int)( data[p ]) - 10];
								if ( _ic <= (int)_scanner_trans_keys[_keys+1]&& _ic >= (int)_scanner_trans_keys[_keys ] )
								_trans = (uint )_scanner_indicies[_inds + (int)( _ic - (int)_scanner_trans_keys[_keys ])  ];
								
								else
								_trans = (uint )_scanner_index_defaults[cs];
								
							}
							
							else
							{
								_trans = (uint )_scanner_index_defaults[cs];
							}
							
							
						}
						
						if ( _cont == 1 )
						{
							cs = (int)_scanner_cond_targs[_trans];
							if ( _scanner_cond_actions[_trans] != 0 )
							{
								_acts = _scanner_cond_actions[_trans] ;
								_nacts = (uint )_scanner_actions[_acts ];
								_acts += 1;
								while ( _nacts > 0 )
								{
									switch ( _scanner_actions[_acts ] ) {
										case 3:
										{{te = p+1;
											}}
										
										break;
										case 4:
										{{act = 3;
											}}
										
										break;
										case 5:
										{{act = 4;
											}}
										
										break;
										case 6:
										{{act = 5;
											}}
										
										break;
										case 7:
										{{act = 6;
											}}
										
										break;
										case 8:
										{{te = p+1;
												{token = 193;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 9:
										{{te = p+1;
												{token = 192;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 10:
										{{te = p+1;
												{token = 194;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 11:
										{{te = p+1;
												{token = 218;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 12:
										{{te = p+1;
												{token = 219;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 13:
										{{te = p+1;
												{token = 220;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 14:
										{{te = p+1;
												{token = 197;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 15:
										{{te = p+1;
												{token = 223;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 16:
										{{te = p+1;
												{token = 224;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 17:
										{{te = p+1;
												{token = 225;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 18:
										{{te = p+1;
												{token = 226;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 19:
										{{te = p+1;
												{token = 227;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 20:
										{{te = p+1;
												{token = 228;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 21:
										{{te = p+1;
												{token = 229;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 22:
										{{te = p+1;
												{token = 230;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 23:
										{{te = p+1;
												{token = 231;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 24:
										{{te = p+1;
												{token = 232;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 25:
										{{te = p+1;
												{token = 233;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 26:
										{{te = p+1;
												{token = 234;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 27:
										{{te = p+1;
												{token = 212;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 28:
										{{te = p+1;
												{token = 213;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 29:
										{{te = p+1;
												{token = 214;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 30:
										{{te = p+1;
												{token = 215;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 31:
										{{te = p+1;
												{token = 240;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 32:
										{{te = p+1;
												{token = ( int ) ( data[ts] )
													;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 33:
										{{te = p+1;
												{token = 242;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 34:
										{{te = p+1;
												{token = 242;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 35:
										{{te = p;
												p = p - 1;
												{token = 195;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 36:
										{{te = p;
												p = p - 1;
												{token = 194;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 37:
										{{te = p;
												p = p - 1;
												{token = 218;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 38:
										{{te = p;
												p = p - 1;
												{token = 219;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 39:
										{{te = p;
												p = p - 1;
												{token = 220;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 40:
										{{te = p;
												p = p - 1;
												{token = 211;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 41:
										{{te = p;
												p = p - 1;
												{token = ( int ) ( data[ts] )
													;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 42:
										{{te = p;
												p = p - 1;
												{token = 241;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 43:
										{{p = ((te))-1;
												{token = 218;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 44:
										{{p = ((te))-1;
												{token = ( int ) ( data[ts] )
													;
													Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
													Console.Write( "\n" );}
											}}
										
										break;
										case 45:
										{{switch ( act  ) {
													case 0:
													{{cs = 0;
														}}
													
													break;
													case 3:
													p = ((te))-1;
													{token = 195;
														Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
														Console.Write( "\n" );}
													
													break;
													case 4:
													p = ((te))-1;
													{token = 194;
														Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
														Console.Write( "\n" );}
													
													break;
													case 5:
													p = ((te))-1;
													{token = 218;
														Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
														Console.Write( "\n" );}
													
													break;
													case 6:
													p = ((te))-1;
													{token = 219;
														Console.Write( "<" );Console.Write( token );Console.Write( "> " );Console.Write( new String( data , ts , te - ts ) );
														Console.Write( "\n" );}
													
													break;
													
												}
											}
										}
										
										break;
										
									}
									_nacts -= 1;
									_acts += 1;
								}
								
							}
							
							
							_acts = _scanner_to_state_actions[cs] ;
							_nacts = (uint )_scanner_actions[_acts ];
							_acts += 1;
							while ( _nacts > 0 )
							{
								switch ( _scanner_actions[_acts ] ) {
									case 0:
									{{ts = 0;
										}}
									
									break;
									case 1:
									{{act = 0;
										}}
									
									break;
									
								}
								_nacts -= 1;
								_acts += 1;
							}
							
							
							if ( cs == 0 )
							_cont = 0;
							
							if ( _cont == 1 )
							p += 1;
							
						}
					}
					
				}
				
			}
		}
		
		void finish( )
		{
			if ( cs >= scanner_first_final )
			Console.WriteLine( "ACCEPT" );
			else
			Console.WriteLine( "FAIL" );
		}
		
		static readonly string[] inp = {
			"\"\\\"hi\" /!\n!/\n44 .44\n44. 44\n44 . 44\n44.44\n_hithere22",
			"'\\''\"\\n\\d'\\\"\"\nhi\n99\n.99\n99e-4\n->*\n||\n0x98\n0x\n//\n/! * !/",
			"'\n'\n",
		};
		
		
		static readonly int inplen = 3;
		
		public static void Main (string[] args)
		{
			Test machine = new Test();
			for ( int i = 0; i < inplen; i++ ) {
				machine.init();
				machine.exec( inp[i].ToCharArray(), inp[i].Length );
				machine.finish();
			}
		}
	}
}
