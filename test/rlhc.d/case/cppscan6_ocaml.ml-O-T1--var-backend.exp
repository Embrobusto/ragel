(*
* @LANG: ocaml
* @GENERATED: true
*)

let ts = ref 0
let te = ref 0
let act = ref 0
let token = ref 0






let _scanner_key_offsets : int array = [|
0; 0; 3; 3; 6; 6; 7; 11; 13; 14; 16; 17; 23; 54; 56; 57; 58; 60; 61; 63; 66; 67; 71; 79; 85; 88; 98; 107; 117; 126; 127; 128; 135; 144; 145; 0 ; 
|]
let _scanner_trans_keys : int array = [|
10; 34; 92; 10; 39; 92; 46; 43; 45; 48; 57; 48; 57; 33; 33; 47; 10; 48; 57; 65; 70; 97; 102; 33; 34; 37; 38; 39; 42; 43; 45; 46; 47; 48; 58; 61; 76; 94; 95; 124; 35; 44; 49; 57; 59; 64; 65; 90; 91; 96; 97; 122; 123; 126; 33; 126; 61; 61; 38; 61; 61; 43; 61; 45; 61; 62; 42; 42; 46; 48; 57; 69; 70; 76; 101; 102; 108; 48; 57; 70; 76; 102; 108; 48; 57; 33; 47; 61; 46; 69; 76; 85; 101; 108; 117; 120; 48; 57; 46; 69; 76; 85; 101; 108; 117; 48; 57; 76; 85; 108; 117; 48; 57; 65; 70; 97; 102; 46; 69; 76; 85; 101; 108; 117; 48; 57; 58; 61; 95; 48; 57; 65; 90; 97; 122; 34; 39; 95; 48; 57; 65; 90; 97; 122; 61; 61; 124; 0 ; 
|]
let _scanner_single_lengths : int array = [|
0; 3; 0; 3; 0; 1; 2; 0; 1; 2; 1; 0; 17; 0; 1; 1; 2; 1; 2; 3; 1; 2; 6; 4; 3; 8; 7; 4; 7; 1; 1; 1; 3; 1; 2; 0 ; 
|]
let _scanner_range_lengths : int array = [|
0; 0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 3; 7; 1; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0; 1; 1; 3; 1; 0; 0; 3; 3; 0; 0; 0 ; 
|]
let _scanner_index_offsets : int array = [|
0; 0; 4; 5; 9; 10; 12; 16; 18; 20; 23; 25; 29; 54; 56; 58; 60; 63; 65; 68; 72; 74; 78; 86; 92; 96; 106; 115; 123; 132; 134; 136; 141; 148; 150; 0 ; 
|]
let _scanner_trans_cond_spaces : int array = [|
-1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1; 0 ; 
|]
let _scanner_trans_offsets : int array = [|
0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35; 36; 37; 38; 39; 40; 41; 42; 43; 44; 45; 46; 47; 48; 49; 50; 51; 52; 53; 54; 55; 56; 57; 58; 59; 60; 61; 62; 63; 64; 65; 66; 67; 68; 69; 70; 71; 72; 73; 74; 75; 76; 77; 78; 79; 80; 81; 82; 83; 84; 85; 86; 87; 88; 89; 90; 91; 92; 93; 94; 95; 96; 97; 98; 99; 100; 101; 102; 103; 104; 105; 106; 107; 108; 109; 110; 111; 112; 113; 114; 115; 116; 117; 118; 119; 120; 121; 122; 123; 124; 125; 126; 127; 128; 129; 130; 131; 132; 133; 134; 135; 136; 137; 138; 139; 140; 141; 142; 143; 144; 145; 146; 147; 148; 149; 150; 151; 152; 153; 154; 155; 156; 157; 158; 159; 160; 161; 162; 163; 164; 165; 166; 167; 168; 169; 170; 171; 172; 173; 174; 175; 176; 177; 178; 179; 180; 181; 182; 183; 184; 185; 0 ; 
|]
let _scanner_trans_lengths : int array = [|
1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 0 ; 
|]
let _scanner_cond_keys : int array = [|
0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0 ; 
|]
let _scanner_cond_targs : int array = [|
12; 12; 2; 1; 1; 12; 12; 4; 3; 3; 12; 12; 7; 7; 23; 12; 23; 12; 9; 8; 9; 12; 8; 12; 10; 27; 27; 27; 12; 14; 1; 15; 16; 3; 17; 18; 19; 21; 24; 25; 29; 30; 32; 33; 31; 34; 12; 28; 12; 31; 12; 31; 12; 13; 12; 13; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 20; 12; 12; 12; 12; 5; 22; 12; 6; 12; 12; 6; 12; 12; 22; 12; 12; 12; 12; 12; 23; 12; 8; 10; 12; 12; 22; 6; 12; 12; 6; 12; 12; 11; 26; 12; 22; 6; 12; 12; 6; 12; 12; 26; 12; 12; 12; 12; 12; 27; 27; 27; 12; 22; 6; 12; 12; 6; 12; 12; 28; 12; 12; 12; 12; 12; 31; 31; 31; 31; 12; 1; 3; 31; 31; 31; 31; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 12; 0 ; 
|]
let _scanner_cond_actions : int array = [|
1; 2; 0; 0; 0; 1; 3; 0; 0; 0; 5; 4; 0; 0; 0; 1; 0; 1; 0; 0; 0; 6; 0; 7; 0; 0; 0; 0; 8; 0; 0; 0; 0; 0; 0; 0; 0; 12; 12; 13; 0; 0; 14; 0; 0; 0; 11; 13; 11; 0; 11; 0; 11; 0; 15; 0; 17; 16; 18; 16; 19; 20; 16; 21; 16; 22; 23; 16; 24; 25; 0; 16; 27; 26; 28; 0; 29; 16; 0; 31; 31; 0; 31; 31; 29; 30; 31; 31; 31; 31; 0; 30; 0; 0; 32; 16; 29; 0; 35; 35; 0; 35; 35; 0; 34; 33; 29; 0; 37; 37; 0; 37; 37; 34; 36; 39; 39; 39; 39; 0; 0; 0; 38; 29; 0; 35; 35; 0; 35; 35; 13; 33; 40; 16; 41; 16; 0; 0; 0; 0; 42; 0; 0; 0; 0; 0; 0; 42; 43; 16; 44; 45; 16; 1; 1; 1; 1; 4; 1; 1; 4; 4; 4; 8; 15; 16; 16; 16; 16; 16; 16; 26; 16; 30; 30; 16; 33; 36; 38; 33; 16; 16; 42; 42; 16; 16; 0 ; 
|]
let _scanner_to_state_actions : int array = [|
0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 9; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0 ; 
|]
let _scanner_from_state_actions : int array = [|
0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 10; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0 ; 
|]
let _scanner_eof_trans_indexed : int array = [|
0; 12; 12; 12; 12; 15; 12; 12; 15; 15; 15; 19; 0; 21; 22; 22; 22; 22; 22; 22; 32; 22; 35; 35; 22; 38; 40; 42; 38; 22; 22; 46; 46; 22; 22; 0 ; 
|]
let _scanner_eof_trans_direct : int array = [|
0; 154; 155; 156; 157; 158; 159; 160; 161; 162; 163; 164; 0; 165; 166; 167; 168; 169; 170; 171; 172; 173; 174; 175; 176; 177; 178; 179; 180; 181; 182; 183; 184; 185; 186; 0 ; 
|]
let _scanner_nfa_targs : int array = [|
0; 0 ; 
|]
let _scanner_nfa_offsets : int array = [|
0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0 ; 
|]
let _scanner_nfa_push_actions : int array = [|
0; 0 ; 
|]
let _scanner_nfa_pop_trans : int array = [|
0; 0 ; 
|]
let scanner_start  : int  = 12
let scanner_first_final  : int  = 12
let scanner_error  : int  = 0
let scanner_en_main  : int  = 12
let exec data = 
let buffer = String.create(1024) in 
let blen :int ref = ref 0 in
let cs = ref 0 in
let p = ref 0 in
let pe = ref (String.length data) in
let eof = pe in
begin
	cs  := scanner_start;
	ts  := 0;
	te  := 0;
	act  := 0;
	
end;
begin
	let _klen : int  ref = ref 0 in
	let _keys : int ref = ref 0 in
	let _ckeys : int ref = ref 0 in
	let _cpc : int  ref = ref 0 in
	let _trans : int  ref = ref 0 in
	let _cond  : int  ref = ref 0 in
	let _have  : int  ref = ref 0 in
	let _cont  : int  ref = ref 1 in
	while _cont.contents= 1  do
	begin
		if cs.contents= 0  then
		begin
			_cont  := 0;
			
		end
		;_have  := 0;
		if p.contents= pe.contents then
		begin
			begin
				if p.contents= eof.contents then
				begin
					begin
						if _scanner_eof_trans_direct.(cs.contents)> 0  then
						begin
							begin
								_trans  := _scanner_eof_trans_direct.(cs.contents)- 1;
								_cond  := _scanner_trans_offsets.(_trans.contents);
								_have  := 1;
								
							end;
							
						end
						;if _have.contents= 0  then
						begin
							begin
							
							end;
							
						end
						;
					end;
					
				end
				;if _have.contents= 0  then
				begin
					_cont  := 0;
					
				end
				;
			end;
			
		end
		;if _cont.contents= 1  then
		begin
			begin
				if _have.contents= 0  then
				begin
					begin
						if _scanner_from_state_actions.(cs.contents) = 10  then
						begin
							begin
								begin
									ts  := p.contents;
									
								end;
								
							end;
							
						end
						;
						_keys  := _scanner_key_offsets.(cs.contents);
						_trans  := _scanner_index_offsets.(cs.contents);
						_have  := 0;
						_klen  := _scanner_single_lengths.(cs.contents);
						if _klen.contents> 0  then
						begin
							begin
								let _lower : int ref = ref 0 in
								let _mid : int ref = ref 0 in
								let _upper : int ref = ref 0 in
								_lower  := _keys.contents;
								_upper  := _keys.contents+ _klen.contents- 1;
								while _upper.contents>= _lower.contents&& _have.contents= 0  do
								begin
									_mid  := _lower.contents+ ( ( _upper.contents-_lower.contents ) asr 1 );
									if ( Char.code data.[p.contents] )< _scanner_trans_keys.( _mid.contents ) then
									begin
										_upper  := _mid.contents- 1;
										
									end
									else if ( Char.code data.[p.contents] )> _scanner_trans_keys.( _mid.contents ) then
									begin
										_lower  := _mid.contents+ 1;
										
									end
									else
									begin
										begin
											_trans  := _trans.contents + ( _mid.contents- _keys.contents );
											_have  := 1;
											
										end;
										
									end
									;
								end;
								
								done;
								if _have.contents= 0  then
								begin
									begin
										_keys  := _keys.contents + _klen.contents;
										_trans  := _trans.contents + _klen.contents;
										
									end;
									
								end
								;
							end;
							
						end
						;if _have.contents= 0  then
						begin
							begin
								_klen  := _scanner_range_lengths.(cs.contents);
								if _klen.contents> 0  then
								begin
									begin
										let _lower : int ref = ref 0 in
										let _mid : int ref = ref 0 in
										let _upper : int ref = ref 0 in
										_lower  := _keys.contents;
										_upper  := _keys.contents+ ( _klen.contents lsl 1 )- 2;
										while _have.contents= 0 && _lower.contents<= _upper.contents do
										begin
											_mid  := _lower.contents+ ( ( ( _upper.contents-_lower.contents ) asr 1 ) land  lnot 1 );
											if ( Char.code data.[p.contents] )< _scanner_trans_keys.( _mid.contents ) then
											begin
												_upper  := _mid.contents- 2;
												
											end
											else if ( Char.code data.[p.contents] )> _scanner_trans_keys.( _mid.contents+ 1  ) then
											begin
												_lower  := _mid.contents+ 2;
												
											end
											else
											begin
												begin
													_trans  := _trans.contents + ( ( _mid.contents- _keys.contents ) asr 1 );
													_have  := 1;
													
												end;
												
											end
											;
										end;
										
										done;
										if _have.contents= 0  then
										begin
											_trans  := _trans.contents + _klen.contents;
											
										end
										;
									end;
									
								end
								;
							end;
							
						end
						;_ckeys  := _scanner_trans_offsets.(_trans.contents);
						_klen  := _scanner_trans_lengths.(_trans.contents);
						_cond  := _scanner_trans_offsets.(_trans.contents);
						_have  := 0;
						_cpc  := 0;
						begin
							let _lower : int ref = ref 0 in
							let _mid : int ref = ref 0 in
							let _upper : int ref = ref 0 in
							_lower  := _ckeys.contents;
							_upper  := _ckeys.contents+ _klen.contents- 1;
							while _have.contents= 0 && _lower.contents<= _upper.contents do
							begin
								_mid  := _lower.contents+ ( ( _upper.contents-_lower.contents ) asr 1 );
								if _cpc.contents< _scanner_cond_keys.( _mid.contents ) then
								begin
									_upper  := _mid.contents- 1;
									
								end
								else if _cpc.contents> _scanner_cond_keys.( _mid.contents ) then
								begin
									_lower  := _mid.contents+ 1;
									
								end
								else
								begin
									begin
										_cond  := _cond.contents + ( _mid.contents- _ckeys.contents );
										_have  := 1;
										
									end;
									
								end
								;
							end;
							
							done;
							if _have.contents= 0  then
							begin
								begin
									cs  := 0;
									_cont  := 0;
									
								end;
								
							end
							;
						end;
						
					end;
					
				end
				;if _cont.contents= 1  then
				begin
					begin
						cs  := _scanner_cond_targs.(_cond.contents);
						if _scanner_cond_actions.(_cond.contents) = 12  then
						begin
							begin
								begin
									te  := p.contents+1;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 3  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 193;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 2  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 192;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 31  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 194;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 35  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 218;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 37  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 219;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 39  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 220;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 40  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 197;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 41  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 223;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 17  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 224;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 19  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 225;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 45  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 226;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 21  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 227;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 32  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 228;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 18  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 229;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 23  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 230;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 25  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 231;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 20  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 232;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 43  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 233;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 44  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 234;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 22  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 212;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 24  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 213;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 27  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 214;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 28  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 215;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 5  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 240;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 11  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := ( ( Char.code data.[ts.contents] ) )
										;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 6  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 242;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 7  then
						begin
							begin
								begin
									te  := p.contents+1;
									begin
										token := 242;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 42  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := 195;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 30  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := 194;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 33  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := 218;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 36  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := 219;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 38  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := 220;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 26  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := 211;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 16  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := ( ( Char.code data.[ts.contents] ) )
										;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 15  then
						begin
							begin
								begin
									te  := p.contents;
									p  := p.contents- 1;
									begin
										token := 241;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 8  then
						begin
							begin
								begin
									p  := ( ( te.contents ) )-1;
									begin
										token := 218;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 4  then
						begin
							begin
								begin
									p  := ( ( te.contents ) )-1;
									begin
										token := ( ( Char.code data.[ts.contents] ) )
										;
										print_string( "<" );
										print_int( token.contents );
										print_string( "> " );
										for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										
									end;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 1  then
						begin
							begin
								begin
									if act.contents = 0  then
									begin
										begin
											begin
												cs  := 0;
												
											end;
											
										end;
										
									end
									else if act.contents = 3  then
									begin
										p  := ( ( te.contents ) )-1;
										begin
											token := 195;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
											
										end;
										
									end
									else if act.contents = 4  then
									begin
										p  := ( ( te.contents ) )-1;
										begin
											token := 194;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
											
										end;
										
									end
									else if act.contents = 5  then
									begin
										p  := ( ( te.contents ) )-1;
										begin
											token := 218;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
											
										end;
										
									end
									else if act.contents = 6  then
									begin
										p  := ( ( te.contents ) )-1;
										begin
											token := 219;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
											
										end;
										
									end
									;
									
								end;
								
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 14  then
						begin
							begin
								begin
									te  := p.contents+1;
									
								end;
								
							end;
							begin
								begin
									act  := 3;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 29  then
						begin
							begin
								begin
									te  := p.contents+1;
									
								end;
								
							end;
							begin
								begin
									act  := 4;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 13  then
						begin
							begin
								begin
									te  := p.contents+1;
									
								end;
								
							end;
							begin
								begin
									act  := 5;
									
								end;
								
							end;
							
						end
						else if _scanner_cond_actions.(_cond.contents) = 34  then
						begin
							begin
								begin
									te  := p.contents+1;
									
								end;
								
							end;
							begin
								begin
									act  := 6;
									
								end;
								
							end;
							
						end
						;
						if _scanner_to_state_actions.(cs.contents) = 9  then
						begin
							begin
								begin
									ts  := 0;
									
								end;
								
							end;
							begin
								begin
									act  := 0;
									
								end;
								
							end;
							
						end
						;
						if cs.contents= 0  then
						begin
							_cont  := 0;
							
						end
						;if _cont.contents= 1  then
						begin
							p  := p.contents + 1;
							
						end
						;
					end;
					
				end
				;
			end;
			
		end
		;
	end;
	
	done;
	
end;
if !cs >= scanner_first_final then
print_string "ACCEPT\n"
else
print_string "FAIL\n"
;;

let () =
exec "\"\\\"hi\" /!\n!/\n44 .44\n44. 44\n44 . 44\n44.44\n_hithere22";
exec "'\\''\"\\n\\d'\\\"\"\nhi\n99\n.99\n99e-4\n->*\n||\n0x98\n0x\n//\n/! * !/";
exec "'\n'\n";
()
;;

