const _scanner_actions = Int8[0, 1, 2, 1, 3, 1, 8, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 16, 1, 17, 1, 18, 1, 19, 1, 20, 1, 21, 1, 22, 1, 23, 1, 24, 1, 25, 1, 26, 1, 27, 1, 28, 1, 29, 1, 30, 1, 31, 1, 32, 1, 33, 1, 34, 1, 35, 1, 36, 1, 37, 1, 38, 1, 39, 1, 40, 1, 41, 1, 42, 1, 43, 1, 44, 1, 45, 2, 0, 1, 2, 3, 4, 2, 3, 5, 2, 3, 6, 2, 3, 7, 0 , ]
const _scanner_trans_keys = UInt8[1, 0, 0, 24, 1, 0, 0, 24, 1, 0, 11, 11, 9, 14, 13, 14, 2, 2, 2, 12, 0, 0, 13, 20, 2, 28, 2, 28, 16, 16, 16, 16, 6, 16, 16, 16, 9, 16, 10, 17, 8, 8, 8, 14, 13, 26, 13, 26, 2, 16, 11, 27, 11, 26, 13, 26, 11, 26, 15, 15, 16, 16, 13, 27, 3, 27, 16, 16, 16, 28, 0 , ]
const _scanner_char_class = Int8[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 4, 5, 6, 7, 4, 4, 8, 9, 4, 10, 11, 12, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 4, 4, 16, 17, 4, 4, 18, 18, 18, 18, 19, 20, 21, 21, 21, 21, 21, 22, 21, 21, 21, 21, 21, 21, 21, 21, 23, 21, 21, 21, 21, 21, 4, 24, 4, 25, 21, 4, 18, 18, 18, 18, 19, 20, 21, 21, 21, 21, 21, 26, 21, 21, 21, 21, 21, 21, 21, 21, 23, 21, 21, 27, 21, 21, 4, 28, 4, 4, 0 , ]
const _scanner_index_offsets = Int16[0, 0, 25, 25, 50, 50, 51, 57, 59, 60, 71, 72, 80, 107, 134, 135, 136, 147, 148, 156, 164, 165, 172, 186, 200, 215, 232, 248, 262, 278, 279, 280, 295, 320, 321, 0 , ]
const _scanner_indices = Int8[0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 8, 9, 9, 0, 0, 10, 10, 10, 10, 12, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 15, 17, 17, 16, 16, 16, 17, 17, 17, 19, 1, 20, 21, 22, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 20, 32, 32, 32, 32, 33, 32, 20, 34, 32, 32, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 39, 40, 37, 37, 37, 37, 37, 37, 37, 37, 37, 41, 42, 43, 37, 37, 37, 37, 37, 37, 44, 45, 37, 37, 37, 37, 37, 46, 47, 49, 50, 37, 37, 51, 37, 52, 52, 52, 52, 53, 53, 53, 53, 54, 55, 53, 55, 53, 53, 53, 55, 10, 10, 53, 53, 53, 53, 53, 55, 53, 55, 53, 53, 53, 55, 11, 37, 37, 37, 37, 37, 37, 37, 37, 37, 14, 37, 37, 37, 56, 52, 57, 58, 58, 57, 57, 57, 57, 54, 57, 57, 59, 59, 57, 57, 59, 60, 52, 61, 58, 58, 61, 61, 61, 61, 54, 61, 61, 62, 62, 61, 61, 62, 17, 17, 63, 63, 63, 17, 17, 17, 63, 64, 64, 63, 63, 64, 52, 57, 29, 29, 57, 57, 57, 57, 54, 57, 57, 59, 59, 57, 57, 59, 65, 66, 32, 32, 67, 67, 67, 32, 32, 32, 32, 32, 32, 67, 67, 32, 32, 1, 67, 67, 67, 4, 67, 67, 67, 67, 67, 32, 32, 67, 67, 67, 32, 32, 32, 32, 32, 32, 67, 67, 32, 32, 68, 69, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 70, 0 , ]
const _scanner_index_defaults = Int8[0, 1, 1, 4, 4, 7, 0, 0, 11, 11, 14, 16, 18, 18, 37, 37, 37, 37, 37, 37, 48, 37, 53, 53, 37, 57, 61, 63, 57, 37, 37, 67, 67, 37, 37, 0 , ]
const _scanner_trans_cond_spaces = Int8[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0 , ]
const _scanner_cond_targs = Int8[12, 1, 12, 2, 3, 12, 4, 12, 12, 7, 23, 8, 9, 12, 10, 12, 12, 27, 13, 14, 12, 15, 16, 17, 18, 19, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20, 12, 12, 12, 5, 22, 12, 6, 12, 12, 12, 26, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0 , ]
const _scanner_cond_actions = Int8[79, 0, 7, 0, 0, 5, 0, 77, 51, 0, 0, 0, 0, 55, 0, 57, 75, 0, 0, 0, 53, 0, 0, 0, 0, 0, 3, 3, 90, 90, 0, 0, 0, 84, 0, 0, 73, 71, 21, 31, 23, 37, 27, 43, 33, 45, 35, 0, 69, 47, 49, 0, 87, 61, 0, 9, 29, 63, 93, 11, 0, 65, 13, 67, 15, 17, 19, 59, 39, 41, 25, 0 , ]
const _scanner_to_state_actions = Int8[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 , ]
const _scanner_from_state_actions = Int8[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 , ]
const _scanner_eof_trans = Int8[0, 1, 1, 1, 1, 8, 1, 1, 8, 8, 8, 17, 0, 37, 38, 38, 38, 38, 38, 38, 49, 38, 54, 54, 38, 58, 62, 64, 58, 38, 38, 68, 68, 38, 38, 0 , ]
const _scanner_nfa_targs = Int8[0, 0 , ]
const _scanner_nfa_offsets = Int8[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 , ]
const _scanner_nfa_push_actions = Int8[0, 0 , ]
const _scanner_nfa_pop_trans = Int8[0, 0 , ]
const scanner_start  = 12
const scanner_first_final  = 12
const scanner_error  = 0
const scanner_en_main  = 12
function m( data::AbstractString )
	p = 0
	pe = length(data)
	eof = length(data)
	cs = 0
	buffer = ""
	ts = 0;
	te = 0;
	act = 0;
	token = 0;
	
	cs = convert(Int, scanner_start )
	ts = 0
	te = 0
	act = 0
	_trans = 0;
	_have = 0;
	_cont = 1;
	_acts = 0;
	_nacts= 0
	;
	_keys = 0;
	_inds = 0;
	while _cont == 1 
		if cs == 0 
			_cont = 0
			
		end
		_have = 0
		if p == pe 
			if p == eof 
				if _scanner_eof_trans[1+(cs)]> 0 
					_trans = convert(UInt, _scanner_eof_trans[1+(cs)] )- 1
					_have = 1
					
				end
				if _have == 0 
					
				end
				
			end
			if _have == 0 
				_cont = 0
				
			end
			
		end
		if _cont == 1 
			if _have == 0 
				_acts = _scanner_from_state_actions[1+(cs)]
				_nacts = convert(UInt, _scanner_actions[1+(_acts )] )
				_acts += 1
				while _nacts > 0 
					if _scanner_actions[1+(_acts )] == 2 
						{
							ts = p
							
						}
						
					end
					_nacts -= 1
					_acts += 1
					
				end
				_keys = (cs<<1)
				_inds = _scanner_index_offsets[1+(cs)]
				if (data[1+(p )])<= 126 && (data[1+(p )])>= 10 
					_ic = convert(Int, _scanner_char_class[1+(convert(Int, (data[1+(p )]) )- 10)] );
					if _ic <= convert(Int, _scanner_trans_keys[1+(_keys+1 )] )&& _ic >= convert(Int, _scanner_trans_keys[1+(_keys )] )
						_trans = convert(UInt, _scanner_indices[1+(_inds + convert(Int, (_ic - convert(Int, _scanner_trans_keys[1+(_keys )] )) ))] )
						
					else
						_trans = convert(UInt, _scanner_index_defaults[1+(cs)] )
						
					end
					
				else
					_trans = convert(UInt, _scanner_index_defaults[1+(cs)] )
					
				end
				
			end
			if _cont == 1 
				cs = convert(Int, _scanner_cond_targs[1+(_trans)] )
				if _scanner_cond_actions[1+(_trans)]!= 0 
					_acts = _scanner_cond_actions[1+(_trans)]
					_nacts = convert(UInt, _scanner_actions[1+(_acts )] )
					_acts += 1
					while _nacts > 0 
						if _scanner_actions[1+(_acts )] == 3 
							{
								te = p+1
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 4 
							{
								act = 3
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 5 
							{
								act = 4
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 6 
							{
								act = 5
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 7 
							{
								act = 6
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 8 
							{
								te = p+1
								token = 193;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 9 
							{
								te = p+1
								token = 192;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 10 
							{
								te = p+1
								token = 194;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 11 
							{
								te = p+1
								token = 218;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 12 
							{
								te = p+1
								token = 219;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 13 
							{
								te = p+1
								token = 220;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 14 
							{
								te = p+1
								token = 197;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 15 
							{
								te = p+1
								token = 223;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 16 
							{
								te = p+1
								token = 224;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 17 
							{
								te = p+1
								token = 225;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 18 
							{
								te = p+1
								token = 226;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 19 
							{
								te = p+1
								token = 227;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 20 
							{
								te = p+1
								token = 228;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 21 
							{
								te = p+1
								token = 229;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 22 
							{
								te = p+1
								token = 230;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 23 
							{
								te = p+1
								token = 231;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 24 
							{
								te = p+1
								token = 232;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 25 
							{
								te = p+1
								token = 233;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 26 
							{
								te = p+1
								token = 234;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 27 
							{
								te = p+1
								token = 212;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 28 
							{
								te = p+1
								token = 213;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 29 
							{
								te = p+1
								token = 214;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 30 
							{
								te = p+1
								token = 215;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 31 
							{
								te = p+1
								token = 240;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 32 
							{
								te = p+1
								token = convert( Int, ( data[ts+1] ) ) 
								;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 33 
							{
								te = p+1
								token = 242;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 34 
							{
								te = p+1
								token = 242;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 35 
							{
								te = p
								p = p - 1
								token = 195;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 36 
							{
								te = p
								p = p - 1
								token = 194;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 37 
							{
								te = p
								p = p - 1
								token = 218;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 38 
							{
								te = p
								p = p - 1
								token = 219;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 39 
							{
								te = p
								p = p - 1
								token = 220;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 40 
							{
								te = p
								p = p - 1
								token = 211;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 41 
							{
								te = p
								p = p - 1
								token = convert( Int, ( data[ts+1] ) ) 
								;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 42 
							{
								te = p
								p = p - 1
								token = 241;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 43 
							{
								p = ((te))-1
								token = 218;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 44 
							{
								p = ((te))-1
								token = convert( Int, ( data[ts+1] ) ) 
								;
								print( "<" );
								print( token );
								print( "> " );
								print( data[(ts+1) : (te)] )
								print( "\n" );
								
							}
							
						elseif _scanner_actions[1+(_acts )] == 45 
							{
								if act  == 0 
									{
										cs = 0
										
									}
									
								elseif act  == 3 
									p = ((te))-1
									token = 195;
									print( "<" );
									print( token );
									print( "> " );
									print( data[(ts+1) : (te)] )
									print( "\n" );
									
								elseif act  == 4 
									p = ((te))-1
									token = 194;
									print( "<" );
									print( token );
									print( "> " );
									print( data[(ts+1) : (te)] )
									print( "\n" );
									
								elseif act  == 5 
									p = ((te))-1
									token = 218;
									print( "<" );
									print( token );
									print( "> " );
									print( data[(ts+1) : (te)] )
									print( "\n" );
									
								elseif act  == 6 
									p = ((te))-1
									token = 219;
									print( "<" );
									print( token );
									print( "> " );
									print( data[(ts+1) : (te)] )
									print( "\n" );
									
								end
								
							}
							
							
						end
						_nacts -= 1
						_acts += 1
						
					end
					
				end
				_acts = _scanner_to_state_actions[1+(cs)]
				_nacts = convert(UInt, _scanner_actions[1+(_acts )] )
				_acts += 1
				while _nacts > 0 
					if _scanner_actions[1+(_acts )] == 0 
						{
							ts = 0
							
						}
						
					elseif _scanner_actions[1+(_acts )] == 1 
						{
							act = 0
							
						}
						
					end
					_nacts -= 1
					_acts += 1
					
				end
				if cs == 0 
					_cont = 0
					
				end
				if _cont == 1 
					p += 1
					
				end
				
			end
			
		end
		
	end
	if ( cs >= scanner_first_final )
		println( "ACCEPT" );
	else
		println( "FAIL" );
	end
end

m( "\"\\\"hi\" /!\n!/\n44 .44\n44. 44\n44 . 44\n44.44\n_hithere22" );
m( "'\\''\"\\n\\d'\\\"\"\nhi\n99\n.99\n99e-4\n->*\n||\n0x98\n0x\n//\n/! * !/" );
m( "'\n'\n" );
