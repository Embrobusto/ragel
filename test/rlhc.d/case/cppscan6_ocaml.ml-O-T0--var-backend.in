host( "working/cppscan6_ocaml.rl", 1 ) @{(*
	* @@LANG: ocaml
	* @@GENERATED: true
	*)
	
	let ts = ref 0
	let te = ref 0
	let act = ref 0
	let token = ref 0
	
	
	
	
	
	
}@
array s8 _scanner_actions( 0, 45 ) = { 0, 1, 2, 1, 3, 1, 8, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 16, 1, 17, 1, 18, 1, 19, 1, 20, 1, 21, 1, 22, 1, 23, 1, 24, 1, 25, 1, 26, 1, 27, 1, 28, 1, 29, 1, 30, 1, 31, 1, 32, 1, 33, 1, 34, 1, 35, 1, 36, 1, 37, 1, 38, 1, 39, 1, 40, 1, 41, 1, 42, 1, 43, 1, 44, 1, 45, 2, 0, 1, 2, 3, 4, 2, 3, 5, 2, 3, 6, 2, 3, 7, 0 };

array s16 _scanner_key_offsets( 0, 145 ) = { 0, 0, 3, 3, 6, 6, 7, 11, 13, 14, 16, 17, 23, 54, 56, 57, 58, 60, 61, 63, 66, 67, 71, 79, 85, 88, 98, 107, 117, 126, 127, 128, 135, 144, 145, 0 };

array int _scanner_trans_keys( 0, 126 ) = { 10, 34, 92, 10, 39, 92, 46, 43, 45, 48, 57, 48, 57, 33, 33, 47, 10, 48, 57, 65, 70, 97, 102, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 58, 61, 76, 94, 95, 124, 35, 44, 49, 57, 59, 64, 65, 90, 91, 96, 97, 122, 123, 126, 33, 126, 61, 61, 38, 61, 61, 43, 61, 45, 61, 62, 42, 42, 46, 48, 57, 69, 70, 76, 101, 102, 108, 48, 57, 70, 76, 102, 108, 48, 57, 33, 47, 61, 46, 69, 76, 85, 101, 108, 117, 120, 48, 57, 46, 69, 76, 85, 101, 108, 117, 48, 57, 76, 85, 108, 117, 48, 57, 65, 70, 97, 102, 46, 69, 76, 85, 101, 108, 117, 48, 57, 58, 61, 95, 48, 57, 65, 90, 97, 122, 34, 39, 95, 48, 57, 65, 90, 97, 122, 61, 61, 124, 0 };

array s8 _scanner_single_lengths( 0, 17 ) = { 0, 3, 0, 3, 0, 1, 2, 0, 1, 2, 1, 0, 17, 0, 1, 1, 2, 1, 2, 3, 1, 2, 6, 4, 3, 8, 7, 4, 7, 1, 1, 1, 3, 1, 2, 0 };

array s8 _scanner_range_lengths( 0, 7 ) = { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 3, 7, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 3, 1, 0, 0, 3, 3, 0, 0, 0 };

array s16 _scanner_index_offsets( 0, 150 ) = { 0, 0, 4, 5, 9, 10, 12, 16, 18, 20, 23, 25, 29, 54, 56, 58, 60, 63, 65, 68, 72, 74, 78, 86, 92, 96, 106, 115, 123, 132, 134, 136, 141, 148, 150, 0 };

array s8 _scanner_trans_cond_spaces( -1, 0 ) = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0 };

array s16 _scanner_trans_offsets( 0, 185 ) = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 0 };

array s8 _scanner_trans_lengths( 0, 1 ) = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 };

array s8 _scanner_cond_keys( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _scanner_cond_targs( 0, 34 ) = { 12, 12, 2, 1, 1, 12, 12, 4, 3, 3, 12, 12, 7, 7, 23, 12, 23, 12, 9, 8, 9, 12, 8, 12, 10, 27, 27, 27, 12, 14, 1, 15, 16, 3, 17, 18, 19, 21, 24, 25, 29, 30, 32, 33, 31, 34, 12, 28, 12, 31, 12, 31, 12, 13, 12, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20, 12, 12, 12, 12, 5, 22, 12, 6, 12, 12, 6, 12, 12, 22, 12, 12, 12, 12, 12, 23, 12, 8, 10, 12, 12, 22, 6, 12, 12, 6, 12, 12, 11, 26, 12, 22, 6, 12, 12, 6, 12, 12, 26, 12, 12, 12, 12, 12, 27, 27, 27, 12, 22, 6, 12, 12, 6, 12, 12, 28, 12, 12, 12, 12, 12, 31, 31, 31, 31, 12, 1, 3, 31, 31, 31, 31, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0 };

array s8 _scanner_cond_actions( 0, 93 ) = { 79, 7, 0, 0, 0, 79, 5, 0, 0, 0, 51, 77, 0, 0, 0, 79, 0, 79, 0, 0, 0, 55, 0, 57, 0, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 90, 0, 0, 84, 0, 0, 0, 53, 90, 53, 0, 53, 0, 53, 0, 73, 0, 21, 71, 31, 71, 23, 37, 71, 27, 71, 43, 33, 71, 45, 35, 0, 71, 47, 69, 49, 0, 87, 71, 0, 9, 9, 0, 9, 9, 87, 61, 9, 9, 9, 9, 0, 61, 0, 0, 29, 71, 87, 0, 11, 11, 0, 11, 11, 0, 93, 63, 87, 0, 13, 13, 0, 13, 13, 93, 65, 15, 15, 15, 15, 0, 0, 0, 67, 87, 0, 11, 11, 0, 11, 11, 90, 63, 17, 71, 19, 71, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 59, 39, 71, 41, 25, 71, 79, 79, 79, 79, 77, 79, 79, 77, 77, 77, 75, 73, 71, 71, 71, 71, 71, 71, 69, 71, 61, 61, 71, 63, 65, 67, 63, 71, 71, 59, 59, 71, 71, 0 };

array s8 _scanner_to_state_actions( 0, 81 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _scanner_from_state_actions( 0, 1 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _scanner_eof_trans_indexed( 0, 46 ) = { 0, 12, 12, 12, 12, 15, 12, 12, 15, 15, 15, 19, 0, 21, 22, 22, 22, 22, 22, 22, 32, 22, 35, 35, 22, 38, 40, 42, 38, 22, 22, 46, 46, 22, 22, 0 };

array s16 _scanner_eof_trans_direct( 0, 186 ) = { 0, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 0, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 0 };

array s8 _scanner_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _scanner_nfa_offsets( 0, 0 ) = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

array s8 _scanner_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _scanner_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int scanner_start = 12;
value int scanner_first_final = 12;
value int scanner_error = 0;

value int scanner_en_main = 12;

host( "working/cppscan6_ocaml.rl", 233 ) @{
	
	let exec data = 
	let buffer = String.create(1024) in 
	let blen :int ref = ref 0 in
	let cs = ref 0 in
	let p = ref 0 in
	let pe = ref (String.length data) in
	let eof = pe in
}@
{
	cs = cast(int)scanner_start;
	ts = nil;
	te = nil;
	act = 0;
}
host( "working/cppscan6_ocaml.rl", 242 ) @{
}@
{
	int _klen;
	uint _trans = 0;
	uint _cond = 0;
	uint _have = 0;
	uint _cont = 1;
	index s8 _acts;
	uint _nacts;
	index int _keys;
	index s8 _ckeys;
	int _cpc;
	while ( _cont == 1 ) {
		
		if ( cs == 0 )
		_cont = 0;
		_have = 0;
		if ( p == pe ) {
			if ( p == eof )
			{
				if ( _scanner_eof_trans_direct[cs] > 0 ) {
					_trans = cast(uint)_scanner_eof_trans_direct[cs] - 1;
					_cond = cast(uint)_scanner_trans_offsets[_trans];
					_have = 1;
				}
				if ( _have == 0 ) {
				}
			}
			
			if ( _have == 0 )
			_cont = 0;
		}
		if ( _cont == 1 ) {
			if ( _have == 0 ) {
				_acts = offset( _scanner_actions, _scanner_from_state_actions[cs] );
				_nacts = cast(uint)deref( _scanner_actions, _acts );
				_acts += 1;
				while ( _nacts > 0 ) {
					switch ( deref( _scanner_actions, _acts ) ) {
						case 2 {
							host( "NONE", 1 ) ${${ts = p;}$}$
						}
					}
					_nacts -= 1;
					_acts += 1;
				}
				
				_keys = offset( _scanner_trans_keys, _scanner_key_offsets[cs] );
				_trans = cast(uint)_scanner_index_offsets[cs];
				_have = 0;
				
				_klen = cast(int)_scanner_single_lengths[cs];
				if ( _klen > 0 ) {
					index int _lower;
					index int _mid;
					index int _upper;
					_lower = _keys;
					_upper = _keys + _klen - 1;
					while ( _upper >= _lower && _have == 0 ) {
						_mid = _lower + ((_upper-_lower) >> 1);
						if ( ( deref( data, p )) < deref( _scanner_trans_keys, _mid ) )
						_upper = _mid - 1;
						else if ( ( deref( data, p )) > deref( _scanner_trans_keys, _mid ) )
						_lower = _mid + 1;
						else {
							_trans += cast(uint)(_mid - _keys);
							_have = 1;
						}
					}
					if ( _have == 0 ) {
						_keys += _klen;
						_trans += cast(uint)_klen;
					}
				}
				
				if ( _have == 0 ) {
					_klen = cast(int)_scanner_range_lengths[cs];
					if ( _klen > 0 ) {
						index int _lower;
						index int _mid;
						index int _upper;
						_lower = _keys;
						_upper = _keys + (_klen<<1) - 2;
						while ( _have == 0 && _lower <= _upper ) {
							_mid = _lower + (((_upper-_lower) >> 1) & ~1);
							if ( ( deref( data, p )) < deref( _scanner_trans_keys, _mid ) )
							_upper = _mid - 2;
							else if ( ( deref( data, p )) > deref( _scanner_trans_keys, _mid + 1 ) )
							_lower = _mid + 2;
							else {
								_trans += cast(uint)((_mid - _keys)>>1);
								_have = 1;
							}
						}
						if ( _have == 0 )
						_trans += cast(uint)_klen;
					}
				}
				
				_ckeys = offset( _scanner_cond_keys, _scanner_trans_offsets[_trans] );
				_klen = cast(int)_scanner_trans_lengths[_trans];
				_cond = cast(uint)_scanner_trans_offsets[_trans];
				_have = 0;
				
				_cpc = 0;
				{
					index s8 _lower;
					index s8 _mid;
					index s8 _upper;
					_lower = _ckeys;
					_upper = _ckeys + _klen - 1;
					while ( _have == 0 && _lower <= _upper ) {
						_mid = _lower + ((_upper-_lower) >> 1);
						if ( _cpc < cast(int)deref( _scanner_cond_keys, _mid ) )
						_upper = _mid - 1;
						else if ( _cpc > cast(int)deref( _scanner_cond_keys, _mid ) )
						_lower = _mid + 1;
						else {
							_cond += cast(uint)(_mid - _ckeys);
							_have = 1;
						}
					}
					if ( _have == 0 ) {
						cs = 0;
						_cont = 0;
					}
				}
			}
			if ( _cont == 1 ) {
				cs = cast(int)_scanner_cond_targs[_cond];
				
				if ( _scanner_cond_actions[_cond] != 0 ) {
					_acts = offset( _scanner_actions, _scanner_cond_actions[_cond] );
					_nacts = cast(uint)deref( _scanner_actions, _acts );
					_acts += 1;
					while ( _nacts > 0 )
					{
						switch ( deref( _scanner_actions, _acts ) )
						{
							case 3 {
								host( "NONE", 1 ) ${${te = p+1;}$}$
							}
							case 4 {
								host( "working/cppscan6_ocaml.rl", 42 ) ${${act = 3;}$}$
							}
							case 5 {
								host( "working/cppscan6_ocaml.rl", 56 ) ${${act = 4;}$}$
							}
							case 6 {
								host( "working/cppscan6_ocaml.rl", 65 ) ${${act = 5;}$}$
							}
							case 7 {
								host( "working/cppscan6_ocaml.rl", 74 ) ${${act = 6;}$}$
							}
							case 8 {
								host( "working/cppscan6_ocaml.rl", 26 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 26 ) ${token := 193;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 9 {
								host( "working/cppscan6_ocaml.rl", 33 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 33 ) ${token := 192;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 10 {
								host( "working/cppscan6_ocaml.rl", 56 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 56 ) ${token := 194;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 11 {
								host( "working/cppscan6_ocaml.rl", 65 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 65 ) ${token := 218;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 12 {
								host( "working/cppscan6_ocaml.rl", 74 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 74 ) ${token := 219;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 13 {
								host( "working/cppscan6_ocaml.rl", 83 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 83 ) ${token := 220;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 14 {
								host( "working/cppscan6_ocaml.rl", 91 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 91 ) ${token := 197;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 15 {
								host( "working/cppscan6_ocaml.rl", 97 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 97 ) ${token := 223;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 16 {
								host( "working/cppscan6_ocaml.rl", 103 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 103 ) ${token := 224;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 17 {
								host( "working/cppscan6_ocaml.rl", 109 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 109 ) ${token := 225;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 18 {
								host( "working/cppscan6_ocaml.rl", 115 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 115 ) ${token := 226;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 19 {
								host( "working/cppscan6_ocaml.rl", 121 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 121 ) ${token := 227;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 20 {
								host( "working/cppscan6_ocaml.rl", 127 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 127 ) ${token := 228;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 21 {
								host( "working/cppscan6_ocaml.rl", 133 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 133 ) ${token := 229;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 22 {
								host( "working/cppscan6_ocaml.rl", 139 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 139 ) ${token := 230;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 23 {
								host( "working/cppscan6_ocaml.rl", 145 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 145 ) ${token := 231;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 24 {
								host( "working/cppscan6_ocaml.rl", 151 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 151 ) ${token := 232;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 25 {
								host( "working/cppscan6_ocaml.rl", 157 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 157 ) ${token := 233;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 26 {
								host( "working/cppscan6_ocaml.rl", 163 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 163 ) ${token := 234;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 27 {
								host( "working/cppscan6_ocaml.rl", 169 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 169 ) ${token := 212;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 28 {
								host( "working/cppscan6_ocaml.rl", 175 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 175 ) ${token := 213;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 29 {
								host( "working/cppscan6_ocaml.rl", 187 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 187 ) ${token := 214;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 30 {
								host( "working/cppscan6_ocaml.rl", 193 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 193 ) ${token := 215;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 31 {
								host( "working/cppscan6_ocaml.rl", 201 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 201 ) ${token := 240;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 32 {
								host( "working/cppscan6_ocaml.rl", 209 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 209 ) ${token := ( ( Char.code data.[ts.contents] ) )
											;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 33 {
								host( "working/cppscan6_ocaml.rl", 14 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 14 ) ${token := 242;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 34 {
								host( "working/cppscan6_ocaml.rl", 14 ) ${${te = p+1;host( "working/cppscan6_ocaml.rl", 14 ) ${token := 242;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 35 {
								host( "working/cppscan6_ocaml.rl", 42 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 42 ) ${token := 195;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 36 {
								host( "working/cppscan6_ocaml.rl", 56 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 56 ) ${token := 194;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 37 {
								host( "working/cppscan6_ocaml.rl", 65 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 65 ) ${token := 218;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 38 {
								host( "working/cppscan6_ocaml.rl", 74 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 74 ) ${token := 219;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 39 {
								host( "working/cppscan6_ocaml.rl", 83 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 83 ) ${token := 220;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 40 {
								host( "working/cppscan6_ocaml.rl", 181 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 181 ) ${token := 211;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 41 {
								host( "working/cppscan6_ocaml.rl", 209 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 209 ) ${token := ( ( Char.code data.[ts.contents] ) )
											;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 42 {
								host( "working/cppscan6_ocaml.rl", 220 ) ${${te = p;p = p - 1;host( "working/cppscan6_ocaml.rl", 220 ) ${token := 241;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 43 {
								host( "working/cppscan6_ocaml.rl", 65 ) ${${p = ((te))-1;
										host( "working/cppscan6_ocaml.rl", 65 ) ${token := 218;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 44 {
								host( "working/cppscan6_ocaml.rl", 209 ) ${${p = ((te))-1;
										host( "working/cppscan6_ocaml.rl", 209 ) ${token := ( ( Char.code data.[ts.contents] ) )
											;
											print_string( "<" );
											print_int( token.contents );
											print_string( "> " );
											for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
										}$}$}$
							}
							case 45 {
								host( "NONE", 1 ) ${${switch( act ) {
											case 0 {
												host( "NONE", 1 ) ${${cs = 0;}$}$ }
											case 3 {
												p = ((te))-1;
												host( "working/cppscan6_ocaml.rl", 42 ) ${token := 195;
													print_string( "<" );
													print_int( token.contents );
													print_string( "> " );
													for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
												}$ }
											case 4 {
												p = ((te))-1;
												host( "working/cppscan6_ocaml.rl", 56 ) ${token := 194;
													print_string( "<" );
													print_int( token.contents );
													print_string( "> " );
													for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
												}$ }
											case 5 {
												p = ((te))-1;
												host( "working/cppscan6_ocaml.rl", 65 ) ${token := 218;
													print_string( "<" );
													print_int( token.contents );
													print_string( "> " );
													for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
												}$ }
											case 6 {
												p = ((te))-1;
												host( "working/cppscan6_ocaml.rl", 74 ) ${token := 219;
													print_string( "<" );
													print_int( token.contents );
													print_string( "> " );
													for i = ts.contents to te.contents - 1 do print_char data.[i] done; print_string( "\n" );
												}$ }
										}}$
								}$
							}
						}
						_nacts -= 1;
						_acts += 1;
					}
				}
				
				_acts = offset( _scanner_actions, _scanner_to_state_actions[cs] );
				_nacts = cast(uint)deref( _scanner_actions, _acts );
				_acts += 1;
				while ( _nacts > 0 ) {
					switch ( deref( _scanner_actions, _acts ) ) {
						case 0 {
							host( "NONE", 1 ) ${${ts = nil;}$}$
						}
						case 1 {
							host( "NONE", 1 ) ${${act = 0;}$}$
						}
					}
					_nacts -= 1;
					_acts += 1;
				}
				
				if ( cs == 0 )
				_cont = 0;
				if ( _cont == 1 )
				p += 1;
				
			}
		}
	}
}
host( "working/cppscan6_ocaml.rl", 243 ) @{
	if !cs >= scanner_first_final then
	print_string "ACCEPT\n"
	else
	print_string "FAIL\n"
	;;
	
	let () =
	exec "\"\\\"hi\" /!\n!/\n44 .44\n44. 44\n44 . 44\n44.44\n_hithere22";
	exec "'\\''\"\\n\\d'\\\"\"\nhi\n99\n.99\n99e-4\n->*\n||\n0x98\n0x\n//\n/! * !/";
	exec "'\n'\n";
	()
	;;
	
}@