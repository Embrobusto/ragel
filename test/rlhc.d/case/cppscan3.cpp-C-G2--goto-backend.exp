#include <iostream>
#include <string.h>
using namespace std;

#define TK_Dlit 192
#define TK_Slit 193
#define TK_Float 194
#define TK_Id 195
#define TK_NameSep 197
#define TK_Arrow 211
#define TK_PlusPlus 212
#define TK_MinusMinus 213
#define TK_ArrowStar 214
#define TK_DotStar 215
#define TK_ShiftLeft 216
#define TK_ShiftRight 217
#define TK_IntegerDecimal 218
#define TK_IntegerOctal 219
#define TK_IntegerHex 220
#define TK_EqualsEquals 223
#define TK_NotEquals 224
#define TK_AndAnd 225
#define TK_OrOr 226
#define TK_MultAssign 227
#define TK_DivAssign 228
#define TK_PercentAssign 229
#define TK_PlusAssign 230
#define TK_MinusAssign 231
#define TK_AmpAssign 232
#define TK_CaretAssign 233
#define TK_BarAssign 234
#define TK_DotDotDot 240
#define TK_Whitespace 241
#define TK_Comment 242

#define BUFSIZE 4096

char buf[BUFSIZE];

struct Scanner
{
	int cs, act;
	const char *ts, *te;
	
	void token( int tok );
	void run();
	
	void init( );
	void execute( const char *data, int len );
	int finish( );
};



static const int  Scanner_start  = 12;
static const int  Scanner_first_final  = 12;
static const int  Scanner_error  = 0;
static const int  Scanner_en_main  = 12;
static const char  _Scanner_nfa_targs [] = { 0, 0 ,  };
static const char  _Scanner_nfa_offsets [] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  };
static const char  _Scanner_nfa_push_actions [] = { 0, 0 ,  };
static const char  _Scanner_nfa_pop_trans [] = { 0, 0 ,  };
void Scanner::init( )
{

	{
		cs = ( int ) Scanner_start;
		ts = 0;
		te = 0;
		act = 0;
	}
}

/* Returns the count of bytes still in the buffer 
* (shifted to the biginning) */
void Scanner::execute( const char *data, int len )
{
	const char *p = data;
	const char *pe = data + len;
	const char *eof = pe;
	
	
	{
		if ( p == pe  )
		goto _test_eof;
		
		switch ( cs  ) {
			case 12:
			goto st_case_12;
			case 13:
			goto st_case_13;
			case 14:
			goto st_case_14;
			case 1:
			goto st_case_1;
			case 2:
			goto st_case_2;
			case 15:
			goto st_case_15;
			case 16:
			goto st_case_16;
			case 3:
			goto st_case_3;
			case 4:
			goto st_case_4;
			case 17:
			goto st_case_17;
			case 18:
			goto st_case_18;
			case 19:
			goto st_case_19;
			case 20:
			goto st_case_20;
			case 21:
			goto st_case_21;
			case 5:
			goto st_case_5;
			case 22:
			goto st_case_22;
			case 6:
			goto st_case_6;
			case 7:
			goto st_case_7;
			case 23:
			goto st_case_23;
			case 24:
			goto st_case_24;
			case 8:
			goto st_case_8;
			case 9:
			goto st_case_9;
			case 10:
			goto st_case_10;
			case 25:
			goto st_case_25;
			case 26:
			goto st_case_26;
			case 27:
			goto st_case_27;
			case 28:
			goto st_case_28;
			case 29:
			goto st_case_29;
			case 11:
			goto st_case_11;
			case 30:
			goto st_case_30;
			case 31:
			goto st_case_31;
			case 32:
			goto st_case_32;
			case 33:
			goto st_case_33;
			case 34:
			goto st_case_34;
			case 35:
			goto st_case_35;
			case 36:
			goto st_case_36;
			case 37:
			goto st_case_37;
			case 38:
			goto st_case_38;
			case 0:
			goto st_case_0;
			
		}
		goto st_out;
		ctr17:
		{
			{
				switch ( act  ) {
					case 0 :
					{
						{
							goto st0;
						}
						
					}
					
					break;
					case 3 :
					p = ((te))-1;
					{
						token( TK_Id );
					}
					
					break;
					case 4 :
					p = ((te))-1;
					{
						token( TK_Float );
					}
					
					break;
					case 5 :
					p = ((te))-1;
					{
						token( TK_IntegerDecimal );
					}
					
					break;
					case 6 :
					p = ((te))-1;
					{
						token( TK_IntegerOctal );
					}
					
					break;
					
				}
				
			}
			
			
		}
		
		
		goto st12;
		ctr3:
		{
			{
				te = p+1;
				{
					token( TK_Dlit );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr8:
		{
			{
				te = p+1;
				{
					token( TK_Slit );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr23:
		{
			{
				p = ((te))-1;
				{
					token( ts[0] );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr13:
		{
			{
				te = p+1;
				{
					token( TK_DotDotDot );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr22:
		{
			{
				te = p+1;
				{
					token( TK_Comment );
					
				}
				
			}
			
		}
		
		
		goto st12;
		ctr25:
		{
			{
				te = p+1;
				{
					token( TK_Comment );
					
				}
				
			}
			
		}
		
		
		goto st12;
		ctr27:
		{
			{
				p = ((te))-1;
				{
					token( TK_IntegerDecimal );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr31:
		{
			{
				te = p+1;
				{
					token( ts[0] );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr48:
		{
			{
				te = p;
				p = p - 1;
				{
					token( TK_Whitespace );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr109:
		{
			{
				te = p;
				p = p - 1;
				{
					token( ts[0] );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr51:
		{
			{
				te = p+1;
				{
					token( TK_NotEquals );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr53:
		{
			{
				te = p+1;
				{
					token( TK_PercentAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr55:
		{
			{
				te = p+1;
				{
					token( TK_AndAnd );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr56:
		{
			{
				te = p+1;
				{
					token( TK_AmpAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr58:
		{
			{
				te = p+1;
				{
					token( TK_MultAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr60:
		{
			{
				te = p+1;
				{
					token( TK_PlusPlus );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr61:
		{
			{
				te = p+1;
				{
					token( TK_PlusAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr63:
		{
			{
				te = p+1;
				{
					token( TK_MinusMinus );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr64:
		{
			{
				te = p+1;
				{
					token( TK_MinusAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr67:
		{
			{
				te = p;
				p = p - 1;
				{
					token( TK_Arrow );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr68:
		{
			{
				te = p+1;
				{
					token( TK_ArrowStar );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr70:
		{
			{
				te = p+1;
				{
					token( TK_DotStar );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr77:
		{
			{
				te = p;
				p = p - 1;
				{
					token( TK_Float );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr76:
		{
			{
				te = p+1;
				{
					token( TK_Float );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr79:
		{
			{
				te = p+1;
				{
					token( TK_DivAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr99:
		{
			{
				te = p;
				p = p - 1;
				{
					token( TK_IntegerDecimal );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr88:
		{
			{
				te = p;
				p = p - 1;
				{
					token( TK_IntegerOctal );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr89:
		{
			{
				te = p+1;
				{
					token( TK_IntegerOctal );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr93:
		{
			{
				te = p+1;
				{
					token( TK_IntegerDecimal );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr97:
		{
			{
				te = p;
				p = p - 1;
				{
					token( TK_IntegerHex );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr98:
		{
			{
				te = p+1;
				{
					token( TK_IntegerHex );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr101:
		{
			{
				te = p+1;
				{
					token( TK_NameSep );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr103:
		{
			{
				te = p+1;
				{
					token( TK_EqualsEquals );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr106:
		{
			{
				te = p;
				p = p - 1;
				{
					token( TK_Id );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr108:
		{
			{
				te = p+1;
				{
					token( TK_CaretAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr110:
		{
			{
				te = p+1;
				{
					token( TK_BarAssign );
				}
				
			}
			
		}
		
		
		goto st12;
		ctr111:
		{
			{
				te = p+1;
				{
					token( TK_OrOr );
				}
				
			}
			
		}
		
		
		goto st12;
		st12:
		{
			{
				ts = 0;
				
			}
			
		}
		{
			{
				act = 0;
				
			}
			
		}
		
		p+= 1;
		if ( p == pe  )
		goto _test_eof12;
		
		st_case_12:
		{
			{
				ts = p;
				
			}
			
		}
		switch ( ((*( p  ))
		) ) {
			case 33:
			{
				goto st14;
			}
			case 34:
			{
				goto st1;
			}
			case 37:
			{
				goto st15;
			}
			case 38:
			{
				goto st16;
			}
			case 39:
			{
				goto st3;
			}
			case 42:
			{
				goto st17;
			}
			case 43:
			{
				goto st18;
			}
			case 45:
			{
				goto st19;
			}
			case 46:
			{
				goto ctr37;
			}
			case 47:
			{
				goto ctr38;
			}
			case 48:
			{
				goto ctr39;
			}
			case 58:
			{
				goto st33;
			}
			case 61:
			{
				goto st34;
			}
			case 76:
			{
				goto ctr44;
			}
			case 94:
			{
				goto st37;
			}
			case 95:
			{
				goto st35;
			}
			case 124:
			{
				goto st38;
			}
			
		}
		if ( ((*( p  ))
		)< 65  )
		{
			if ( ((*( p  ))
			)< 49  )
			{
				if ( 35 <= ((*( p  ))
				)&& ((*( p  ))
				)<= 44  )
				{
					goto ctr31;
				}
				
			} 
			else if ( ((*( p  ))
			)> 57  )
			{
				if ( 59 <= ((*( p  ))
				) )
				{
					goto ctr31;
				}
				
			} 
			else
			{
				goto ctr40;
			}
			
		} 
		else if ( ((*( p  ))
		)> 90  )
		{
			if ( ((*( p  ))
			)< 97  )
			{
				{
					goto ctr31;
				}
			} 
			else if ( ((*( p  ))
			)> 122  )
			{
				if ( ((*( p  ))
				)<= 126  )
				{
					goto ctr31;
				}
				
			} 
			else
			{
				goto st35;
			}
			
		} 
		else
		{
			goto st35;
		}
		
		{
			goto st13;
		}
		st13:
		p+= 1;
		if ( p == pe  )
		goto _test_eof13;
		
		st_case_13:
		if ( 33 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 126  )
		{
			goto ctr48;
		}
		
		{
			goto st13;
		}
		st14:
		p+= 1;
		if ( p == pe  )
		goto _test_eof14;
		
		st_case_14:
		if ( ((*( p  ))
		)== 61  )
		{
			goto ctr51;
		}
		
		{
			goto ctr109;
		}
		st1:
		p+= 1;
		if ( p == pe  )
		goto _test_eof1;
		
		st_case_1:
		switch ( ((*( p  ))
		) ) {
			case 10:
			{
				goto ctr17;
			}
			case 34:
			{
				goto ctr3;
			}
			case 92:
			{
				goto st2;
			}
			
		}
		{
			goto st1;
		}
		st2:
		p+= 1;
		if ( p == pe  )
		goto _test_eof2;
		
		st_case_2:
		{
			goto st1;
		}
		st15:
		p+= 1;
		if ( p == pe  )
		goto _test_eof15;
		
		st_case_15:
		if ( ((*( p  ))
		)== 61  )
		{
			goto ctr53;
		}
		
		{
			goto ctr109;
		}
		st16:
		p+= 1;
		if ( p == pe  )
		goto _test_eof16;
		
		st_case_16:
		switch ( ((*( p  ))
		) ) {
			case 38:
			{
				goto ctr55;
			}
			case 61:
			{
				goto ctr56;
			}
			
		}
		{
			goto ctr109;
		}
		st3:
		p+= 1;
		if ( p == pe  )
		goto _test_eof3;
		
		st_case_3:
		switch ( ((*( p  ))
		) ) {
			case 10:
			{
				goto ctr17;
			}
			case 39:
			{
				goto ctr8;
			}
			case 92:
			{
				goto st4;
			}
			
		}
		{
			goto st3;
		}
		st4:
		p+= 1;
		if ( p == pe  )
		goto _test_eof4;
		
		st_case_4:
		{
			goto st3;
		}
		st17:
		p+= 1;
		if ( p == pe  )
		goto _test_eof17;
		
		st_case_17:
		if ( ((*( p  ))
		)== 61  )
		{
			goto ctr58;
		}
		
		{
			goto ctr109;
		}
		st18:
		p+= 1;
		if ( p == pe  )
		goto _test_eof18;
		
		st_case_18:
		switch ( ((*( p  ))
		) ) {
			case 43:
			{
				goto ctr60;
			}
			case 61:
			{
				goto ctr61;
			}
			
		}
		{
			goto ctr109;
		}
		st19:
		p+= 1;
		if ( p == pe  )
		goto _test_eof19;
		
		st_case_19:
		switch ( ((*( p  ))
		) ) {
			case 45:
			{
				goto ctr63;
			}
			case 61:
			{
				goto ctr64;
			}
			case 62:
			{
				goto st20;
			}
			
		}
		{
			goto ctr109;
		}
		st20:
		p+= 1;
		if ( p == pe  )
		goto _test_eof20;
		
		st_case_20:
		if ( ((*( p  ))
		)== 42  )
		{
			goto ctr68;
		}
		
		{
			goto ctr67;
		}
		ctr37:
		{
			{
				te = p+1;
				
			}
			
		}
		
		
		goto st21;
		st21:
		p+= 1;
		if ( p == pe  )
		goto _test_eof21;
		
		st_case_21:
		switch ( ((*( p  ))
		) ) {
			case 42:
			{
				goto ctr70;
			}
			case 46:
			{
				goto st5;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr72;
		}
		
		{
			goto ctr109;
		}
		st5:
		p+= 1;
		if ( p == pe  )
		goto _test_eof5;
		
		st_case_5:
		if ( ((*( p  ))
		)== 46  )
		{
			goto ctr13;
		}
		
		{
			goto ctr23;
		}
		ctr72:
		{
			{
				te = p+1;
				
			}
			
		}
		{
			{
				act = 4;
				
			}
			
		}
		
		
		goto st22;
		st22:
		p+= 1;
		if ( p == pe  )
		goto _test_eof22;
		
		st_case_22:
		switch ( ((*( p  ))
		) ) {
			case 69:
			{
				goto st6;
			}
			case 70:
			{
				goto ctr76;
			}
			case 76:
			{
				goto ctr76;
			}
			case 101:
			{
				goto st6;
			}
			case 102:
			{
				goto ctr76;
			}
			case 108:
			{
				goto ctr76;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr72;
		}
		
		{
			goto ctr77;
		}
		st6:
		p+= 1;
		if ( p == pe  )
		goto _test_eof6;
		
		st_case_6:
		switch ( ((*( p  ))
		) ) {
			case 43:
			{
				goto st7;
			}
			case 45:
			{
				goto st7;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto st23;
		}
		
		{
			goto ctr17;
		}
		st7:
		p+= 1;
		if ( p == pe  )
		goto _test_eof7;
		
		st_case_7:
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto st23;
		}
		
		{
			goto ctr17;
		}
		st23:
		p+= 1;
		if ( p == pe  )
		goto _test_eof23;
		
		st_case_23:
		switch ( ((*( p  ))
		) ) {
			case 70:
			{
				goto ctr76;
			}
			case 76:
			{
				goto ctr76;
			}
			case 102:
			{
				goto ctr76;
			}
			case 108:
			{
				goto ctr76;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto st23;
		}
		
		{
			goto ctr77;
		}
		ctr38:
		{
			{
				te = p+1;
				
			}
			
		}
		
		
		goto st24;
		st24:
		p+= 1;
		if ( p == pe  )
		goto _test_eof24;
		
		st_case_24:
		switch ( ((*( p  ))
		) ) {
			case 42:
			{
				goto st8;
			}
			case 47:
			{
				goto st10;
			}
			case 61:
			{
				goto ctr79;
			}
			
		}
		{
			goto ctr109;
		}
		st8:
		p+= 1;
		if ( p == pe  )
		goto _test_eof8;
		
		st_case_8:
		if ( ((*( p  ))
		)== 42  )
		{
			goto st9;
		}
		
		{
			goto st8;
		}
		st9:
		p+= 1;
		if ( p == pe  )
		goto _test_eof9;
		
		st_case_9:
		switch ( ((*( p  ))
		) ) {
			case 42:
			{
				goto st9;
			}
			case 47:
			{
				goto ctr22;
			}
			
		}
		{
			goto st8;
		}
		st10:
		p+= 1;
		if ( p == pe  )
		goto _test_eof10;
		
		st_case_10:
		if ( ((*( p  ))
		)== 10  )
		{
			goto ctr25;
		}
		
		{
			goto st10;
		}
		ctr39:
		{
			{
				te = p+1;
				
			}
			
		}
		{
			{
				act = 5;
				
			}
			
		}
		
		
		goto st25;
		st25:
		p+= 1;
		if ( p == pe  )
		goto _test_eof25;
		
		st_case_25:
		switch ( ((*( p  ))
		) ) {
			case 46:
			{
				goto ctr72;
			}
			case 69:
			{
				goto st6;
			}
			case 76:
			{
				goto st28;
			}
			case 85:
			{
				goto st28;
			}
			case 101:
			{
				goto st6;
			}
			case 108:
			{
				goto st28;
			}
			case 117:
			{
				goto st28;
			}
			case 120:
			{
				goto st11;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr82;
		}
		
		{
			goto ctr99;
		}
		ctr82:
		{
			{
				te = p+1;
				
			}
			
		}
		{
			{
				act = 6;
				
			}
			
		}
		
		
		goto st26;
		st26:
		p+= 1;
		if ( p == pe  )
		goto _test_eof26;
		
		st_case_26:
		switch ( ((*( p  ))
		) ) {
			case 46:
			{
				goto ctr72;
			}
			case 69:
			{
				goto st6;
			}
			case 76:
			{
				goto st27;
			}
			case 85:
			{
				goto st27;
			}
			case 101:
			{
				goto st6;
			}
			case 108:
			{
				goto st27;
			}
			case 117:
			{
				goto st27;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr82;
		}
		
		{
			goto ctr88;
		}
		st27:
		p+= 1;
		if ( p == pe  )
		goto _test_eof27;
		
		st_case_27:
		switch ( ((*( p  ))
		) ) {
			case 76:
			{
				goto ctr89;
			}
			case 85:
			{
				goto ctr89;
			}
			case 108:
			{
				goto ctr89;
			}
			case 117:
			{
				goto ctr89;
			}
			
		}
		{
			goto ctr88;
		}
		st28:
		p+= 1;
		if ( p == pe  )
		goto _test_eof28;
		
		st_case_28:
		switch ( ((*( p  ))
		) ) {
			case 76:
			{
				goto st29;
			}
			case 85:
			{
				goto st29;
			}
			case 108:
			{
				goto st29;
			}
			case 117:
			{
				goto st29;
			}
			
		}
		{
			goto ctr99;
		}
		st29:
		p+= 1;
		if ( p == pe  )
		goto _test_eof29;
		
		st_case_29:
		switch ( ((*( p  ))
		) ) {
			case 76:
			{
				goto ctr93;
			}
			case 85:
			{
				goto ctr93;
			}
			case 108:
			{
				goto ctr93;
			}
			case 117:
			{
				goto ctr93;
			}
			
		}
		{
			goto ctr99;
		}
		st11:
		p+= 1;
		if ( p == pe  )
		goto _test_eof11;
		
		st_case_11:
		if ( ((*( p  ))
		)< 65  )
		{
			if ( 48 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 57  )
			{
				goto st30;
			}
			
		} 
		else if ( ((*( p  ))
		)> 70  )
		{
			if ( 97 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 102  )
			{
				goto st30;
			}
			
		} 
		else
		{
			goto st30;
		}
		
		{
			goto ctr27;
		}
		st30:
		p+= 1;
		if ( p == pe  )
		goto _test_eof30;
		
		st_case_30:
		switch ( ((*( p  ))
		) ) {
			case 76:
			{
				goto st31;
			}
			case 85:
			{
				goto st31;
			}
			case 108:
			{
				goto st31;
			}
			case 117:
			{
				goto st31;
			}
			
		}
		if ( ((*( p  ))
		)< 65  )
		{
			if ( 48 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 57  )
			{
				goto st30;
			}
			
		} 
		else if ( ((*( p  ))
		)> 70  )
		{
			if ( 97 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 102  )
			{
				goto st30;
			}
			
		} 
		else
		{
			goto st30;
		}
		
		{
			goto ctr97;
		}
		st31:
		p+= 1;
		if ( p == pe  )
		goto _test_eof31;
		
		st_case_31:
		switch ( ((*( p  ))
		) ) {
			case 76:
			{
				goto ctr98;
			}
			case 85:
			{
				goto ctr98;
			}
			case 108:
			{
				goto ctr98;
			}
			case 117:
			{
				goto ctr98;
			}
			
		}
		{
			goto ctr97;
		}
		ctr40:
		{
			{
				te = p+1;
				
			}
			
		}
		{
			{
				act = 5;
				
			}
			
		}
		
		
		goto st32;
		st32:
		p+= 1;
		if ( p == pe  )
		goto _test_eof32;
		
		st_case_32:
		switch ( ((*( p  ))
		) ) {
			case 46:
			{
				goto ctr72;
			}
			case 69:
			{
				goto st6;
			}
			case 76:
			{
				goto st28;
			}
			case 85:
			{
				goto st28;
			}
			case 101:
			{
				goto st6;
			}
			case 108:
			{
				goto st28;
			}
			case 117:
			{
				goto st28;
			}
			
		}
		if ( 48 <= ((*( p  ))
		)&& ((*( p  ))
		)<= 57  )
		{
			goto ctr40;
		}
		
		{
			goto ctr99;
		}
		st33:
		p+= 1;
		if ( p == pe  )
		goto _test_eof33;
		
		st_case_33:
		if ( ((*( p  ))
		)== 58  )
		{
			goto ctr101;
		}
		
		{
			goto ctr109;
		}
		st34:
		p+= 1;
		if ( p == pe  )
		goto _test_eof34;
		
		st_case_34:
		if ( ((*( p  ))
		)== 61  )
		{
			goto ctr103;
		}
		
		{
			goto ctr109;
		}
		st35:
		p+= 1;
		if ( p == pe  )
		goto _test_eof35;
		
		st_case_35:
		if ( ((*( p  ))
		)== 95  )
		{
			goto st35;
		}
		
		if ( ((*( p  ))
		)< 65  )
		{
			if ( 48 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 57  )
			{
				goto st35;
			}
			
		} 
		else if ( ((*( p  ))
		)> 90  )
		{
			if ( 97 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 122  )
			{
				goto st35;
			}
			
		} 
		else
		{
			goto st35;
		}
		
		{
			goto ctr106;
		}
		ctr44:
		{
			{
				te = p+1;
				
			}
			
		}
		{
			{
				act = 3;
				
			}
			
		}
		
		
		goto st36;
		st36:
		p+= 1;
		if ( p == pe  )
		goto _test_eof36;
		
		st_case_36:
		switch ( ((*( p  ))
		) ) {
			case 34:
			{
				goto st1;
			}
			case 39:
			{
				goto st3;
			}
			case 95:
			{
				goto st35;
			}
			
		}
		if ( ((*( p  ))
		)< 65  )
		{
			if ( 48 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 57  )
			{
				goto st35;
			}
			
		} 
		else if ( ((*( p  ))
		)> 90  )
		{
			if ( 97 <= ((*( p  ))
			)&& ((*( p  ))
			)<= 122  )
			{
				goto st35;
			}
			
		} 
		else
		{
			goto st35;
		}
		
		{
			goto ctr106;
		}
		st37:
		p+= 1;
		if ( p == pe  )
		goto _test_eof37;
		
		st_case_37:
		if ( ((*( p  ))
		)== 61  )
		{
			goto ctr108;
		}
		
		{
			goto ctr109;
		}
		st38:
		p+= 1;
		if ( p == pe  )
		goto _test_eof38;
		
		st_case_38:
		switch ( ((*( p  ))
		) ) {
			case 61:
			{
				goto ctr110;
			}
			case 124:
			{
				goto ctr111;
			}
			
		}
		{
			goto ctr109;
		}
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		st_out:
		_test_eof12: cs = 12;
		goto _test_eof; 
		_test_eof13: cs = 13;
		goto _test_eof; 
		_test_eof14: cs = 14;
		goto _test_eof; 
		_test_eof1: cs = 1;
		goto _test_eof; 
		_test_eof2: cs = 2;
		goto _test_eof; 
		_test_eof15: cs = 15;
		goto _test_eof; 
		_test_eof16: cs = 16;
		goto _test_eof; 
		_test_eof3: cs = 3;
		goto _test_eof; 
		_test_eof4: cs = 4;
		goto _test_eof; 
		_test_eof17: cs = 17;
		goto _test_eof; 
		_test_eof18: cs = 18;
		goto _test_eof; 
		_test_eof19: cs = 19;
		goto _test_eof; 
		_test_eof20: cs = 20;
		goto _test_eof; 
		_test_eof21: cs = 21;
		goto _test_eof; 
		_test_eof5: cs = 5;
		goto _test_eof; 
		_test_eof22: cs = 22;
		goto _test_eof; 
		_test_eof6: cs = 6;
		goto _test_eof; 
		_test_eof7: cs = 7;
		goto _test_eof; 
		_test_eof23: cs = 23;
		goto _test_eof; 
		_test_eof24: cs = 24;
		goto _test_eof; 
		_test_eof8: cs = 8;
		goto _test_eof; 
		_test_eof9: cs = 9;
		goto _test_eof; 
		_test_eof10: cs = 10;
		goto _test_eof; 
		_test_eof25: cs = 25;
		goto _test_eof; 
		_test_eof26: cs = 26;
		goto _test_eof; 
		_test_eof27: cs = 27;
		goto _test_eof; 
		_test_eof28: cs = 28;
		goto _test_eof; 
		_test_eof29: cs = 29;
		goto _test_eof; 
		_test_eof11: cs = 11;
		goto _test_eof; 
		_test_eof30: cs = 30;
		goto _test_eof; 
		_test_eof31: cs = 31;
		goto _test_eof; 
		_test_eof32: cs = 32;
		goto _test_eof; 
		_test_eof33: cs = 33;
		goto _test_eof; 
		_test_eof34: cs = 34;
		goto _test_eof; 
		_test_eof35: cs = 35;
		goto _test_eof; 
		_test_eof36: cs = 36;
		goto _test_eof; 
		_test_eof37: cs = 37;
		goto _test_eof; 
		_test_eof38: cs = 38;
		goto _test_eof; 
		
		_test_eof: {}
		if ( p == eof  )
		{
			switch ( cs  ) {
				case 13:
				goto ctr48;
				case 14:
				goto ctr109;
				case 1:
				goto ctr17;
				case 2:
				goto ctr17;
				case 15:
				goto ctr109;
				case 16:
				goto ctr109;
				case 3:
				goto ctr17;
				case 4:
				goto ctr17;
				case 17:
				goto ctr109;
				case 18:
				goto ctr109;
				case 19:
				goto ctr109;
				case 20:
				goto ctr67;
				case 21:
				goto ctr109;
				case 5:
				goto ctr23;
				case 22:
				goto ctr77;
				case 6:
				goto ctr17;
				case 7:
				goto ctr17;
				case 23:
				goto ctr77;
				case 24:
				goto ctr109;
				case 8:
				goto ctr23;
				case 9:
				goto ctr23;
				case 10:
				goto ctr23;
				case 25:
				goto ctr99;
				case 26:
				goto ctr88;
				case 27:
				goto ctr88;
				case 28:
				goto ctr99;
				case 29:
				goto ctr99;
				case 11:
				goto ctr27;
				case 30:
				goto ctr97;
				case 31:
				goto ctr97;
				case 32:
				goto ctr99;
				case 33:
				goto ctr109;
				case 34:
				goto ctr109;
				case 35:
				goto ctr106;
				case 36:
				goto ctr106;
				case 37:
				goto ctr109;
				case 38:
				goto ctr109;
				
			}
		}
		
		
		_out: {}
	}
	cout << "P: " << (p - data) << endl;
}

int Scanner::finish( )
{
	if ( cs == Scanner_error )
	return -1;
	if ( cs >= Scanner_first_final )
	return 1;
	return 0;
}


void Scanner::token( int tok )
{
	const char *data = ts;
	int len = te - ts;
	cout << "<" << tok << "> ";
	for ( int i = 0; i < len; i++ )
	cout << data[i];
	cout << '\n';
}

void test( const char *buf )
{
	int len = strlen( buf );
	std::ios::sync_with_stdio(false);
	Scanner scanner;
	scanner.init();
	
	scanner.execute( buf, len );
	if ( scanner.cs == Scanner_error ) {
		/* Machine failed before finding a token. */
		cout << "PARSE ERROR" << endl;
	}
	
	/* FIXME: Last token may get lost. */
	scanner.finish();
}

int main()
{
	test(
	"\"\\\"hi\" /*\n"
	"*/\n"
	"44 .44\n"
	"44. 44\n"
	"44 . 44\n"
	"44.44\n"
	"_hithere22"
	);
	
	test(
	"'\\''\"\\n\\d'\\\"\"\n"
	"hi\n"
	"99\n"
	".99\n"
	"99e-4\n"
	"->*\n"
	"||\n"
	"0x98\n"
	"0x\n"
	"//\n"
	"/* * */"
	);
	
	test(
	"'\n"
	"'\n"
	);
	
}

