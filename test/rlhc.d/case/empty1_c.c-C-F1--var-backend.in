host( "working/empty1_c.rl", 1 ) @{/*
	* @@LANG: c
	* @@GENERATED: true
	*/
	
	#include <string.h>
	#include <stdio.h>
	
	
	
	
	
	
	
	
}@
array char _empty1_trans_keys( 0, 1 ) = { 1, 0, 1, 0, 0 };

array s8 _empty1_char_class( 0, 0 ) = { 0 };

array s8 _empty1_index_offsets( 0, 0 ) = { 0, 0, 0 };

array s8 _empty1_indices( 0, 0 ) = { 0 };

array s8 _empty1_index_defaults( 0, 0 ) = { 0, 0, 0 };

array s8 _empty1_trans_cond_spaces( -1, 0 ) = { -1, 0 };

array s8 _empty1_cond_targs( 0, 0 ) = { 0, 0 };

array s8 _empty1_cond_actions( 0, 0 ) = { 0, 0 };

array s8 _empty1_nfa_targs( 0, 0 ) = { 0, 0 };

array s8 _empty1_nfa_offsets( 0, 0 ) = { 0, 0, 0 };

array s8 _empty1_nfa_push_actions( 0, 0 ) = { 0, 0 };

array s8 _empty1_nfa_pop_trans( 0, 0 ) = { 0, 0 };

value int empty1_start = 1;
value int empty1_first_final = 2;
value int empty1_error = 0;

value int empty1_en_main = 1;

host( "working/empty1_c.rl", 20 ) @{
	int cs;
	int blen;
	char buffer[1024];
	
	void init()
	{
	}@
	{
		cs = cast(int)empty1_start;
	}
	host( "working/empty1_c.rl", 27 ) @{
	}
	
	void exec( char *data, int len )
	{
		char *p = data;
		char *pe = data + len;
	}@
	{
		uint _trans = 0;
		uint _have = 0;
		uint _cont = 1;
		while ( _cont == 1 ) {
			
			if ( cs == 0 )
			_cont = 0;
			_have = 0;
			if ( p == pe ) {
				if ( _have == 0 )
				_cont = 0;
			}
			if ( _cont == 1 ) {
				if ( _have == 0 ) {
					_trans = cast(uint)_empty1_index_defaults[cs];
				}
				if ( _cont == 1 ) {
					cs = cast(int)_empty1_cond_targs[_trans];
					
					if ( cs == 0 )
					_cont = 0;
					if ( _cont == 1 )
					p += 1;
					
				}}
		}
	}
	host( "working/empty1_c.rl", 34 ) @{
	}
	
	void finish( )
	{
		if ( cs >= empty1_first_final )
		printf( "ACCEPT\n" );
		else
		printf( "FAIL\n" );
	}
	
	char *inp[] = {
		"",
		"x",
	};
	
	int inplen = 2;
	
	int main( )
	{
		int i;
		for ( i = 0; i < inplen; i++ ) {
			init();
			exec( inp[i], strlen(inp[i]) );
			finish();
		}
		return 0;
	}
	
}@