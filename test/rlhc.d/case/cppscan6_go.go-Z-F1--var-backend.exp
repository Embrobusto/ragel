package main
import "fmt"

var ts  int ;
var te  int ;
var act  int ;
var token  int ;




var cs int;
var blen int;
var buffer [1024] byte;

var _scanner_trans_keys [] byte  = [] byte  { 1, 0, 0, 24, 1, 0, 0, 24, 1, 0, 11, 11, 9, 14, 13, 14, 2, 2, 2, 12, 0, 0, 13, 20, 2, 28, 2, 28, 16, 16, 16, 16, 6, 16, 16, 16, 9, 16, 10, 17, 8, 8, 8, 14, 13, 26, 13, 26, 2, 16, 11, 27, 11, 26, 13, 26, 11, 26, 15, 15, 16, 16, 13, 27, 3, 27, 16, 16, 16, 28, 0 }
var _scanner_char_class [] int8  = [] int8  { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 4, 5, 6, 7, 4, 4, 8, 9, 4, 10, 11, 12, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 4, 4, 16, 17, 4, 4, 18, 18, 18, 18, 19, 20, 21, 21, 21, 21, 21, 22, 21, 21, 21, 21, 21, 21, 21, 21, 23, 21, 21, 21, 21, 21, 4, 24, 4, 25, 21, 4, 18, 18, 18, 18, 19, 20, 21, 21, 21, 21, 21, 26, 21, 21, 21, 21, 21, 21, 21, 21, 23, 21, 21, 27, 21, 21, 4, 28, 4, 4, 0  }
var _scanner_index_offsets [] int16  = [] int16  { 0, 0, 25, 25, 50, 50, 51, 57, 59, 60, 71, 72, 80, 107, 134, 135, 136, 147, 148, 156, 164, 165, 172, 186, 200, 215, 232, 248, 262, 278, 279, 280, 295, 320, 321, 0  }
var _scanner_indicies [] int8  = [] int8  { 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 8, 9, 9, 0, 0, 10, 10, 10, 10, 12, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 15, 17, 17, 16, 16, 16, 17, 17, 17, 19, 1, 20, 21, 22, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 20, 32, 32, 32, 32, 33, 32, 20, 34, 32, 32, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 39, 40, 37, 37, 37, 37, 37, 37, 37, 37, 37, 41, 42, 43, 37, 37, 37, 37, 37, 37, 44, 45, 37, 37, 37, 37, 37, 46, 47, 49, 50, 37, 37, 51, 37, 52, 52, 52, 52, 53, 53, 53, 53, 54, 55, 53, 55, 53, 53, 53, 55, 10, 10, 53, 53, 53, 53, 53, 55, 53, 55, 53, 53, 53, 55, 11, 37, 37, 37, 37, 37, 37, 37, 37, 37, 14, 37, 37, 37, 56, 52, 57, 58, 58, 57, 57, 57, 57, 54, 57, 57, 59, 59, 57, 57, 59, 60, 52, 61, 58, 58, 61, 61, 61, 61, 54, 61, 61, 62, 62, 61, 61, 62, 17, 17, 63, 63, 63, 17, 17, 17, 63, 64, 64, 63, 63, 64, 52, 57, 29, 29, 57, 57, 57, 57, 54, 57, 57, 59, 59, 57, 57, 59, 65, 66, 32, 32, 67, 67, 67, 32, 32, 32, 32, 32, 32, 67, 67, 32, 32, 1, 67, 67, 67, 4, 67, 67, 67, 67, 67, 32, 32, 67, 67, 67, 32, 32, 32, 32, 32, 32, 67, 67, 32, 32, 68, 69, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 70, 0  }
var _scanner_index_defaults [] int8  = [] int8  { 0, 1, 1, 4, 4, 7, 0, 0, 11, 11, 14, 16, 18, 18, 37, 37, 37, 37, 37, 37, 48, 37, 53, 53, 37, 57, 61, 63, 57, 37, 37, 67, 67, 37, 37, 0  }
var _scanner_trans_cond_spaces [] int8  = [] int8  { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0  }
var _scanner_cond_targs [] int8  = [] int8  { 12, 1, 12, 2, 3, 12, 4, 12, 12, 7, 23, 8, 9, 12, 10, 12, 12, 27, 13, 14, 12, 15, 16, 17, 18, 19, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20, 12, 12, 12, 5, 22, 12, 6, 12, 12, 12, 26, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0  }
var _scanner_cond_actions [] int8  = [] int8  { 1, 0, 2, 0, 0, 3, 0, 4, 5, 0, 0, 0, 0, 6, 0, 7, 8, 0, 0, 0, 11, 0, 0, 0, 0, 0, 12, 12, 13, 13, 0, 0, 0, 14, 0, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 0, 29, 30, 0, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0  }
var _scanner_to_state_actions [] int8  = [] int8  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  }
var _scanner_from_state_actions [] int8  = [] int8  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  }
var _scanner_eof_trans [] int8  = [] int8  { 0, 1, 1, 1, 1, 8, 1, 1, 8, 8, 8, 17, 0, 37, 38, 38, 38, 38, 38, 38, 49, 38, 54, 54, 38, 58, 62, 64, 58, 38, 38, 68, 68, 38, 38, 0  }
var _scanner_nfa_targs [] int8  = [] int8  { 0, 0  }
var _scanner_nfa_offsets [] int8  = [] int8  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  }
var _scanner_nfa_push_actions [] int8  = [] int8  { 0, 0  }
var _scanner_nfa_pop_trans [] int8  = [] int8  { 0, 0  }
var scanner_start  int  = 12
var scanner_first_final  int  = 12
var scanner_error  int  = 0
var scanner_en_main  int  = 12
func prepare() {

	{
		cs = int(scanner_start);
		ts = 0;
		te = 0;
		act = 0;
	}
}

func exec(data string) {
	var p int = 0
	var pe int = len(data)
	var eof int = pe
	
	{
		var  _trans  uint   = 0
		var  _have  uint   = 0
		var  _cont  uint   = 1
		var  _keys int
		var  _inds int
		for _cont == 1  {
			{
			
				if cs == 0  {
					_cont = 0;
					
				}
				_have = 0;
				if p == pe  {
					{
						if p == eof  {
							{
								if _scanner_eof_trans[cs] > 0  {
									{
										_trans = uint(_scanner_eof_trans[cs] )- 1;
										_have = 1;
									}
									
								}
								if _have == 0  {
									{
									}
									
								}
							}
							
							
						}
						if _have == 0  {
							_cont = 0;
							
						}
					}
					
				}
				if _cont == 1  {
					{
						if _have == 0  {
							{
								switch _scanner_from_state_actions[cs]  {
									case 10 :
									{{ts = p;
										}}
									
									break;
									
								}
								_keys = int((cs<<1) );
								_inds = int(_scanner_index_offsets[cs] );
								switch {
									case ( data[p ]) <= 126 && ( data[p ]) >= 10 :
									{
										var  _ic  int   = int(_scanner_char_class[int(( data[p ]) )- 10])
										switch {
											case _ic <= int(_scanner_trans_keys[_keys+1 ])&& _ic >= int(_scanner_trans_keys[_keys ]):
											_trans = uint(_scanner_indicies[_inds + int(( _ic - int(_scanner_trans_keys[_keys ]))  )]);
											
											default:
											_trans = uint(_scanner_index_defaults[cs]);
											
										}
									}
									
									default:
									{
										_trans = uint(_scanner_index_defaults[cs]);
									}
									
									
								}
							}
							
						}
						if _cont == 1  {
							{
								cs = int(_scanner_cond_targs[_trans]);
								switch _scanner_cond_actions[_trans]  {
									case 12 :
									{{te = p+1;
										}}
									
									break;
									case 3 :
									{{te = p+1;
											{token = 193;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 2 :
									{{te = p+1;
											{token = 192;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 31 :
									{{te = p+1;
											{token = 194;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 35 :
									{{te = p+1;
											{token = 218;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 37 :
									{{te = p+1;
											{token = 219;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 39 :
									{{te = p+1;
											{token = 220;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 40 :
									{{te = p+1;
											{token = 197;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 41 :
									{{te = p+1;
											{token = 223;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 17 :
									{{te = p+1;
											{token = 224;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 19 :
									{{te = p+1;
											{token = 225;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 45 :
									{{te = p+1;
											{token = 226;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 21 :
									{{te = p+1;
											{token = 227;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 32 :
									{{te = p+1;
											{token = 228;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 18 :
									{{te = p+1;
											{token = 229;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 23 :
									{{te = p+1;
											{token = 230;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 25 :
									{{te = p+1;
											{token = 231;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 20 :
									{{te = p+1;
											{token = 232;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 43 :
									{{te = p+1;
											{token = 233;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 44 :
									{{te = p+1;
											{token = 234;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 22 :
									{{te = p+1;
											{token = 212;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 24 :
									{{te = p+1;
											{token = 213;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 27 :
									{{te = p+1;
											{token = 214;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 28 :
									{{te = p+1;
											{token = 215;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 5 :
									{{te = p+1;
											{token = 240;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 11 :
									{{te = p+1;
											{token = ( int ) ( data[ts] )
												;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 6 :
									{{te = p+1;
											{token = 242;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 7 :
									{{te = p+1;
											{token = 242;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 42 :
									{{te = p;
											p = p - 1;
											{token = 195;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 30 :
									{{te = p;
											p = p - 1;
											{token = 194;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 33 :
									{{te = p;
											p = p - 1;
											{token = 218;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 36 :
									{{te = p;
											p = p - 1;
											{token = 219;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 38 :
									{{te = p;
											p = p - 1;
											{token = 220;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 26 :
									{{te = p;
											p = p - 1;
											{token = 211;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 16 :
									{{te = p;
											p = p - 1;
											{token = ( int ) ( data[ts] )
												;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 15 :
									{{te = p;
											p = p - 1;
											{token = 241;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 8 :
									{{p = ((te))-1;
											{token = 218;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 4 :
									{{p = ((te))-1;
											{token = ( int ) ( data[ts] )
												;
												fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
										}}
									
									break;
									case 1 :
									{{switch act  {
												case 0 :
												{{cs = 0;
													}}
												
												break;
												case 3 :
												p = ((te))-1;
												{token = 195;
													fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
												
												break;
												case 4 :
												p = ((te))-1;
												{token = 194;
													fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
												
												break;
												case 5 :
												p = ((te))-1;
												{token = 218;
													fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
												
												break;
												case 6 :
												p = ((te))-1;
												{token = 219;
													fmt.Print( "<" );fmt.Print( token );fmt.Print( "> " );fmt.Print( data[ts:te] );fmt.Print( "\n" );}
												
												break;
												
											}
										}
									}
									
									break;
									case 14 :
									{{te = p+1;
										}}
									{{act = 3;
										}}
									
									break;
									case 29 :
									{{te = p+1;
										}}
									{{act = 4;
										}}
									
									break;
									case 13 :
									{{te = p+1;
										}}
									{{act = 5;
										}}
									
									break;
									case 34 :
									{{te = p+1;
										}}
									{{act = 6;
										}}
									
									break;
									
								}
								switch _scanner_to_state_actions[cs]  {
									case 9 :
									{{ts = 0;
										}}
									{{act = 0;
										}}
									
									break;
									
								}
								if cs == 0  {
									_cont = 0;
									
								}
								if _cont == 1  {
									p += 1;
									
								}
							}
						}
					}
					
				}
			}
			
		}
	}
}
func finish() {
	if cs >= scanner_first_final {
		fmt.Println("ACCEPT")
	} else {
		fmt.Println("FAIL")
	}
}
var inp []string = []string {
	"\"\\\"hi\" /!\n!/\n44 .44\n44. 44\n44 . 44\n44.44\n_hithere22",
	"'\\''\"\\n\\d'\\\"\"\nhi\n99\n.99\n99e-4\n->*\n||\n0x98\n0x\n//\n/! * !/",
	"'\n'\n",
};

func main() {
	for _, data := range inp {
		prepare()
		exec(data)
		finish()
	}
}
