class scan3_java
{
	int
	ts ;
	int
	te ;
	int act ;
	int token ;
	
	
	
	
	
	private static char  _scanner_trans_keys [] = { 1, 0, 0, 1, 1, 0, 0,  };
	private static byte  _scanner_char_class [] = { 0, 1, 0 ,  };
	private static byte  _scanner_index_offsets [] = { 0, 0, 2, 0 ,  };
	private static byte  _scanner_indicies [] = { 0, 2, 0 ,  };
	private static byte  _scanner_index_defaults [] = { 0, 1, 4, 0 ,  };
	private static byte  _scanner_trans_cond_spaces [] = { -1, -1, -1, -1, -1, 0 ,  };
	private static byte  _scanner_cond_targs [] = { 2, 0, 2, 1, 2, 0 ,  };
	private static byte  _scanner_cond_actions [] = { 3, 0, 4, 5, 6, 0 ,  };
	private static byte  _scanner_to_state_actions [] = { 0, 1, 0, 0 ,  };
	private static byte  _scanner_from_state_actions [] = { 0, 2, 0, 0 ,  };
	private static byte  _scanner_eof_trans [] = { 0, 0, 4, 0 ,  };
	private static byte  _scanner_nfa_targs [] = { 0, 0 ,  };
	private static byte  _scanner_nfa_offsets [] = { 0, 0, 0, 0 ,  };
	private static byte  _scanner_nfa_push_actions [] = { 0, 0 ,  };
	private static byte  _scanner_nfa_pop_trans [] = { 0, 0 ,  };
	private static int  scanner_start  = 1;
	private static int  scanner_first_final  = 1;
	private static int  scanner_error  = 0;
	private static int  scanner_en_main  = 1;
	int cs;
	
	void init()
	{
		{
			cs = (int)scanner_start;
			ts = 0;
			te = 0;
			act = 0;
			
		}
	}
	
	void exec( char data[], int len )
	{
		char buffer [] = new char[1024];
		int blen = 0;
		int p = 0;
		int pe = len;
		
		int eof = len;
		String _s;
		{
			int _trans = 0;
			int _keys;
			int _inds;
			int _goto_targ = 0;
			_goto: while ( true ) {
				switch ( _goto_targ ) {
					case 0:
					if ( p == pe  )
					{
						_goto_targ = 4;
						if (true)
						continue _goto;
					}
					
					if ( cs == 0  )
					{
						_goto_targ = 5;
						if (true)
						continue _goto;
					}
					
					case 1:
					switch ( _scanner_from_state_actions[cs]  ) {
						case 2 :
						{
							{
								ts = p;
								
							}
							
						}
						
						break;
						
					}
					_keys = (cs<<1) ;
					_inds = _scanner_index_offsets[cs] ;
					if ( ( data[p ]) <= 98 && ( data[p ]) >= 97  )
					{
						int _ic = (int)_scanner_char_class[(int)( data[p ]) - 97];
						if ( _ic <= (int)_scanner_trans_keys[_keys+1 ]&& _ic >= (int)_scanner_trans_keys[_keys ] )
						_trans = (int)_scanner_indicies[_inds + (int)( _ic - (int)_scanner_trans_keys[_keys ])  ];
						
						else
						_trans = (int)_scanner_index_defaults[cs];
						
						
					}
					
					else
					{
						_trans = (int)_scanner_index_defaults[cs];
						
					}
					
					{
						_goto_targ = 2;
						if (true)
						continue _goto;
					}
					
					case 2:
					cs = (int)_scanner_cond_targs[_trans];
					if ( _scanner_cond_actions[_trans] == 0  )
					{
						_goto_targ = 3;
						if (true)
						continue _goto;
					}
					
					switch ( _scanner_cond_actions[_trans]  ) {
						case 5 :
						{
							{
								switch ( act  ) {
									case 1 :
									p = ((te))-1;
									{
										System.out.print( "pat1\n" );
										
									}
									
									break;
									case 2 :
									p = ((te))-1;
									{
										System.out.print( "pat2\n" );
										
									}
									
									break;
									case 3 :
									p = ((te))-1;
									{
										System.out.print( "pat3\n" );
										
									}
									
									break;
									
								}
								
							}
							
							
						}
						
						break;
						case 3 :
						{
							{
								te = p+1;
								
							}
							
						}
						{
							{
								act = 1;
								
							}
							
						}
						
						break;
						case 4 :
						{
							{
								te = p+1;
								
							}
							
						}
						{
							{
								act = 2;
								
							}
							
						}
						
						break;
						case 6 :
						{
							{
								te = p+1;
								
							}
							
						}
						{
							{
								act = 3;
								
							}
							
						}
						
						break;
						
					}
					
					case 3:
					switch ( _scanner_to_state_actions[cs]  ) {
						case 1 :
						{
							{
								ts = 0;
								
							}
							
						}
						
						break;
						
					}
					if ( cs == 0  )
					{
						_goto_targ = 5;
						if (true)
						continue _goto;
					}
					
					p+= 1;
					if ( p != pe  )
					{
						_goto_targ = 1;
						if (true)
						continue _goto;
					}
					
					
					case 4:
					{
					
					}
					if ( p == eof  )
					{
						if ( _scanner_eof_trans[cs] > 0  )
						{
							_trans = (int)_scanner_eof_trans[cs] - 1;
							{
								_goto_targ = 2;
								if (true)
								continue _goto;
							}
							
						}
						
						
					}
					
					
					case 5:
					{
					
					}
					
					
				}
				break;
			}
			
		}
	}
	
	void finish( )
	{
		if ( cs >= scanner_first_final )
		System.out.println( "ACCEPT" );
		else
		System.out.println( "FAIL" );
	}
	
	static final String inp[] = {
		"ab89",
	};
	
	static final int inplen = 1;
	
	public static void main (String[] args)
	{
		scan3_java machine = new scan3_java();
		for ( int i = 0; i < inplen; i++ ) {
			machine.init();
			machine.exec( inp[i].toCharArray(), inp[i].length() );
			machine.finish();
		}
	}
}
