const _state_chart_trans_keys = UInt8[1, 0, 4, 4, 0, 4, 2, 4, 0 , ]
const _state_chart_char_class = Int8[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0 , ]
const _state_chart_index_offsets = Int8[0, 0, 1, 6, 0 , ]
const _state_chart_indices = Int8[0, 2, 1, 1, 1, 0, 3, 4, 5, 0 , ]
const _state_chart_index_defaults = Int8[0, 1, 1, 1, 0 , ]
const _state_chart_trans_cond_spaces = Int8[-1, -1, -1, -1, -1, -1, 0 , ]
const _state_chart_cond_targs = Int8[2, 0, 3, 1, 1, 2, 0 , ]
const _state_chart_cond_actions = Int8[1, 0, 2, 3, 4, 5, 0 , ]
const _state_chart_nfa_targs = Int8[0, 0 , ]
const _state_chart_nfa_offsets = Int8[0, 0, 0, 0, 0 , ]
const _state_chart_nfa_push_actions = Int8[0, 0 , ]
const _state_chart_nfa_pop_trans = Int8[0, 0 , ]
const state_chart_start  = 3
const state_chart_first_final  = 3
const state_chart_error  = 0
const state_chart_en_main  = 3
function m( data::AbstractString )
	p = 0
	pe = length(data)
	eof = length(data)
	cs = 0
	buffer = ""
	neg = 0;
	value = 0;
	value = 0;
	neg = 0;
	
	cs = convert(Int, state_chart_start )
	_trans = 0;
	_have = 0;
	_cont = 1;
	_keys = 0;
	_inds = 0;
	while _cont == 1 
		if cs == 0 
			_cont = 0
			
		end
		_have = 0
		if p == pe 
			if _have == 0 
				_cont = 0
				
			end
			
		end
		if _cont == 1 
			if _have == 0 
				_keys = (cs<<1)
				_inds = _state_chart_index_offsets[1+(cs)]
				if (data[1+(p )])<= 57 && (data[1+(p )])>= 10 
					_ic = convert(Int, _state_chart_char_class[1+(convert(Int, (data[1+(p )]) )- 10)] );
					if _ic <= convert(Int, _state_chart_trans_keys[1+(_keys+1 )] )&& _ic >= convert(Int, _state_chart_trans_keys[1+(_keys )] )
						_trans = convert(UInt, _state_chart_indices[1+(_inds + convert(Int, (_ic - convert(Int, _state_chart_trans_keys[1+(_keys )] )) ))] )
						
					else
						_trans = convert(UInt, _state_chart_index_defaults[1+(cs)] )
						
					end
					
				else
					_trans = convert(UInt, _state_chart_index_defaults[1+(cs)] )
					
				end
				
			end
			if _cont == 1 
				cs = convert(Int, _state_chart_cond_targs[1+(_trans)] )
				if _state_chart_cond_actions[1+(_trans)] == 3 
					neg = 0;
					value = 0;
					
				elseif _state_chart_cond_actions[1+(_trans)] == 1 
					value = value * 10 + convert( Int, ( ((data[1+(p )])) - 48 ) ) 
					;
					
				elseif _state_chart_cond_actions[1+(_trans)] == 4 
					neg = 0;
					value = 0;
					neg = 1;
					
				elseif _state_chart_cond_actions[1+(_trans)] == 5 
					neg = 0;
					value = 0;
					value = value * 10 + convert( Int, ( ((data[1+(p )])) - 48 ) ) 
					;
					
				elseif _state_chart_cond_actions[1+(_trans)] == 2 
					if ( neg != 0 )
						value = -1 * value;
						
					end
					print( value );
					print( "\n" );
					
				end
				if cs == 0 
					_cont = 0
					
				end
				if _cont == 1 
					p += 1
					
				end
				
			end
			
		end
		
	end
	if ( cs >= state_chart_first_final )
		println( "ACCEPT" );
	else
		println( "FAIL" );
	end
end

m( "1\n" );
m( "12\n" );
m( "222222\n" );
m( "+2123\n" );
m( "213 3213\n" );
m( "-12321\n" );
m( "--123\n" );
m( "-99\n" );
m( " -3000\n" );
