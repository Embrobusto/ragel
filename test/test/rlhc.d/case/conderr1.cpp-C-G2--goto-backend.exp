#include <iostream>
#include <string.h>
using std::cout;
using std::endl;



static const int  foo_start  = 1;
static const int  foo_first_final  = 3;
static const int  foo_en_main  = 1;
static const char  _foo_nfa_targs [] = { 0, 0 ,  };
static const char  _foo_nfa_offsets [] = { 0, 0, 0, 0, 0 ,  };
static const char  _foo_nfa_push_actions [] = { 0, 0 ,  };
static const char  _foo_nfa_pop_trans [] = { 0, 0 ,  };
void test( int c, const char *str )
{
	int cs = foo_start;
	const char *p = str;
	const char *pe = str + strlen( str );
	const char *eof = pe;
	
	cout << "run:" << endl;
	
	{
		if ( p == pe  )
		goto _test_eof;
		
		switch ( cs  ) {
			case 1:
			goto st_case_1;
			case 0:
			goto st_case_0;
			case 2:
			goto st_case_2;
			case 3:
			goto st_case_3;
			
		}
		goto st_out;
		st_case_1:
		if ( ((*( p  ))
		)== 97  )
		{
			int ck = 0;
			if ( (c) )
			ck += 1;
			
			if ( ck > 0  )
			{
				goto st2;
			} 
			else
			{
				goto ctr1;
			}
			
			
		}
		
		{
			goto ctr0;
		}
		ctr1:
		{
			cout << "  bail" << endl; 
		}
		
		
		goto st0;
		ctr0:
		{
			cout << "  bail" << endl; 
		}
		
		
		goto st0;
		st_case_0:
		st0:
		cs = 0;
		goto _out;
		st2:
		p+= 1;
		if ( p == pe  )
		goto _test_eof2;
		
		st_case_2:
		switch ( ((*( p  ))
		) ) {
			case 10:
			{
				goto st3;
			}
			case 97:
			{
				int ck = 0;
				if ( (c) )
				ck += 1;
				
				if ( ck > 0  )
				{
					goto st2;
				} 
				else
				{
					goto ctr1;
				}
				
				
			}
			
		}
		{
			goto ctr0;
		}
		st3:
		p+= 1;
		if ( p == pe  )
		goto _test_eof3;
		
		st_case_3:
		{
			goto st0;
		}
		st_out:
		_test_eof2: cs = 2;
		goto _test_eof; 
		_test_eof3: cs = 3;
		goto _test_eof; 
		
		_test_eof: {}
		if ( p == eof  )
		{
			switch ( cs  ) {
				case 1:
				case 2:
				{
					cout << "  bail" << endl; 
				}
				
				break;
				
			}
		}
		
		
		_out: {}
	}
	if ( cs >= foo_first_final )
	cout << "  success" << endl;
	else
	cout << "  failure" << endl;
	cout << endl;
}

int main()
{
	test( 1, "aa\n" );
	test( 1, "ab\n" );
	test( 0, "aa\n" );
	test( 0, "ab\n" );
	return 0;
}

