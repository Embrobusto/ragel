include 'ragel.lm'
include 'reducer.lm'
include 'host.lm'
include 'hostred.lm'

export RagelError: str

# File name. The open is expected to succeed. It is tested before the colm
# program is called.
A: list_el<str> = argv->pop_head_el()
GblFileName = A->value

# Remaining items are include paths.
while ( argv->length > 0 ) {
	A = argv->pop_head_el()
	GblIncludePaths->push_tail_el( A )
}

if ( arg0 == "rlparse" ) {
	Stream: stream = open( GblFileName, "r" )
	reduce TopLevel start[ Stream ]
	RagelError = error
}
elsif ( arg0 == "rlpostfix" ) {
	Stream: stream = open( GblFileName, "r" )
	read_reduce TopLevel start[ Stream ]
	RagelError = error
}
